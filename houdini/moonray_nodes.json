{
    "HairColorCorrectMaterial": {
        "moonray_type": "DwaBaseHairLayerable", 
        "moonray_name": "HairColorCorrectMaterial", 
        "folders_sorted": [
            "Hue/Sat/Gain", 
            "TMI"
        ], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Enable/disable all color corrections", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 4
            }, 
            "input_hair_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_hair_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Hair Material", 
                "interface": "DwaBaseHairLayerable", 
                "moonray_name": "input_hair_material", 
                "order": 3
            }, 
            "TMI_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "TMI_enabled", 
                "help": "enables the TMI parameters", 
                "moonray_type": "Bool", 
                "houdini_label": "Enabled", 
                "moonray_name": "TMI_enabled", 
                "order": 9
            }, 
            "hue_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue_shift", 
                "help": "shifts the hue of the input (spectrum range is 0-1)", 
                "moonray_type": "Float", 
                "houdini_label": "Hue Shift", 
                "bindable": true, 
                "moonray_name": "hue_shift", 
                "order": 6
            }, 
            "saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "desaturates the input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "bindable": true, 
                "moonray_name": "saturation", 
                "order": 7
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "gain": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "multiplies the input channels by the specified value", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 8
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Rgb", 
                "display": "tmi", 
                "houdini_label": "TMI", 
                "moonray_name": "TMI", 
                "order": 10
            }
        }, 
        "folders_with_parms": {
            "TMI": [
                "TMI_enabled", 
                "TMI"
            ], 
            "Hue/Sat/Gain": [
                "hue_shift", 
                "saturation", 
                "gain"
            ]
        }
    }, 
    "ListMap": {
        "moonray_type": "Map", 
        "moonray_name": "ListMap", 
        "folders_sorted": [], 
        "parms": {
            "map19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map19", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map19", 
                "interface": "Map", 
                "moonray_name": "map19", 
                "order": 19
            }, 
            "map10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map10", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map10", 
                "interface": "Map", 
                "moonray_name": "map10", 
                "order": 10
            }, 
            "map16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map16", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map16", 
                "interface": "Map", 
                "moonray_name": "map16", 
                "order": 16
            }, 
            "map11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map11", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map11", 
                "interface": "Map", 
                "moonray_name": "map11", 
                "order": 11
            }, 
            "map17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map17", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map17", 
                "interface": "Map", 
                "moonray_name": "map17", 
                "order": 17
            }, 
            "map13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map13", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map13", 
                "interface": "Map", 
                "moonray_name": "map13", 
                "order": 13
            }, 
            "map12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map12", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map12", 
                "interface": "Map", 
                "moonray_name": "map12", 
                "order": 12
            }, 
            "map2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map2", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map2", 
                "interface": "Map", 
                "moonray_name": "map2", 
                "order": 2
            }, 
            "map3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map3", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map3", 
                "interface": "Map", 
                "moonray_name": "map3", 
                "order": 3
            }, 
            "map0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map0", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map0", 
                "interface": "Map", 
                "moonray_name": "map0", 
                "order": 0
            }, 
            "map1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map1", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map1", 
                "interface": "Map", 
                "moonray_name": "map1", 
                "order": 1
            }, 
            "map6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map6", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map6", 
                "interface": "Map", 
                "moonray_name": "map6", 
                "order": 6
            }, 
            "map7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map7", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map7", 
                "interface": "Map", 
                "moonray_name": "map7", 
                "order": 7
            }, 
            "map4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map4", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map4", 
                "interface": "Map", 
                "moonray_name": "map4", 
                "order": 4
            }, 
            "map5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map5", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map5", 
                "interface": "Map", 
                "moonray_name": "map5", 
                "order": 5
            }, 
            "map18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map18", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map18", 
                "interface": "Map", 
                "moonray_name": "map18", 
                "order": 18
            }, 
            "map14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map14", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map14", 
                "interface": "Map", 
                "moonray_name": "map14", 
                "order": 14
            }, 
            "map8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map8", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map8", 
                "interface": "Map", 
                "moonray_name": "map8", 
                "order": 8
            }, 
            "map9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map9", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map9", 
                "interface": "Map", 
                "moonray_name": "map9", 
                "order": 9
            }, 
            "map15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "map15", 
                "help": "Map object reference", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map15", 
                "interface": "Map", 
                "moonray_name": "map15", 
                "order": 15
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ColorCorrectHsvMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectHsvMap", 
        "folders_sorted": [], 
        "parms": {
            "value_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "value_factor", 
                "help": "multiplies the value of the input", 
                "moonray_type": "Float", 
                "houdini_label": "Value Factor", 
                "bindable": true, 
                "moonray_name": "value_factor", 
                "order": 6, 
                "aliases": [
                    "value factor"
                ]
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "all attributes on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "value_contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "value_contrast", 
                "help": "modifies the contrast of the input's value (-1, 1)", 
                "moonray_type": "Float", 
                "houdini_label": "Value Contrast", 
                "moonray_name": "value_contrast", 
                "order": 7, 
                "aliases": [
                    "value contrast"
                ]
            }, 
            "hue_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue_shift", 
                "help": "shifts the hue of the input (360 rolls over back to 0)", 
                "moonray_type": "Float", 
                "houdini_label": "Hue Shift", 
                "bindable": true, 
                "moonray_name": "hue_shift", 
                "order": 2, 
                "aliases": [
                    "hue shift"
                ]
            }, 
            "value_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "value_shift", 
                "help": "shifts the value of the input (-1, 1)", 
                "moonray_type": "Float", 
                "houdini_label": "Value Shift", 
                "moonray_name": "value_shift", 
                "order": 8, 
                "aliases": [
                    "value shift"
                ]
            }, 
            "saturation_contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "saturation_contrast", 
                "help": "modifies the contrast of the input's saturation (-1, 1)", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation Contrast", 
                "moonray_name": "saturation_contrast", 
                "order": 4, 
                "aliases": [
                    "saturation contrast"
                ]
            }, 
            "saturation_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_factor", 
                "help": "multiplies the saturation of the input", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation Factor", 
                "bindable": true, 
                "moonray_name": "saturation_factor", 
                "order": 3, 
                "aliases": [
                    "saturation factor"
                ]
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "input color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "clamp": {
                "default_value": [
                    false
                ], 
                "houdini_name": "clamp", 
                "help": "clamps output to [0,1] range", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 9
            }, 
            "saturation_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "saturation_shift", 
                "help": "shifts the saturation of the input (-1, 1)", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation Shift", 
                "moonray_name": "saturation_shift", 
                "order": 5, 
                "aliases": [
                    "saturation shift"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "SphereLight": {
        "moonray_type": "Light", 
        "moonray_name": "SphereLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 40
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "radius", 
                "help": "Radius of the sphere.", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 36
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 39
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "sidedness": {
                "default_value": [
                    0
                ], 
                "houdini_name": "sidedness", 
                "help": "When set to 0 (regular), light is emitted from the outward-facing surface of the sphere. When set to 1 (reverse), light is emitted from the inward-facing surface of the sphere. There is no mode for emitting from both surfaces at the same time, but two sphere lights of opposing sidedness can be combined to achieve this effect.", 
                "moonray_type": "Int", 
                "menu": [
                    "regular", 
                    "reverse"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Sidedness", 
                "moonray_name": "sidedness", 
                "order": 37
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 38
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "radius", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "ConstantScalarMap": {
        "moonray_type": "Map", 
        "moonray_name": "ConstantScalarMap", 
        "folders_sorted": [], 
        "parms": {
            "scalar_value": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "scalar_value", 
                "help": "constant scalar value", 
                "moonray_type": "Float", 
                "houdini_label": "Scalar Value", 
                "moonray_name": "scalar_value", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "CutoutVolume": {
        "moonray_type": "Volume", 
        "moonray_name": "CutoutVolume", 
        "folders_sorted": [], 
        "parms": {
            "surface_opacity_threshold": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "surface_opacity_threshold", 
                "help": "Accumulated opacity that's considered the 'surface' for computing surface position and Z", 
                "moonray_type": "Float", 
                "houdini_label": "Surface Opacity Threshold", 
                "moonray_name": "surface_opacity_threshold", 
                "order": 4
            }, 
            "indirect_volume": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "indirect_volume", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Indirect Volume", 
                "interface": "Volume", 
                "moonray_name": "indirect_volume", 
                "order": 5, 
                "aliases": [
                    "indirect volume"
                ]
            }, 
            "bake_divisions": {
                "default_value": [
                    100
                ], 
                "houdini_name": "bake_divisions", 
                "help": "Divide widest axis by this many divisions", 
                "moonray_type": "Int", 
                "houdini_label": "Bake Divisions", 
                "moonray_name": "bake_divisions", 
                "order": 2
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 0
            }, 
            "bake_voxel_size": {
                "default_value": [
                    10.0
                ], 
                "houdini_name": "bake_voxel_size", 
                "help": "Size of voxel in world space", 
                "moonray_type": "Float", 
                "houdini_label": "Bake Voxel Size", 
                "moonray_name": "bake_voxel_size", 
                "order": 3
            }, 
            "bake_resolution_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bake_resolution_mode", 
                "help": "Toggle method to specify grid resolution of baked density grid.\n\t\tdefault: for shaders that are bound to vdb volumes, use vdb resolution. For shaders that are bounds to mesh geometriesuse 100 divisions\n\t\tdivisions: specify number of divisions.\n\t\tvoxel size: specify voxel size.", 
                "moonray_type": "Int", 
                "menu": [
                    "default", 
                    "divisions", 
                    "voxel size"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bake Resolution Mode", 
                "moonray_name": "bake_resolution_mode", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "Metadata": {
        "moonray_type": "Metadata", 
        "moonray_name": "Metadata", 
        "folders_sorted": [], 
        "parms": {
            "type": {
                "default_value": [], 
                "houdini_name": "type", 
                "help": "Allowed types for exr headers:\n\t\t\t* box2i\n\t\t\t* box2f\n\t\t\t* chromaticities\n\t\t\t* double\n\t\t\t* float\n\t\t\t* int\n\t\t\t* m33f\n\t\t\t* m44f\n\t\t\t* string\n\t\t\t* v2i\n\t\t\t* v2f\n\t\t\t* v3i\n\t\t\t* v3f", 
                "moonray_type": "StringVector", 
                "houdini_label": "Type", 
                "moonray_name": "type", 
                "order": 1
            }, 
            "name": {
                "default_value": [], 
                "houdini_name": "name", 
                "moonray_type": "StringVector", 
                "houdini_label": "Name", 
                "moonray_name": "name", 
                "order": 0
            }, 
            "value": {
                "default_value": [], 
                "houdini_name": "value", 
                "moonray_type": "StringVector", 
                "houdini_label": "Value", 
                "moonray_name": "value", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "SphericalCamera": {
        "moonray_type": "Camera", 
        "moonray_name": "SphericalCamera", 
        "folders_sorted": [
            "Frustum", 
            "Motion Blur", 
            "Render Masks", 
            "Medium"
        ], 
        "parms": {
            "mb_shutter_open": {
                "default_value": [
                    -0.25
                ], 
                "houdini_name": "mb_shutter_open", 
                "help": "Frame at which the shutter opens, i.e., the beginning of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Open", 
                "moonray_name": "mb_shutter_open", 
                "order": 3, 
                "aliases": [
                    "mb shutter open"
                ]
            }, 
            "far": {
                "default_value": [
                    10000.0
                ], 
                "houdini_name": "far", 
                "help": "Far clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Far", 
                "moonray_name": "far", 
                "order": 2
            }, 
            "pixel_sample_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "pixel_sample_map", 
                "help": "Map indicating the number of pixel samples that should be used per pixel (in uniform sampling mode). This is a multiplier on the global pixel sample count specified in SceneVariables. If the provided map has incompatible dimensions, it will be resized.", 
                "moonray_type": "String", 
                "houdini_label": "Pixel Sample Map", 
                "moonray_name": "pixel_sample_map", 
                "order": 6, 
                "aliases": [
                    "pixel sample map"
                ]
            }, 
            "mb_shutter_close": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "mb_shutter_close", 
                "help": "Frame at which the shutter closes, i.e., the end of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Close", 
                "moonray_name": "mb_shutter_close", 
                "order": 4, 
                "aliases": [
                    "mb shutter close"
                ]
            }, 
            "near": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "near", 
                "help": "Near clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Near", 
                "moonray_name": "near", 
                "order": 1
            }, 
            "medium_material": {
                "default_value": [], 
                "houdini_name": "medium_material", 
                "help": "The material the camera is 'inside'. If no medium_geometry is specified, ALL rays will have this initial index of refraction applied. ", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Material", 
                "moonray_name": "medium_material", 
                "order": 7, 
                "aliases": [
                    "medium material"
                ]
            }, 
            "mb_shutter_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mb_shutter_bias", 
                "help": "Biases the motion blur samples toward one end of the shutter interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Bias", 
                "moonray_name": "mb_shutter_bias", 
                "order": 5, 
                "aliases": [
                    "mb shutter bias"
                ]
            }, 
            "medium_geometry": {
                "default_value": [], 
                "houdini_name": "medium_geometry", 
                "help": "The geometry the camera is 'inside' to which you'd like the medium_material applied. (The use case for this is typically partially-submerged cameras)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Geometry", 
                "moonray_name": "medium_geometry", 
                "order": 8, 
                "aliases": [
                    "medium geometry"
                ]
            }
        }, 
        "folders_with_parms": {
            "Medium": [
                "medium_material", 
                "medium_geometry"
            ], 
            "Frustum": [
                "near", 
                "far"
            ], 
            "Motion Blur": [
                "mb_shutter_open", 
                "mb_shutter_close", 
                "mb_shutter_bias"
            ], 
            "Render Masks": [
                "pixel_sample_map"
            ]
        }
    }, 
    "DiskLight": {
        "moonray_type": "Light", 
        "moonray_name": "DiskLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 41
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "radius", 
                "help": "The radius of the DiskLight.", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 36
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 40
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "sidedness": {
                "default_value": [
                    0
                ], 
                "houdini_name": "sidedness", 
                "help": "When set to 0 (regular), light is emitted from the front-facing surface of the disk. When set to 1 (reverse), light is emitted from the back-facing surface of the disk. When set to 2 (2-sided), light is emitted from both surfaces of the disk. ", 
                "moonray_type": "Int", 
                "menu": [
                    "regular", 
                    "reverse", 
                    "2-sided"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Sidedness", 
                "moonray_name": "sidedness", 
                "order": 38
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "spread": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "spread", 
                "help": "The directionality of light emission. 1 is completely diffuse hemisphere. 0 is parallel to normal of light.", 
                "moonray_type": "Float", 
                "houdini_label": "Spread", 
                "moonray_name": "spread", 
                "order": 37
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 39
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "radius", 
                "spread", 
                "sidedness", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "CurvatureMap": {
        "moonray_type": "Map", 
        "moonray_name": "CurvatureMap", 
        "folders_sorted": [], 
        "parms": {
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 0
            }, 
            "scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "scale", 
                "moonray_type": "Float", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 2
            }, 
            "mode": {
                "default_value": [
                    3
                ], 
                "houdini_name": "mode", 
                "help": "The composite mode outputs the composite of convex curvature and concave curvature as grayscale ((concave - convex) * 0.5) + 0.5. The all mode outputs the convex curvature in the red channel, concave curvature in the green channel, and composite of both curvatures in the blue channel.", 
                "moonray_type": "Int", 
                "menu": [
                    "convex", 
                    "concave", 
                    "composite", 
                    "all"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 3
            }, 
            "power": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "power", 
                "moonray_type": "Float", 
                "houdini_label": "Power", 
                "moonray_name": "power", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "GeometrySet": {
        "moonray_type": "GeometrySet", 
        "moonray_name": "GeometrySet", 
        "folders_sorted": [], 
        "parms": {
            "geometries": {
                "default_value": [], 
                "houdini_name": "geometries", 
                "moonray_type": "SceneObjectIndexable", 
                "houdini_label": "Geometries", 
                "interface": "Geometry", 
                "moonray_name": "geometries", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "NoiseMap": {
        "moonray_type": "Map", 
        "moonray_name": "NoiseMap", 
        "folders_sorted": [
            "Flow Noise", 
            "4D", 
            "Adjustment", 
            "Space", 
            "Transform"
        ], 
        "parms": {
            "flow_advection_rate": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flow_advection_rate", 
                "help": "Rate of advection for flow noise", 
                "moonray_type": "Float", 
                "houdini_label": "Flow Advection Rate", 
                "bindable": true, 
                "moonray_name": "flow_advection_rate", 
                "order": 13, 
                "aliases": [
                    "flow advection rate"
                ]
            }, 
            "object_space": {
                "default_value": [], 
                "houdini_name": "object_space", 
                "help": "Directly connect object to use that object's space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object Space", 
                "interface": "Geometry", 
                "moonray_name": "object_space", 
                "order": 23, 
                "aliases": [
                    "object space"
                ]
            }, 
            "color": {
                "default_value": [
                    false
                ], 
                "houdini_name": "color", 
                "help": "Outputs RGB noise", 
                "moonray_type": "Bool", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 8
            }, 
            "use_4D_noise": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_4D_noise", 
                "help": "If on, 4-dimensional noise is used instead of 3-dimensional", 
                "moonray_type": "Bool", 
                "houdini_label": "Use 4D Noise", 
                "moonray_name": "use_4D_noise", 
                "order": 14, 
                "aliases": [
                    "use 4D noise"
                ]
            }, 
            "frequency_multiplier": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "frequency_multiplier", 
                "help": "Scalar multiplier for the frequency vector", 
                "moonray_type": "Float", 
                "houdini_label": "Frequency Multiplier", 
                "bindable": true, 
                "moonray_name": "frequency_multiplier", 
                "order": 1, 
                "aliases": [
                    "frequency multiplier"
                ]
            }, 
            "lacunarity": {
                "default_value": [
                    2.0
                ], 
                "houdini_name": "lacunarity", 
                "help": "Multiplier on the noise frequency per level", 
                "moonray_type": "Float", 
                "houdini_label": "Lacunarity", 
                "bindable": true, 
                "moonray_name": "lacunarity", 
                "order": 4
            }, 
            "distortion": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "distortion", 
                "help": "Warp input coordinate space with single noise level before looking up noise", 
                "moonray_type": "Float", 
                "houdini_label": "Distortion", 
                "bindable": true, 
                "moonray_name": "distortion", 
                "order": 6
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply the euler rotations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 28, 
                "aliases": [
                    "rotation order"
                ]
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "help": "Bias the noise towards 0 or 1", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 16
            }, 
            "smoothstep": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "smoothstep", 
                "help": "min/max values between which the smoothstep will interpolate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Smoothstep", 
                "bindable": true, 
                "moonray_name": "smoothstep", 
                "order": 20
            }, 
            "rotation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotation", 
                "help": "Rotates the noise in space based on the specified rotation order", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation", 
                "bindable": true, 
                "moonray_name": "rotation", 
                "order": 26
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Vector to scale the noise non-proportionally", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Scale", 
                "bindable": true, 
                "moonray_name": "scale", 
                "order": 27
            }, 
            "space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "space", 
                "help": "The space to calculate the noise in", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture", 
                    "input texture coordinates", 
                    "hair_surface_uv", 
                    "hair_closest_surface_uv"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 21
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 22, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Invert the final pattern", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 18
            }, 
            "distortion_noise_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "distortion_noise_type", 
                "help": "Type of noise to use for distortion.", 
                "moonray_type": "Int", 
                "menu": [
                    "perlin classic", 
                    "perlin simplex"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Distortion Noise Type", 
                "moonray_name": "distortion_noise_type", 
                "order": 7, 
                "aliases": [
                    "distortion noise type"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "camera used to define camera and screen space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 24
            }, 
            "persistence": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "persistence", 
                "help": "Multiplier on the noise amplitude per level", 
                "moonray_type": "Float", 
                "houdini_label": "Persistence", 
                "bindable": true, 
                "moonray_name": "persistence", 
                "order": 5
            }, 
            "noise_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "noise_type", 
                "help": "Type of noise to use. Simplex grid activates Flow Noise Angle and Advection", 
                "moonray_type": "Int", 
                "menu": [
                    "perlin classic", 
                    "perlin simplex"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Noise Type", 
                "moonray_name": "noise_type", 
                "order": 11, 
                "aliases": [
                    "noise type"
                ]
            }, 
            "max_level": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "max_level", 
                "help": "Number of octaves of noise to add together for the final result", 
                "moonray_type": "Float", 
                "houdini_label": "Max Level", 
                "bindable": true, 
                "moonray_name": "max_level", 
                "order": 3, 
                "aliases": [
                    "max level"
                ]
            }, 
            "transformation_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "transformation_order", 
                "help": "Order in which to apply the translation, rotation, and frequency", 
                "moonray_type": "Int", 
                "menu": [
                    "srt", 
                    "str", 
                    "rst", 
                    "rts", 
                    "tsr", 
                    "trs"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Transformation Order", 
                "moonray_name": "transformation_order", 
                "order": 29, 
                "aliases": [
                    "transformation order"
                ]
            }, 
            "gain": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "gain", 
                "help": "Apply gain to the noise", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 17
            }, 
            "translation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translation", 
                "help": "Translation of the noise in space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Translation", 
                "bindable": true, 
                "moonray_name": "translation", 
                "order": 25
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "The color value at 1 noise", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 10, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "help": "The color value at 0 noise", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 9, 
                "aliases": [
                    "color A"
                ]
            }, 
            "flow_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flow_angle", 
                "help": "Angle of rotation for flow noise", 
                "moonray_type": "Float", 
                "houdini_label": "Flow Angle", 
                "bindable": true, 
                "moonray_name": "flow_angle", 
                "order": 12, 
                "aliases": [
                    "flow angle"
                ]
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "The seed for the random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 0
            }, 
            "amplitude": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "amplitude", 
                "help": "Intensity of the noise", 
                "moonray_type": "Float", 
                "houdini_label": "Amplitude", 
                "bindable": true, 
                "moonray_name": "amplitude", 
                "order": 2
            }, 
            "time": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "time", 
                "help": "If use 4D noise is on, this is the value for the 4th dimension", 
                "moonray_type": "Float", 
                "houdini_label": "Time", 
                "bindable": true, 
                "moonray_name": "time", 
                "order": 15
            }, 
            "use_smoothstep": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_smoothstep", 
                "help": "Put the noise value through a smoothstep function defined by min/max", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Smoothstep", 
                "moonray_name": "use_smoothstep", 
                "order": 19, 
                "aliases": [
                    "use smoothstep"
                ]
            }
        }, 
        "folders_with_parms": {
            "4D": [
                "use_4D_noise", 
                "time"
            ], 
            "Adjustment": [
                "bias", 
                "gain", 
                "invert", 
                "use_smoothstep", 
                "smoothstep"
            ], 
            "Flow Noise": [
                "flow_angle", 
                "flow_advection_rate"
            ], 
            "Transform": [
                "translation", 
                "rotation", 
                "scale", 
                "rotation_order", 
                "transformation_order"
            ], 
            "Space": [
                "space", 
                "input_texture_coordinates", 
                "object_space", 
                "camera"
            ]
        }
    }, 
    "RampMap": {
        "moonray_type": "Map", 
        "moonray_name": "RampMap", 
        "folders_sorted": [
            "Ramp Knot", 
            "Ramp properties", 
            "Additional properties"
        ], 
        "parms": {
            "color_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "color_space", 
                "help": "Color space to perform interpolation in", 
                "moonray_type": "Int", 
                "menu": [
                    "rgb", 
                    "hsv", 
                    "hsl"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Color Space", 
                "moonray_name": "color_space", 
                "order": 8, 
                "aliases": [
                    "color space"
                ]
            }, 
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "moonray_type": "Int", 
                "menu": [
                    "default state coordinates", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 9, 
                "aliases": [
                    "texture coordinates"
                ]
            }, 
            "object": {
                "default_value": [], 
                "houdini_name": "object", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object", 
                "interface": "Geometry", 
                "moonray_name": "object", 
                "order": 6
            }, 
            "space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "space", 
                "help": "Only applies when 'texture coordinates' is set to 'default state coordinates'", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 5
            }, 
            "uv_repeat": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "uv_repeat", 
                "help": "Number of times to repeat the ramp pattern", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Uv Repeat", 
                "moonray_name": "uv_repeat", 
                "order": 13, 
                "aliases": [
                    "uv repeat"
                ]
            }, 
            "positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "positions", 
                "help": "Color ramp", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "positions", 
                "order": 0, 
                "ramp_parm_name": "ramp"
            }, 
            "wrap_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "wrap_type", 
                "moonray_type": "Int", 
                "menu": [
                    "wrap", 
                    "clamp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Wrap Type", 
                "moonray_name": "wrap_type", 
                "order": 11, 
                "aliases": [
                    "wrap type"
                ]
            }, 
            "interpolations": {
                "default_value": [
                    0, 
                    0, 
                    0, 
                    0
                ], 
                "houdini_name": "interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "interpolations", 
                "order": 2, 
                "ramp_parm_name": "ramp"
            }, 
            "uv_wave": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "uv_wave", 
                "help": "Creates waves which perturb the ramp pattern", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Uv Wave", 
                "moonray_name": "uv_wave", 
                "order": 12, 
                "aliases": [
                    "uv wave"
                ]
            }, 
            "colors": {
                "default_value": [
                    [
                        0.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        0.25, 
                        0.25, 
                        0.25
                    ], 
                    [
                        0.75, 
                        0.75, 
                        0.75
                    ], 
                    [
                        1.0, 
                        1.0, 
                        1.0
                    ]
                ], 
                "houdini_name": "colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "colors", 
                "order": 1, 
                "ramp_parm_name": "ramp"
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "Camera used to define camera and screen space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 7
            }, 
            "ramp_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "ramp_type", 
                "moonray_type": "Int", 
                "menu": [
                    "v", 
                    "u", 
                    "diagonal", 
                    "radial", 
                    "circular", 
                    "box", 
                    "uxv", 
                    "four corner", 
                    "input"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8"
                ], 
                "houdini_label": "Ramp Type", 
                "moonray_name": "ramp_type", 
                "order": 3, 
                "aliases": [
                    "ramp type"
                ]
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "help": "Bind custom UV coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 10, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "input": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "Input signal for ramp, used when ramp type is set to input", 
                "moonray_type": "Float", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 4
            }
        }, 
        "folders_with_parms": {
            "Ramp properties": [
                "ramp_type", 
                "input", 
                "space", 
                "object", 
                "camera", 
                "color_space"
            ], 
            "Ramp Knot": [
                "ramp"
            ], 
            "Additional properties": [
                "input_texture_coordinates", 
                "wrap_type", 
                "uv_wave", 
                "uv_repeat"
            ]
        }
    }, 
    "RodLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "RodLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "fades the filter effect. 0=no effect (like having no filter), 1=full effect", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 9
            }, 
            "color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color", 
                "help": "filter color. Scales the light within the volume. For each color channel, 0=full shadow, 1=no shadow", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 7
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "swap application of filter from inside the volume to outside", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 10
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "scalar for multiplying the color. 0=black 1=color", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 8
            }, 
            "ramp_in_distances": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "ramp_in_distances", 
                "help": "input distance for ramp control", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Ramp In Distances", 
                "moonray_name": "ramp_in_distances", 
                "order": 11, 
                "ramp_parm_name": "ramp"
            }, 
            "height": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "height", 
                "help": "height of the base box (before radius and edge)", 
                "moonray_type": "Float", 
                "houdini_label": "Height", 
                "moonray_name": "height", 
                "order": 4
            }, 
            "width": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "width", 
                "help": "width of the base box (before radius and edge)", 
                "moonray_type": "Float", 
                "houdini_label": "Width", 
                "moonray_name": "width", 
                "order": 2
            }, 
            "depth": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "depth", 
                "help": "depth of the base box (before radius and edge)", 
                "moonray_type": "Float", 
                "houdini_label": "Depth", 
                "moonray_name": "depth", 
                "order": 3
            }, 
            "edge": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "edge", 
                "help": "size of transition zone from the rounded box to the outside", 
                "moonray_type": "Float", 
                "houdini_label": "Edge", 
                "moonray_name": "edge", 
                "order": 6
            }, 
            "radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "radius", 
                "help": "radius by which to expand the base box into a rounded box", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 5
            }, 
            "ramp_out_distances": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "ramp_out_distances", 
                "help": "remapped distances for ramp control", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Ramp Out Distances", 
                "moonray_name": "ramp_out_distances", 
                "order": 12, 
                "ramp_parm_name": "ramp"
            }, 
            "ramp_interpolation_types": {
                "default_value": [
                    6, 
                    6
                ], 
                "houdini_name": "ramp_interpolation_types", 
                "help": "interpolation types for ramp control", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Ramp Interpolation Types", 
                "moonray_name": "ramp_interpolation_types", 
                "order": 13, 
                "ramp_parm_name": "ramp"
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "node_xform", 
                "width", 
                "depth", 
                "height", 
                "radius", 
                "edge", 
                "color", 
                "intensity", 
                "density", 
                "invert", 
                "ramp"
            ]
        }
    }, 
    "Joint": {
        "moonray_type": "Joint", 
        "moonray_name": "Joint", 
        "folders_sorted": [], 
        "parms": {}, 
        "folders_with_parms": {}
    }, 
    "GlitterFlakeMaterial_v2": {
        "moonray_type": "Material", 
        "moonray_name": "GlitterFlakeMaterial_v2", 
        "folders_sorted": [
            "Flake Generation", 
            "Appearance", 
            "Glitter A Appearance", 
            "Glitter B Appearance", 
            "Advanced", 
            "Layering", 
            "Common"
        ], 
        "parms": {
            "flake_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "flake_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Style A Frequency", 
                "bindable": true, 
                "moonray_name": "flake_style_A_frequency", 
                "order": 7
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 33
            }, 
            "flake_texture_1": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "flake_texture_1", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Flake Texture 1", 
                "moonray_name": "flake_texture_1", 
                "order": 20
            }, 
            "flake_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "flake_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Flake Color B", 
                "bindable": true, 
                "moonray_name": "flake_color_B", 
                "order": 17
            }, 
            "flake_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "flake_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Flake Color A", 
                "bindable": true, 
                "moonray_name": "flake_color_A", 
                "order": 16, 
                "aliases": [
                    "flake color", 
                    "flake_color"
                ]
            }, 
            "flake_texture_2": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "flake_texture_2", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Flake Texture 2", 
                "moonray_name": "flake_texture_2", 
                "order": 22
            }, 
            "flake_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flake_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "flake_color_saturation_variation", 
                "order": 25, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "compensate_reference_space_deformation", 
                "order": 5
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "The seed for the random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 3
            }, 
            "flake_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flake_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Style B Frequency", 
                "bindable": true, 
                "moonray_name": "flake_style_B_frequency", 
                "order": 8
            }, 
            "flake_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "flake_size_A", 
                "help": "size of the flakes.   Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Size A", 
                "bindable": true, 
                "moonray_name": "flake_size_A", 
                "order": 9, 
                "aliases": [
                    "flake size", 
                    "flake_size"
                ]
            }, 
            "flake_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "flake_size_B", 
                "help": "size of the flakes.   Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Size B", 
                "bindable": true, 
                "moonray_name": "flake_size_B", 
                "order": 10
            }, 
            "approximate_glitter_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "approximate_glitter_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate Glitter For Secondary Rays", 
                "moonray_name": "approximate_glitter_for_secondary_rays", 
                "order": 30, 
                "aliases": [
                    "approximate glitter for secondary rays"
                ]
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "flake_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "flake_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Orientation Randomness", 
                "moonray_name": "flake_orientation_randomness", 
                "order": 19
            }, 
            "flake_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "flake_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Jitter", 
                "bindable": true, 
                "moonray_name": "flake_jitter", 
                "order": 6, 
                "aliases": [
                    "flake jitter"
                ]
            }, 
            "decouple_flake_size": {
                "default_value": [
                    false
                ], 
                "houdini_name": "decouple_flake_size", 
                "help": "makes flake size independent of flake density", 
                "moonray_type": "Bool", 
                "houdini_label": "Decouple Flake Size", 
                "moonray_name": "decouple_flake_size", 
                "order": 11, 
                "aliases": [
                    "decouple flake size"
                ]
            }, 
            "space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "space", 
                "help": "The space to calculate the noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 4
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "use_flake_textures": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_flake_textures", 
                "help": "use textured glitter flakes", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Flake Textures", 
                "moonray_name": "use_flake_textures", 
                "order": 18
            }, 
            "under_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "under_material", 
                "help": "material that fills the gaps between glitter flakes", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Under Material", 
                "interface": "Material", 
                "moonray_name": "under_material", 
                "order": 31, 
                "aliases": [
                    "under material"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "flake_texture_1_frequency": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "flake_texture_1_frequency", 
                "help": "0 implies none of this texture, 1 implies all the flakes will get this texture", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Texture 1 Frequency", 
                "moonray_name": "flake_texture_1_frequency", 
                "order": 21
            }, 
            "flake_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flake_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "flake_color_hue_variation", 
                "order": 24, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "layering_mode", 
                "order": 32
            }, 
            "flake_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "flake_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Randomness", 
                "moonray_name": "flake_randomness", 
                "order": 13, 
                "aliases": [
                    "flake randomness"
                ]
            }, 
            "debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "debug_mode", 
                "order": 29, 
                "aliases": [
                    "debug mode"
                ]
            }, 
            "flake_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flake_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Color Value Variation", 
                "bindable": true, 
                "moonray_name": "flake_color_value_variation", 
                "order": 26, 
                "aliases": [
                    "flake color value variation"
                ]
            }, 
            "flake_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "flake_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Roughness A", 
                "moonray_name": "flake_roughness_A", 
                "order": 14, 
                "aliases": [
                    "flake roughness", 
                    "flake_roughness"
                ]
            }, 
            "flake_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "flake_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Roughness B", 
                "moonray_name": "flake_roughness_B", 
                "order": 15
            }, 
            "dense_glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "dense_glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "Dense Glitter LOD Quality", 
                "moonray_name": "dense_glitter_LOD_quality", 
                "order": 28, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "glitter_mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_mask", 
                "help": "use this to control where glitter appears", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter Mask", 
                "bindable": true, 
                "moonray_name": "glitter_mask", 
                "order": 27, 
                "aliases": [
                    "glitter mask"
                ]
            }, 
            "flake_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "flake_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Density", 
                "bindable": true, 
                "moonray_name": "flake_density", 
                "order": 12, 
                "aliases": [
                    "flake density"
                ]
            }, 
            "flake_texture_2_frequency": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "flake_texture_2_frequency", 
                "help": "0 implies none of this texture, 1 implies all the flakes will get this texture", 
                "moonray_type": "Float", 
                "houdini_label": "Flake Texture 2 Frequency", 
                "moonray_name": "flake_texture_2_frequency", 
                "order": 23
            }
        }, 
        "folders_with_parms": {
            "Layering": [
                "under_material", 
                "layering_mode"
            ], 
            "Appearance": [
                "flake_jitter", 
                "decouple_flake_size", 
                "flake_density", 
                "flake_randomness", 
                "use_flake_textures", 
                "flake_orientation_randomness", 
                "flake_texture_1", 
                "flake_texture_1_frequency", 
                "flake_texture_2", 
                "flake_texture_2_frequency", 
                "flake_color_hue_variation", 
                "flake_color_saturation_variation", 
                "flake_color_value_variation"
            ], 
            "Common": [
                "presence"
            ], 
            "Flake Generation": [
                "seed", 
                "space", 
                "compensate_reference_space_deformation"
            ], 
            "Glitter A Appearance": [
                "flake_style_A_frequency", 
                "flake_size_A", 
                "flake_roughness_A", 
                "flake_color_A"
            ], 
            "Glitter B Appearance": [
                "flake_style_B_frequency", 
                "flake_size_B", 
                "flake_roughness_B", 
                "flake_color_B"
            ], 
            "Advanced": [
                "glitter_mask", 
                "dense_glitter_LOD_quality", 
                "debug_mode", 
                "approximate_glitter_for_secondary_rays"
            ]
        }
    }, 
    "DwaTwoSidedMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaTwoSidedMaterial", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "fallback_toon_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_toon_specular_model", 
                "help": "If child materials disagree on the type of toon specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX", 
                    "Toon"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Toon Specular Model", 
                "moonray_name": "fallback_toon_specular_model", 
                "order": 7
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "By default, only the geometry associated with this material contributes to subsurface. The DwaTwoSidedMaterial ignores the sss trace sets of the submaterials. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 10, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "fallback_clearcoat_use_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "fallback_clearcoat_use_bending", 
                "help": "If child materials disagree on the type of clearcoat use bending, this type will be used instead.", 
                "moonray_type": "Bool", 
                "houdini_label": "Fallback Clearcoat Use Bending", 
                "moonray_name": "fallback_clearcoat_use_bending", 
                "order": 9
            }, 
            "back_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "back_material", 
                "help": "material to use on back-facing surfaces", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Back Material", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "back_material", 
                "order": 4
            }, 
            "fallback_bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_bssrdf", 
                "help": "If the two materials disagree on the type of bssrdf, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Bssrdf", 
                "moonray_name": "fallback_bssrdf", 
                "order": 5
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "fallback_outer_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_outer_specular_model", 
                "help": "If child materials disagree on the type of outer specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Outer Specular Model", 
                "moonray_name": "fallback_outer_specular_model", 
                "order": 8
            }, 
            "fallback_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_specular_model", 
                "help": "If child materials disagree on the type of specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Specular Model", 
                "moonray_name": "fallback_specular_model", 
                "order": 6
            }, 
            "front_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "front_material", 
                "help": "material to use on front-facing surfaces", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Front Material", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "front_material", 
                "order": 3
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "fallback_bssrdf", 
                "fallback_specular_model", 
                "fallback_toon_specular_model", 
                "fallback_outer_specular_model", 
                "fallback_clearcoat_use_bending", 
                "sss_trace_set"
            ]
        }
    }, 
    "ColorCorrectLegacyMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectLegacyMap", 
        "folders_sorted": [], 
        "parms": {
            "clamp": {
                "default_value": [
                    false
                ], 
                "houdini_name": "clamp", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 10
            }, 
            "hue": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue", 
                "moonray_type": "Float", 
                "houdini_label": "Hue", 
                "moonray_name": "hue", 
                "order": 5
            }, 
            "saturation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 6
            }, 
            "brightness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "brightness", 
                "moonray_type": "Float", 
                "houdini_label": "Brightness", 
                "moonray_name": "brightness", 
                "order": 3
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 7
            }, 
            "multiplier": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "multiplier", 
                "moonray_type": "Rgb", 
                "houdini_label": "Multiplier", 
                "moonray_name": "multiplier", 
                "order": 9
            }, 
            "mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mask", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "mask", 
                "order": 2
            }, 
            "monochrome": {
                "default_value": [
                    0
                ], 
                "houdini_name": "monochrome", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "luminance", 
                    "average", 
                    "minimum", 
                    "maximum", 
                    "red channel", 
                    "green channel", 
                    "blue channel"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Monochrome", 
                "moonray_name": "monochrome", 
                "order": 8
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 4
            }
        }, 
        "folders_with_parms": {}
    }, 
    "WireframeMap": {
        "moonray_type": "Map", 
        "moonray_name": "WireframeMap", 
        "folders_sorted": [], 
        "parms": {
            "line_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "line_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Line Color", 
                "moonray_name": "line_color", 
                "order": 0, 
                "aliases": [
                    "line color"
                ]
            }, 
            "raster": {
                "default_value": [
                    true
                ], 
                "houdini_name": "raster", 
                "moonray_type": "Bool", 
                "houdini_label": "Raster", 
                "moonray_name": "raster", 
                "order": 2
            }, 
            "fill_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fill_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Fill Color", 
                "moonray_name": "fill_color", 
                "order": 1, 
                "aliases": [
                    "fill color"
                ]
            }, 
            "line_width": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "line_width", 
                "moonray_type": "Float", 
                "houdini_label": "Line Width", 
                "moonray_name": "line_width", 
                "order": 3, 
                "aliases": [
                    "line width"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "OrthographicCamera": {
        "moonray_type": "Camera", 
        "moonray_name": "OrthographicCamera", 
        "folders_sorted": [
            "Frustum", 
            "Motion Blur", 
            "Render Masks", 
            "Medium", 
            "Depth of Field"
        ], 
        "parms": {
            "bokeh_sides": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bokeh_sides", 
                "help": "Number of sides of the iris. Specifying less than 3 sides will default to a disk.", 
                "moonray_type": "Int", 
                "houdini_label": "Bokeh Sides", 
                "moonray_name": "bokeh_sides", 
                "order": 17, 
                "aliases": [
                    "bokeh sides"
                ]
            }, 
            "vertical_film_offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "vertical_film_offset", 
                "help": "Vertical offset of the orthographic frustum.", 
                "moonray_type": "Float", 
                "houdini_label": "Vertical Film Offset", 
                "moonray_name": "vertical_film_offset", 
                "order": 10, 
                "aliases": [
                    "vertical film offset"
                ]
            }, 
            "mb_shutter_open": {
                "default_value": [
                    -0.25
                ], 
                "houdini_name": "mb_shutter_open", 
                "help": "Frame at which the shutter opens, i.e., the beginning of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Open", 
                "moonray_name": "mb_shutter_open", 
                "order": 3, 
                "aliases": [
                    "mb shutter open"
                ]
            }, 
            "bokeh_weight_location": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_weight_location", 
                "help": "Distance from the origin of Bokeh shape", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Weight Location", 
                "moonray_name": "bokeh_weight_location", 
                "order": 20, 
                "aliases": [
                    "bokeh weight location"
                ]
            }, 
            "far": {
                "default_value": [
                    10000.0
                ], 
                "houdini_name": "far", 
                "help": "Far clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Far", 
                "moonray_name": "far", 
                "order": 2
            }, 
            "bokeh_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_angle", 
                "help": "Angle of iris rotation", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Angle", 
                "moonray_name": "bokeh_angle", 
                "order": 19, 
                "aliases": [
                    "bokeh angle"
                ]
            }, 
            "pixel_sample_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "pixel_sample_map", 
                "help": "Map indicating the number of pixel samples that should be used per pixel (in uniform sampling mode). This is a multiplier on the global pixel sample count specified in SceneVariables. If the provided map has incompatible dimensions, it will be resized.", 
                "moonray_type": "String", 
                "houdini_label": "Pixel Sample Map", 
                "moonray_name": "pixel_sample_map", 
                "order": 6, 
                "aliases": [
                    "pixel sample map"
                ]
            }, 
            "dof": {
                "default_value": [
                    false
                ], 
                "houdini_name": "dof", 
                "help": "Whether to enable depth of field", 
                "moonray_type": "Bool", 
                "houdini_label": "Dof", 
                "moonray_name": "dof", 
                "order": 13
            }, 
            "bokeh": {
                "default_value": [
                    false
                ], 
                "houdini_name": "bokeh", 
                "help": "Enable Bokeh. Requires DOF to be enabled.", 
                "moonray_type": "Bool", 
                "houdini_label": "Bokeh", 
                "moonray_name": "bokeh", 
                "order": 16
            }, 
            "mb_shutter_close": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "mb_shutter_close", 
                "help": "Frame at which the shutter closes, i.e., the end of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Close", 
                "moonray_name": "mb_shutter_close", 
                "order": 4, 
                "aliases": [
                    "mb shutter close"
                ]
            }, 
            "pixel_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "pixel_aspect_ratio", 
                "help": "ratio of pixel size y / x", 
                "moonray_type": "Float", 
                "houdini_label": "Pixel Aspect Ratio", 
                "moonray_name": "pixel_aspect_ratio", 
                "order": 12, 
                "aliases": [
                    "pixel aspect ratio"
                ]
            }, 
            "near": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "near", 
                "help": "Near clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Near", 
                "moonray_name": "near", 
                "order": 1
            }, 
            "horizontal_film_offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "horizontal_film_offset", 
                "help": "Horizontal offset of the orthographic frustum.", 
                "moonray_type": "Float", 
                "houdini_label": "Horizontal Film Offset", 
                "moonray_name": "horizontal_film_offset", 
                "order": 9, 
                "aliases": [
                    "horizontal film offset"
                ]
            }, 
            "dof_aperture": {
                "default_value": [
                    8.0
                ], 
                "houdini_name": "dof_aperture", 
                "help": "Depth of field focus distance", 
                "moonray_type": "Float", 
                "houdini_label": "Dof Aperture", 
                "moonray_name": "dof_aperture", 
                "order": 14, 
                "aliases": [
                    "dof aperture"
                ]
            }, 
            "film_width_aperture": {
                "default_value": [
                    24.0
                ], 
                "houdini_name": "film_width_aperture", 
                "help": "Scale the aperture of the camera (i.e., the orthographic frustum) by this value.", 
                "moonray_type": "Float", 
                "houdini_label": "Film Width Aperture", 
                "moonray_name": "film_width_aperture", 
                "order": 11, 
                "aliases": [
                    "film width aperture"
                ]
            }, 
            "bokeh_image": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "bokeh_image", 
                "help": "Path to image file to be used for the iris", 
                "moonray_type": "String", 
                "houdini_label": "Bokeh Image", 
                "moonray_name": "bokeh_image", 
                "order": 18, 
                "aliases": [
                    "bokeh image"
                ]
            }, 
            "bokeh_weight_strength": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_weight_strength", 
                "help": "Controls the strength of weights as samples approach the weight location", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Weight Strength", 
                "moonray_name": "bokeh_weight_strength", 
                "order": 21, 
                "aliases": [
                    "bokeh weight strength"
                ]
            }, 
            "medium_material": {
                "default_value": [], 
                "houdini_name": "medium_material", 
                "help": "The material the camera is 'inside'. If no medium_geometry is specified, ALL rays will have this initial index of refraction applied. ", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Material", 
                "moonray_name": "medium_material", 
                "order": 7, 
                "aliases": [
                    "medium material"
                ]
            }, 
            "dof_focus_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "dof_focus_distance", 
                "moonray_type": "Float", 
                "houdini_label": "Dof Focus Distance", 
                "moonray_name": "dof_focus_distance", 
                "order": 15, 
                "aliases": [
                    "dof focus distance"
                ]
            }, 
            "mb_shutter_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mb_shutter_bias", 
                "help": "Biases the motion blur samples toward one end of the shutter interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Bias", 
                "moonray_name": "mb_shutter_bias", 
                "order": 5, 
                "aliases": [
                    "mb shutter bias"
                ]
            }, 
            "medium_geometry": {
                "default_value": [], 
                "houdini_name": "medium_geometry", 
                "help": "The geometry the camera is 'inside' to which you'd like the medium_material applied. (The use case for this is typically partially-submerged cameras)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Geometry", 
                "moonray_name": "medium_geometry", 
                "order": 8, 
                "aliases": [
                    "medium geometry"
                ]
            }
        }, 
        "folders_with_parms": {
            "Depth of Field": [
                "dof", 
                "dof_aperture", 
                "dof_focus_distance", 
                "bokeh", 
                "bokeh_sides", 
                "bokeh_image", 
                "bokeh_angle", 
                "bokeh_weight_location", 
                "bokeh_weight_strength"
            ], 
            "Medium": [
                "medium_material", 
                "medium_geometry"
            ], 
            "Frustum": [
                "near", 
                "far", 
                "film_width_aperture", 
                "horizontal_film_offset", 
                "vertical_film_offset", 
                "pixel_aspect_ratio"
            ], 
            "Motion Blur": [
                "mb_shutter_open", 
                "mb_shutter_close", 
                "mb_shutter_bias"
            ], 
            "Render Masks": [
                "pixel_sample_map"
            ]
        }
    }, 
    "BaseVolume": {
        "moonray_type": "Volume", 
        "moonray_name": "BaseVolume", 
        "folders_sorted": [
            "Scattering Properties", 
            "Attenuation Properties", 
            "Emission Properties"
        ], 
        "parms": {
            "attenuation_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "attenuation_intensity", 
                "help": "the rate at which the intensity of a ray traversing a volume is lost. The attenuation (extinction) coefficient is technically the product of attenuation_color, attenuation_intensity, and attenuation_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Attenuation Intensity", 
                "bindable": true, 
                "moonray_name": "attenuation_intensity", 
                "order": 7, 
                "aliases": [
                    "attenuation intensity"
                ]
            }, 
            "surface_opacity_threshold": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "surface_opacity_threshold", 
                "help": "Accumulated opacity that's considered the 'surface' for computing surface position and Z", 
                "moonray_type": "Float", 
                "houdini_label": "Surface Opacity Threshold", 
                "moonray_name": "surface_opacity_threshold", 
                "order": 4
            }, 
            "attenuation_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "attenuation_color", 
                "help": "a color to tint (multiply to) the attenuation. Technically the product of attenuation color and intensity is the attenuation(extinction) coefficient.(Note the inverse behavior of color with this parameter.)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "attenuation_color", 
                "order": 9, 
                "aliases": [
                    "attenuation color"
                ]
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "Value in the interval [-1,1] that defines how foward (1) or backward (-1) scattering the volume is. 0.0 is isotropic.", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 6
            }, 
            "diffuse_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "diffuse_color", 
                "help": "reflectance color of the volume. Technically this is called scattering albedo, which is the scattering coefficient divided by the extinction coefficient.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Diffuse Color", 
                "bindable": true, 
                "moonray_name": "diffuse_color", 
                "order": 5, 
                "aliases": [
                    "diffuse color"
                ]
            }, 
            "bake_divisions": {
                "default_value": [
                    100
                ], 
                "houdini_name": "bake_divisions", 
                "help": "Divide widest axis by this many divisions", 
                "moonray_type": "Int", 
                "houdini_label": "Bake Divisions", 
                "moonray_name": "bake_divisions", 
                "order": 2
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 0
            }, 
            "attenuation_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "attenuation_factor", 
                "help": "An additional factor to scale the attenuation. This attribute behaves identically to attenuation_intensity - it is provided simply as an extra way to control attenuation, typically during lighting. Surfacing should generally avoid setting this.", 
                "moonray_type": "Float", 
                "houdini_label": "Attenuation Factor", 
                "bindable": true, 
                "moonray_name": "attenuation_factor", 
                "order": 8, 
                "aliases": [
                    "attenuation factor"
                ]
            }, 
            "bake_voxel_size": {
                "default_value": [
                    10.0
                ], 
                "houdini_name": "bake_voxel_size", 
                "help": "Size of voxel in world space", 
                "moonray_type": "Float", 
                "houdini_label": "Bake Voxel Size", 
                "moonray_name": "bake_voxel_size", 
                "order": 3
            }, 
            "emission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "emission_color", 
                "help": "a color to tint (multiply to) the emission Technically the product of emision color and intensity is the emission coefficient", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission Color", 
                "bindable": true, 
                "moonray_name": "emission_color", 
                "order": 11, 
                "aliases": [
                    "emission color"
                ]
            }, 
            "emission_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "emission_intensity", 
                "help": "the rate at which a volume emits light at a given point. Technically the product of emission color and intensity is the emission coefficient.", 
                "moonray_type": "Float", 
                "houdini_label": "Emission Intensity", 
                "bindable": true, 
                "moonray_name": "emission_intensity", 
                "order": 10, 
                "aliases": [
                    "emission intensity"
                ]
            }, 
            "bake_resolution_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bake_resolution_mode", 
                "help": "Toggle method to specify grid resolution of baked density grid.\n\t\tdefault: for shaders that are bound to vdb volumes, use vdb resolution. For shaders that are bounds to mesh geometriesuse 100 divisions\n\t\tdivisions: specify number of divisions.\n\t\tvoxel size: specify voxel size.", 
                "moonray_type": "Int", 
                "menu": [
                    "default", 
                    "divisions", 
                    "voxel size"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bake Resolution Mode", 
                "moonray_name": "bake_resolution_mode", 
                "order": 1
            }
        }, 
        "folders_with_parms": {
            "Attenuation Properties": [
                "attenuation_intensity", 
                "attenuation_factor", 
                "attenuation_color"
            ], 
            "Scattering Properties": [
                "diffuse_color", 
                "anisotropy"
            ], 
            "Emission Properties": [
                "emission_intensity", 
                "emission_color"
            ]
        }
    }, 
    "HairMap": {
        "moonray_type": "Map", 
        "moonray_name": "HairMap", 
        "folders_sorted": [], 
        "parms": {
            "base_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "base_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Base Color", 
                "bindable": true, 
                "moonray_name": "base_color", 
                "order": 0, 
                "aliases": [
                    "base color"
                ]
            }, 
            "tip_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "tip_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tip Color", 
                "bindable": true, 
                "moonray_name": "tip_color", 
                "order": 1, 
                "aliases": [
                    "tip color"
                ]
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 2
            }, 
            "gain": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "gain", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 3
            }, 
            "column_uv_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "column_uv_color", 
                "help": "Bound image map must have a HairColumnUvMap bound to its input texture coordinates.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Column Uv Color", 
                "bindable": true, 
                "moonray_name": "column_uv_color", 
                "order": 4, 
                "aliases": [
                    "column uv color"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "HairToonMaterial": {
        "moonray_type": "DwaBaseHairLayerable", 
        "moonray_name": "HairToonMaterial", 
        "folders_sorted": [
            "Diffuse", 
            "Specular 1", 
            "Specular 2", 
            "Specular 3", 
            "Advanced", 
            "Subsurface", 
            "Common", 
            "Emission"
        ], 
        "parms": {
            "specular_3_stretch_v": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_3_stretch_v", 
                "help": "Amount to stretch or compress the specular in the v direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch V", 
                "bindable": true, 
                "moonray_name": "specular_3_stretch_v", 
                "order": 50
            }, 
            "specular_1_positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_1_positions", 
                "help": "ramp positions, maximum 10 allowed", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "moonray_name": "specular_1_positions", 
                "order": 16, 
                "ramp_parm_name": "specular_1_ramp"
            }, 
            "specular_1_input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "specular_1_input_normal", 
                "help": "specifies an alternate shading normal for toon specular 1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "specular_1_input_normal", 
                "order": 20
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal (only for SSS lobe)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 72, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "specular_3_enable_indirect_reflections": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_3_enable_indirect_reflections", 
                "help": "enables indirect GGX reflections for toon specular model", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Indirect Reflections", 
                "moonray_name": "specular_3_enable_indirect_reflections", 
                "order": 60
            }, 
            "specular_2_input_V": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_2_input_V", 
                "help": "input V / bitangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input V", 
                "bindable": true, 
                "moonray_name": "specular_2_input_V", 
                "order": 34
            }, 
            "specular_1_show": {
                "default_value": [
                    true
                ], 
                "houdini_name": "specular_1_show", 
                "help": "Show first toon specular lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show", 
                "moonray_name": "specular_1_show", 
                "order": 6
            }, 
            "hair_diffuse": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "hair_diffuse", 
                "help": "Amount of hair diffuse", 
                "moonray_type": "Float", 
                "houdini_label": "Hair Diffuse", 
                "bindable": true, 
                "moonray_name": "hair_diffuse", 
                "order": 4
            }, 
            "hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "hair_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Hair Color", 
                "bindable": true, 
                "moonray_name": "hair_color", 
                "order": 5, 
                "aliases": [
                    "hair color"
                ]
            }, 
            "specular_1_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_1_intensity", 
                "help": "The overall intensity of the specular response", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "bindable": true, 
                "moonray_name": "specular_1_intensity", 
                "order": 8
            }, 
            "specular_3_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "specular_3_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "moonray_name": "specular_3_interpolations", 
                "order": 56, 
                "ramp_parm_name": "specular_3_ramp"
            }, 
            "specular_2_use_input_vectors_for_stretch": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_2_use_input_vectors_for_stretch", 
                "help": "when checked, use input_U and V. otherwise use geometry dPds/t", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Input Vectors For Stretch", 
                "moonray_name": "specular_2_use_input_vectors_for_stretch", 
                "order": 32
            }, 
            "specular_3_model": {
                "default_value": [
                    2
                ], 
                "houdini_name": "specular_3_model", 
                "help": "sets the normal distribution function for specular", 
                "moonray_type": "Int", 
                "menu": [
                    "Toon_Surface", 
                    "Toon_Hair"
                ], 
                "menu_values": [
                    "2", 
                    "3"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_3_model", 
                "order": 45
            }, 
            "specular_1_stretch_u": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_1_stretch_u", 
                "help": "Amount to stretch or compress the specular in the u direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch U", 
                "bindable": true, 
                "moonray_name": "specular_1_stretch_u", 
                "order": 11
            }, 
            "specular_1_use_input_vectors_for_stretch": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_1_use_input_vectors_for_stretch", 
                "help": "when checked, use input_U and V. otherwise use geometry dPds/t", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Input Vectors For Stretch", 
                "moonray_name": "specular_1_use_input_vectors_for_stretch", 
                "order": 13
            }, 
            "specular_1_stretch_v": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_1_stretch_v", 
                "help": "Amount to stretch or compress the specular in the v direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch V", 
                "bindable": true, 
                "moonray_name": "specular_1_stretch_v", 
                "order": 12
            }, 
            "specular_2_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "specular_2_tint", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "specular_2_tint", 
                "order": 28
            }, 
            "front_hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "front_hair_color", 
                "help": "(advanced only) hair color used for front-lit hair (backward reflectance)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Front Hair Color", 
                "bindable": true, 
                "moonray_name": "front_hair_color", 
                "order": 64
            }, 
            "specular_2_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_2_intensity", 
                "help": "The overall intensity of the specular response", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "bindable": true, 
                "moonray_name": "specular_2_intensity", 
                "order": 27
            }, 
            "specular_2_stretch_u": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_2_stretch_u", 
                "help": "Amount to stretch or compress the specular in the u direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch U", 
                "bindable": true, 
                "moonray_name": "specular_2_stretch_u", 
                "order": 30
            }, 
            "specular_1_values": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_1_values", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Values", 
                "moonray_name": "specular_1_values", 
                "order": 17, 
                "ramp_parm_name": "specular_1_ramp"
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole. Random walk unsupported for hair.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 67
            }, 
            "subsurface_blend": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "subsurface_blend", 
                "help": "0 is fully hair diffuse, 1 is fully SSS. No effect if scattering radius is 0.", 
                "moonray_type": "Float", 
                "houdini_label": "Blend", 
                "bindable": true, 
                "moonray_name": "subsurface_blend", 
                "order": 66, 
                "aliases": [
                    "subsurface blend"
                ]
            }, 
            "specular_2_indirect_reflections_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_2_indirect_reflections_intensity", 
                "help": "the intensity for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Intensity", 
                "bindable": true, 
                "moonray_name": "specular_2_indirect_reflections_intensity", 
                "order": 42
            }, 
            "specular_3_values": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_3_values", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Values", 
                "moonray_name": "specular_3_values", 
                "order": 55, 
                "ramp_parm_name": "specular_3_ramp"
            }, 
            "specular_2_stretch_v": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_2_stretch_v", 
                "help": "Amount to stretch or compress the specular in the v direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch V", 
                "bindable": true, 
                "moonray_name": "specular_2_stretch_v", 
                "order": 31
            }, 
            "specular_2_input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_2_input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for toon specular 2", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "specular_2_input_normal_dial", 
                "order": 40
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 74
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 75, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "specular_1_model": {
                "default_value": [
                    2
                ], 
                "houdini_name": "specular_1_model", 
                "help": "sets the normal distribution function for specular", 
                "moonray_type": "Int", 
                "menu": [
                    "Toon_Surface", 
                    "Toon_Hair"
                ], 
                "menu_values": [
                    "2", 
                    "3"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_1_model", 
                "order": 7
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "specular_3_show": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_3_show", 
                "help": "Show third toon specular lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show", 
                "moonray_name": "specular_3_show", 
                "order": 44
            }, 
            "show_hair_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_hair_diffuse", 
                "help": "Show the hair diffuse lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Hair Diffuse", 
                "moonray_name": "show_hair_diffuse", 
                "order": 3
            }, 
            "specular_3_roughness": {
                "default_value": [
                    0.9
                ], 
                "houdini_name": "specular_3_roughness", 
                "help": "The roughness of the toon specular.   Smaller values produce tighter highlights", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "specular_3_roughness", 
                "order": 48
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "specular_3_use_input_vectors_for_stretch": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_3_use_input_vectors_for_stretch", 
                "help": "when checked, use input_U and V. otherwise use geometry dPds/t", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Input Vectors For Stretch", 
                "moonray_name": "specular_3_use_input_vectors_for_stretch", 
                "order": 51
            }, 
            "specular_1_indirect_reflections_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_1_indirect_reflections_intensity", 
                "help": "the intensity for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Intensity", 
                "bindable": true, 
                "moonray_name": "specular_1_indirect_reflections_intensity", 
                "order": 23
            }, 
            "specular_1_indirect_reflections_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "specular_1_indirect_reflections_roughness", 
                "help": "the roughness for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Roughness", 
                "bindable": true, 
                "moonray_name": "specular_1_indirect_reflections_roughness", 
                "order": 24
            }, 
            "back_hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "back_hair_color", 
                "help": "(advanced only) hair color used for back-lit hair (transmission/forward reflectance)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Back Hair Color", 
                "bindable": true, 
                "moonray_name": "back_hair_color", 
                "order": 65
            }, 
            "specular_1_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "specular_1_tint", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "specular_1_tint", 
                "order": 9
            }, 
            "specular_2_show": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_2_show", 
                "help": "Show second toon specular lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show", 
                "moonray_name": "specular_2_show", 
                "order": 25
            }, 
            "specular_3_stretch_u": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "specular_3_stretch_u", 
                "help": "Amount to stretch or compress the specular in the u direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Stretch U", 
                "bindable": true, 
                "moonray_name": "specular_3_stretch_u", 
                "order": 49
            }, 
            "specular_2_input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "specular_2_input_normal", 
                "help": "specifies an alternate shading normal for toon specular 2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "specular_2_input_normal", 
                "order": 39
            }, 
            "specular_1_roughness": {
                "default_value": [
                    0.9
                ], 
                "houdini_name": "specular_1_roughness", 
                "help": "The roughness of the toon specular.   Smaller values produce tighter highlights", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "specular_1_roughness", 
                "order": 10
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 76, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "specular_2_model": {
                "default_value": [
                    2
                ], 
                "houdini_name": "specular_2_model", 
                "help": "sets the normal distribution function for specular", 
                "moonray_type": "Int", 
                "menu": [
                    "Toon_Surface", 
                    "Toon_Hair"
                ], 
                "menu_values": [
                    "2", 
                    "3"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_2_model", 
                "order": 26
            }, 
            "specular_3_input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_3_input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for toon specular 3", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "specular_3_input_normal_dial", 
                "order": 59
            }, 
            "specular_2_indirect_reflections_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "specular_2_indirect_reflections_roughness", 
                "help": "the roughness for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Roughness", 
                "bindable": true, 
                "moonray_name": "specular_2_indirect_reflections_roughness", 
                "order": 43
            }, 
            "specular_1_input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_1_input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for toon specular 1", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "specular_1_input_normal_dial", 
                "order": 21
            }, 
            "specular_1_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "specular_1_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "moonray_name": "specular_1_interpolations", 
                "order": 18, 
                "ramp_parm_name": "specular_1_ramp"
            }, 
            "use_independent_front_and_back_hair_color": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_front_and_back_hair_color", 
                "help": "(advanced) use a separate hair color for front and back", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Front And Back Hair Color", 
                "moonray_name": "use_independent_front_and_back_hair_color", 
                "order": 63
            }, 
            "specular_1_input_U": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_1_input_U", 
                "help": "input U / tangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input U", 
                "bindable": true, 
                "moonray_name": "specular_1_input_U", 
                "order": 14
            }, 
            "specular_3_indirect_reflections_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_3_indirect_reflections_intensity", 
                "help": "the intensity for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Intensity", 
                "bindable": true, 
                "moonray_name": "specular_3_indirect_reflections_intensity", 
                "order": 61
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface.  When 0 surface diffuse is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 69, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "specular_1_input_V": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_1_input_V", 
                "help": "input V / bitangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input V", 
                "bindable": true, 
                "moonray_name": "specular_1_input_V", 
                "order": 15
            }, 
            "specular_3_input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "specular_3_input_normal", 
                "help": "specifies an alternate shading normal for toon specular 3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "specular_3_input_normal", 
                "order": 58
            }, 
            "specular_2_input_U": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_2_input_U", 
                "help": "input U / tangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input U", 
                "bindable": true, 
                "moonray_name": "specular_2_input_U", 
                "order": 33
            }, 
            "specular_1_enable_indirect_reflections": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_1_enable_indirect_reflections", 
                "help": "enables indirect GGX reflections for toon specular model", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Indirect Reflections", 
                "moonray_name": "specular_1_enable_indirect_reflections", 
                "order": 22
            }, 
            "specular_2_enable_indirect_reflections": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_2_enable_indirect_reflections", 
                "help": "enables indirect GGX reflections for toon specular model", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Indirect Reflections", 
                "moonray_name": "specular_2_enable_indirect_reflections", 
                "order": 41
            }, 
            "specular_3_enable_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_3_enable_input_normal", 
                "help": "enables sampling the normal map for toon specular 3", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Input Normal", 
                "moonray_name": "specular_3_enable_input_normal", 
                "order": 57
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 70, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 71, 
                "aliases": [
                    "enable sss input normal"
                ]
            }, 
            "specular_2_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "specular_2_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "moonray_name": "specular_2_interpolations", 
                "order": 37, 
                "ramp_parm_name": "specular_2_ramp"
            }, 
            "specular_3_positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_3_positions", 
                "help": "ramp positions, maximum 10 allowed", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "moonray_name": "specular_3_positions", 
                "order": 54, 
                "ramp_parm_name": "specular_3_ramp"
            }, 
            "specular_3_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular_3_intensity", 
                "help": "The overall intensity of the specular response", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "bindable": true, 
                "moonray_name": "specular_3_intensity", 
                "order": 46
            }, 
            "specular_3_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "specular_3_tint", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "specular_3_tint", 
                "order": 47
            }, 
            "specular_1_enable_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_1_enable_input_normal", 
                "help": "enables sampling the normal map for toon specular 1", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Input Normal", 
                "moonray_name": "specular_1_enable_input_normal", 
                "order": 19
            }, 
            "specular_2_enable_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "specular_2_enable_input_normal", 
                "help": "enables sampling the normal map for toon specular 2", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Input Normal", 
                "moonray_name": "specular_2_enable_input_normal", 
                "order": 38
            }, 
            "specular_2_values": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_2_values", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Values", 
                "moonray_name": "specular_2_values", 
                "order": 36, 
                "ramp_parm_name": "specular_2_ramp"
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 68, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "specular_2_roughness": {
                "default_value": [
                    0.9
                ], 
                "houdini_name": "specular_2_roughness", 
                "help": "The roughness of the toon specular.   Smaller values produce tighter highlights", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "specular_2_roughness", 
                "order": 29
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for SSS", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 73, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "specular_3_input_V": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_3_input_V", 
                "help": "input V / bitangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input V", 
                "bindable": true, 
                "moonray_name": "specular_3_input_V", 
                "order": 53
            }, 
            "specular_3_input_U": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "specular_3_input_U", 
                "help": "input U / tangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input U", 
                "bindable": true, 
                "moonray_name": "specular_3_input_U", 
                "order": 52
            }, 
            "specular_3_indirect_reflections_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "specular_3_indirect_reflections_roughness", 
                "help": "the roughness for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Indirect Reflections Roughness", 
                "bindable": true, 
                "moonray_name": "specular_3_indirect_reflections_roughness", 
                "order": 62
            }, 
            "specular_2_positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "specular_2_positions", 
                "help": "ramp positions, maximum 10 allowed", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "moonray_name": "specular_2_positions", 
                "order": 35, 
                "ramp_parm_name": "specular_2_ramp"
            }
        }, 
        "folders_with_parms": {
            "Specular 1": [
                "specular_1_show", 
                "specular_1_model", 
                "specular_1_intensity", 
                "specular_1_tint", 
                "specular_1_roughness", 
                "specular_1_stretch_u", 
                "specular_1_stretch_v", 
                "specular_1_use_input_vectors_for_stretch", 
                "specular_1_input_U", 
                "specular_1_input_V", 
                "specular_1_ramp", 
                "specular_1_enable_input_normal", 
                "specular_1_input_normal", 
                "specular_1_input_normal_dial", 
                "specular_1_enable_indirect_reflections", 
                "specular_1_indirect_reflections_intensity", 
                "specular_1_indirect_reflections_roughness"
            ], 
            "Specular 3": [
                "specular_3_show", 
                "specular_3_model", 
                "specular_3_intensity", 
                "specular_3_tint", 
                "specular_3_roughness", 
                "specular_3_stretch_u", 
                "specular_3_stretch_v", 
                "specular_3_use_input_vectors_for_stretch", 
                "specular_3_input_U", 
                "specular_3_input_V", 
                "specular_3_ramp", 
                "specular_3_enable_input_normal", 
                "specular_3_input_normal", 
                "specular_3_input_normal_dial", 
                "specular_3_enable_indirect_reflections", 
                "specular_3_indirect_reflections_intensity", 
                "specular_3_indirect_reflections_roughness"
            ], 
            "Specular 2": [
                "specular_2_show", 
                "specular_2_model", 
                "specular_2_intensity", 
                "specular_2_tint", 
                "specular_2_roughness", 
                "specular_2_stretch_u", 
                "specular_2_stretch_v", 
                "specular_2_use_input_vectors_for_stretch", 
                "specular_2_input_U", 
                "specular_2_input_V", 
                "specular_2_ramp", 
                "specular_2_enable_input_normal", 
                "specular_2_input_normal", 
                "specular_2_input_normal_dial", 
                "specular_2_enable_indirect_reflections", 
                "specular_2_indirect_reflections_intensity", 
                "specular_2_indirect_reflections_roughness"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Subsurface": [
                "subsurface_blend", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "input_normal", 
                "input_normal_dial"
            ], 
            "Common": [
                "presence"
            ], 
            "Diffuse": [
                "show_hair_diffuse", 
                "hair_diffuse", 
                "hair_color"
            ], 
            "Advanced": [
                "use_independent_front_and_back_hair_color", 
                "front_hair_color", 
                "back_hair_color", 
                "sss_trace_set"
            ]
        }
    }, 
    "CombineDisplacement": {
        "moonray_type": "Displacement", 
        "moonray_name": "CombineDisplacement", 
        "folders_sorted": [], 
        "parms": {
            "scale_1": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "scale_1", 
                "help": "Scale of input 1", 
                "moonray_type": "Float", 
                "houdini_label": "Scale 1", 
                "bindable": true, 
                "moonray_name": "scale_1", 
                "order": 3, 
                "aliases": [
                    "scale 1"
                ]
            }, 
            "scale_2": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "scale_2", 
                "help": "Scale of input 2", 
                "moonray_type": "Float", 
                "houdini_label": "Scale 2", 
                "bindable": true, 
                "moonray_name": "scale_2", 
                "order": 5, 
                "aliases": [
                    "scale 2"
                ]
            }, 
            "input_2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_2", 
                "help": "Displacement object 2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input 2", 
                "interface": "Displacement", 
                "moonray_name": "input_2", 
                "order": 4, 
                "aliases": [
                    "input 2"
                ]
            }, 
            "input_1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_1", 
                "help": "Displacement object 1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input 1", 
                "interface": "Displacement", 
                "moonray_name": "input_1", 
                "order": 2, 
                "aliases": [
                    "input 1"
                ]
            }, 
            "operation": {
                "default_value": [
                    0
                ], 
                "houdini_name": "operation", 
                "moonray_type": "Int", 
                "menu": [
                    "add", 
                    "max magnitude", 
                    "min magnitude"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Operation", 
                "moonray_name": "operation", 
                "order": 1
            }, 
            "bound_padding": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bound_padding", 
                "help": "bound padding defines how much to extend the bounding box of the object. Keep this value as low as possible unless the geometry skips tessellation because control cage bounding box is out of camera frustum but the displacement stretch out of the original object bounding box (pre-displacement). Setting the bound padding too large will consume more memory and tessellation time.", 
                "moonray_type": "Float", 
                "houdini_label": "Bound Padding", 
                "moonray_name": "bound_padding", 
                "order": 0, 
                "aliases": [
                    "bound padding"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "NormalDisplacement": {
        "moonray_type": "Displacement", 
        "moonray_name": "NormalDisplacement", 
        "folders_sorted": [], 
        "parms": {
            "height_multiplier": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "height_multiplier", 
                "help": "Multiply the computed (post zero-value) height with this factor.", 
                "moonray_type": "Float", 
                "houdini_label": "Height Multiplier", 
                "bindable": true, 
                "moonray_name": "height_multiplier", 
                "order": 3
            }, 
            "height": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "height", 
                "moonray_type": "Float", 
                "houdini_label": "Height", 
                "bindable": true, 
                "interface": "Map", 
                "moonray_name": "height", 
                "order": 1
            }, 
            "zero_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "zero_value", 
                "moonray_type": "Float", 
                "houdini_label": "Zero Value", 
                "moonray_name": "zero_value", 
                "order": 2, 
                "aliases": [
                    "zero value"
                ]
            }, 
            "bound_padding": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bound_padding", 
                "help": "bound padding defines how much to extend the bounding box of the object. Keep this value as low as possible unless the geometry skips tessellation because control cage bounding box is out of camera frustum but the displacement stretch out of the original object bounding box (pre-displacement). Setting the bound padding too large will consume more memory and tessellation time.", 
                "moonray_type": "Float", 
                "houdini_label": "Bound Padding", 
                "moonray_name": "bound_padding", 
                "order": 0, 
                "aliases": [
                    "bound padding"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "AttributeMap": {
        "moonray_type": "Map", 
        "moonray_name": "AttributeMap", 
        "folders_sorted": [
            "Primitive Attribute"
        ], 
        "parms": {
            "default_value": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "default_value", 
                "help": "default value to display when the requested attribute is not available", 
                "moonray_type": "Rgb", 
                "houdini_label": "Default Value", 
                "bindable": true, 
                "moonray_name": "default_value", 
                "order": 1, 
                "aliases": [
                    "default value"
                ]
            }, 
            "warn_when_unavailable": {
                "default_value": [
                    false
                ], 
                "houdini_name": "warn_when_unavailable", 
                "help": "Whether or not to issue a warning when the requested attribute is unavailable", 
                "moonray_type": "Bool", 
                "houdini_label": "Warn When Unavailable", 
                "moonray_name": "warn_when_unavailable", 
                "order": 2
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "input color - preferably a connected map", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "color", 
                "order": 5
            }, 
            "primitive_attribute_type": {
                "default_value": [
                    3
                ], 
                "houdini_name": "primitive_attribute_type", 
                "help": "the type of primitive attribute to display when attribute 'map type' is set to 'primitive attribute'", 
                "moonray_type": "Int", 
                "menu": [
                    "float", 
                    "vec2f", 
                    "vec3f", 
                    "rgb", 
                    "int"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Type", 
                "moonray_name": "primitive_attribute_type", 
                "order": 4, 
                "aliases": [
                    "primitive attribute type"
                ]
            }, 
            "primitive_attribute_name": {
                "default_value": [
                    "Cd"
                ], 
                "houdini_name": "primitive_attribute_name", 
                "help": "the name of primitive attribute to display when attribute 'map type' is set to 'primitive attribute'", 
                "moonray_type": "String", 
                "houdini_label": "Name", 
                "moonray_name": "primitive_attribute_name", 
                "order": 3, 
                "aliases": [
                    "primitive attribute name"
                ]
            }, 
            "map_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "map_type", 
                "moonray_type": "Int", 
                "menu": [
                    "primitive attribute", 
                    "position", 
                    "texture st", 
                    "shading normal", 
                    "geometric normal", 
                    "dpds", 
                    "dpdt", 
                    "dnds", 
                    "dndt", 
                    "map color", 
                    "hair surface P", 
                    "hair surface N", 
                    "hair surface st", 
                    "hair closest surface st", 
                    "id", 
                    "velocity", 
                    "acceleration", 
                    "motionvec"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "12", 
                    "13", 
                    "14", 
                    "15", 
                    "16", 
                    "17", 
                    "18", 
                    "19"
                ], 
                "houdini_label": "Map Type", 
                "moonray_name": "map_type", 
                "order": 0, 
                "aliases": [
                    "map type"
                ]
            }
        }, 
        "folders_with_parms": {
            "Primitive Attribute": [
                "primitive_attribute_name", 
                "primitive_attribute_type"
            ]
        }
    }, 
    "SwitchNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "SwitchNormalMap", 
        "folders_sorted": [], 
        "parms": {
            "input2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input2", 
                "interface": "NormalMap", 
                "moonray_name": "input2", 
                "order": 3
            }, 
            "input3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input3", 
                "interface": "NormalMap", 
                "moonray_name": "input3", 
                "order": 4
            }, 
            "input0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input0", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input0", 
                "interface": "NormalMap", 
                "moonray_name": "input0", 
                "order": 1
            }, 
            "input1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input1", 
                "interface": "NormalMap", 
                "moonray_name": "input1", 
                "order": 2
            }, 
            "input6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input6", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input6", 
                "interface": "NormalMap", 
                "moonray_name": "input6", 
                "order": 7
            }, 
            "input7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input7", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input7", 
                "interface": "NormalMap", 
                "moonray_name": "input7", 
                "order": 8
            }, 
            "input4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input4", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input4", 
                "interface": "NormalMap", 
                "moonray_name": "input4", 
                "order": 5
            }, 
            "input5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input5", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input5", 
                "interface": "NormalMap", 
                "moonray_name": "input5", 
                "order": 6
            }, 
            "input62": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input62", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input62", 
                "interface": "NormalMap", 
                "moonray_name": "input62", 
                "order": 63
            }, 
            "input8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input8", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input8", 
                "interface": "NormalMap", 
                "moonray_name": "input8", 
                "order": 9
            }, 
            "input9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input9", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input9", 
                "interface": "NormalMap", 
                "moonray_name": "input9", 
                "order": 10
            }, 
            "input54": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input54", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input54", 
                "interface": "NormalMap", 
                "moonray_name": "input54", 
                "order": 55
            }, 
            "input25": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input25", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input25", 
                "interface": "NormalMap", 
                "moonray_name": "input25", 
                "order": 26
            }, 
            "input24": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input24", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input24", 
                "interface": "NormalMap", 
                "moonray_name": "input24", 
                "order": 25
            }, 
            "input27": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input27", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input27", 
                "interface": "NormalMap", 
                "moonray_name": "input27", 
                "order": 28
            }, 
            "input26": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input26", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input26", 
                "interface": "NormalMap", 
                "moonray_name": "input26", 
                "order": 27
            }, 
            "input21": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input21", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input21", 
                "interface": "NormalMap", 
                "moonray_name": "input21", 
                "order": 22
            }, 
            "input20": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input20", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input20", 
                "interface": "NormalMap", 
                "moonray_name": "input20", 
                "order": 21
            }, 
            "input23": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input23", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input23", 
                "interface": "NormalMap", 
                "moonray_name": "input23", 
                "order": 24
            }, 
            "input22": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input22", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input22", 
                "interface": "NormalMap", 
                "moonray_name": "input22", 
                "order": 23
            }, 
            "input29": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input29", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input29", 
                "interface": "NormalMap", 
                "moonray_name": "input29", 
                "order": 30
            }, 
            "input28": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input28", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input28", 
                "interface": "NormalMap", 
                "moonray_name": "input28", 
                "order": 29
            }, 
            "input61": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input61", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input61", 
                "interface": "NormalMap", 
                "moonray_name": "input61", 
                "order": 62
            }, 
            "input47": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input47", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input47", 
                "interface": "NormalMap", 
                "moonray_name": "input47", 
                "order": 48
            }, 
            "input46": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input46", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input46", 
                "interface": "NormalMap", 
                "moonray_name": "input46", 
                "order": 47
            }, 
            "input45": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input45", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input45", 
                "interface": "NormalMap", 
                "moonray_name": "input45", 
                "order": 46
            }, 
            "input44": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input44", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input44", 
                "interface": "NormalMap", 
                "moonray_name": "input44", 
                "order": 45
            }, 
            "input43": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input43", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input43", 
                "interface": "NormalMap", 
                "moonray_name": "input43", 
                "order": 44
            }, 
            "input42": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input42", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input42", 
                "interface": "NormalMap", 
                "moonray_name": "input42", 
                "order": 43
            }, 
            "input41": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input41", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input41", 
                "interface": "NormalMap", 
                "moonray_name": "input41", 
                "order": 42
            }, 
            "input40": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input40", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input40", 
                "interface": "NormalMap", 
                "moonray_name": "input40", 
                "order": 41
            }, 
            "input55": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input55", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input55", 
                "interface": "NormalMap", 
                "moonray_name": "input55", 
                "order": 56
            }, 
            "input49": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input49", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input49", 
                "interface": "NormalMap", 
                "moonray_name": "input49", 
                "order": 50
            }, 
            "input48": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input48", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input48", 
                "interface": "NormalMap", 
                "moonray_name": "input48", 
                "order": 49
            }, 
            "input60": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input60", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input60", 
                "interface": "NormalMap", 
                "moonray_name": "input60", 
                "order": 61
            }, 
            "choice": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use, values greater than 63 get cycled back to be in [0,63]", 
                "moonray_type": "Float", 
                "houdini_label": "Choice", 
                "bindable": true, 
                "moonray_name": "choice", 
                "order": 0
            }, 
            "input32": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input32", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input32", 
                "interface": "NormalMap", 
                "moonray_name": "input32", 
                "order": 33
            }, 
            "input33": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input33", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input33", 
                "interface": "NormalMap", 
                "moonray_name": "input33", 
                "order": 34
            }, 
            "input30": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input30", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input30", 
                "interface": "NormalMap", 
                "moonray_name": "input30", 
                "order": 31
            }, 
            "input31": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input31", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input31", 
                "interface": "NormalMap", 
                "moonray_name": "input31", 
                "order": 32
            }, 
            "input36": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input36", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input36", 
                "interface": "NormalMap", 
                "moonray_name": "input36", 
                "order": 37
            }, 
            "input37": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input37", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input37", 
                "interface": "NormalMap", 
                "moonray_name": "input37", 
                "order": 38
            }, 
            "input34": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input34", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input34", 
                "interface": "NormalMap", 
                "moonray_name": "input34", 
                "order": 35
            }, 
            "input35": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input35", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input35", 
                "interface": "NormalMap", 
                "moonray_name": "input35", 
                "order": 36
            }, 
            "input63": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input63", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input63", 
                "interface": "NormalMap", 
                "moonray_name": "input63", 
                "order": 64
            }, 
            "input58": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input58", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input58", 
                "interface": "NormalMap", 
                "moonray_name": "input58", 
                "order": 59
            }, 
            "input38": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input38", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input38", 
                "interface": "NormalMap", 
                "moonray_name": "input38", 
                "order": 39
            }, 
            "input39": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input39", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input39", 
                "interface": "NormalMap", 
                "moonray_name": "input39", 
                "order": 40
            }, 
            "input59": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input59", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input59", 
                "interface": "NormalMap", 
                "moonray_name": "input59", 
                "order": 60
            }, 
            "input18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input18", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input18", 
                "interface": "NormalMap", 
                "moonray_name": "input18", 
                "order": 19
            }, 
            "input19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input19", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input19", 
                "interface": "NormalMap", 
                "moonray_name": "input19", 
                "order": 20
            }, 
            "input56": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input56", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input56", 
                "interface": "NormalMap", 
                "moonray_name": "input56", 
                "order": 57
            }, 
            "input57": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input57", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input57", 
                "interface": "NormalMap", 
                "moonray_name": "input57", 
                "order": 58
            }, 
            "input50": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input50", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input50", 
                "interface": "NormalMap", 
                "moonray_name": "input50", 
                "order": 51
            }, 
            "input51": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input51", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input51", 
                "interface": "NormalMap", 
                "moonray_name": "input51", 
                "order": 52
            }, 
            "input52": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input52", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input52", 
                "interface": "NormalMap", 
                "moonray_name": "input52", 
                "order": 53
            }, 
            "input53": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input53", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input53", 
                "interface": "NormalMap", 
                "moonray_name": "input53", 
                "order": 54
            }, 
            "input10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input10", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input10", 
                "interface": "NormalMap", 
                "moonray_name": "input10", 
                "order": 11
            }, 
            "input11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input11", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input11", 
                "interface": "NormalMap", 
                "moonray_name": "input11", 
                "order": 12
            }, 
            "input12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input12", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input12", 
                "interface": "NormalMap", 
                "moonray_name": "input12", 
                "order": 13
            }, 
            "input13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input13", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input13", 
                "interface": "NormalMap", 
                "moonray_name": "input13", 
                "order": 14
            }, 
            "input14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input14", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input14", 
                "interface": "NormalMap", 
                "moonray_name": "input14", 
                "order": 15
            }, 
            "input15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input15", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input15", 
                "interface": "NormalMap", 
                "moonray_name": "input15", 
                "order": 16
            }, 
            "input16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input16", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input16", 
                "interface": "NormalMap", 
                "moonray_name": "input16", 
                "order": 17
            }, 
            "input17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input17", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input17", 
                "interface": "NormalMap", 
                "moonray_name": "input17", 
                "order": 18
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ProjectPlanarMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectPlanarMap", 
        "folders_sorted": [], 
        "parms": {
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 5
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 8
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 4
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 3
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 7
            }, 
            "project_on_back_faces": {
                "default_value": [
                    true
                ], 
                "houdini_name": "project_on_back_faces", 
                "help": "Toggles whether projections appear on back faces relative to projector", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Back Faces", 
                "moonray_name": "project_on_back_faces", 
                "order": 0, 
                "aliases": [
                    "project on back faces"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 10
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 2, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "black_outside_projection": {
                "default_value": [
                    false
                ], 
                "houdini_name": "black_outside_projection", 
                "help": "Toggles whether projections appear outside the 0-1 uv range of the projector", 
                "moonray_type": "Bool", 
                "houdini_label": "Black Outside Projection", 
                "moonray_name": "black_outside_projection", 
                "order": 1
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 9
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 6
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaFabricMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaFabricMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Glitter", 
            "Fabric", 
            "Diffuse", 
            "Threads", 
            "Emission", 
            "Normal", 
            "Common"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 59, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 57
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "weft_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "weft_color", 
                "help": "Color of the fabric specular highlights from the weft threads.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Weft Color", 
                "bindable": true, 
                "moonray_name": "weft_color", 
                "order": 40, 
                "aliases": [
                    "weft color"
                ]
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 16
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 13
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 30
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 26
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 21
            }, 
            "weft_roughness": {
                "default_value": [
                    0.75
                ], 
                "houdini_name": "weft_roughness", 
                "help": "Roughness of the fabric specular highlights from the weft threads.", 
                "moonray_type": "Float", 
                "houdini_label": "Weft Roughness", 
                "bindable": true, 
                "moonray_name": "weft_roughness", 
                "order": 41, 
                "aliases": [
                    "weft roughness"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 11
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 45
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 17
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 54, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 58, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 12
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 49, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 23
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 18
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 53, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 35
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 33
            }, 
            "fabric_diffuse_scattering": {
                "default_value": [
                    0.2
                ], 
                "houdini_name": "fabric_diffuse_scattering", 
                "help": "Amount of diffuse to mix in fabric. A value of 1 means fully diffuse fabric.", 
                "moonray_type": "Float", 
                "houdini_label": "Fabric Diffuse Scattering", 
                "bindable": true, 
                "moonray_name": "fabric_diffuse_scattering", 
                "order": 43, 
                "aliases": [
                    "fabric diffuse scattering"
                ]
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 27
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 44, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "use_independent_weft_attributes": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_weft_attributes", 
                "help": "Use a separate set of attributes for the 'weft' thread specular response.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Weft Attributes", 
                "moonray_name": "use_independent_weft_attributes", 
                "order": 39, 
                "aliases": [
                    "use independent weft attributes"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 34, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 31
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 10
            }, 
            "warp_thread_direction": {
                "default_value": [
                    1.0, 
                    1.0, 
                    0.0
                ], 
                "houdini_name": "warp_thread_direction", 
                "help": "Direction of the major/warp thread for the fabric. The fabric highlights will be relative to this direction.", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Warp Thread Direction", 
                "bindable": true, 
                "moonray_name": "warp_thread_direction", 
                "order": 50, 
                "aliases": [
                    "warp thread direction"
                ]
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 29, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "warp_thread_coverage": {
                "default_value": [
                    0.75
                ], 
                "houdini_name": "warp_thread_coverage", 
                "help": "When set to 1, creates specular highlights only relative to the warp thread direction. When less than one, starts acting like a 'woven' fabric with specular contributions added in by a corresponding 'weft' thread direction, perpendicular to the 'warp' thread direction.", 
                "moonray_type": "Float", 
                "houdini_label": "Warp Thread Coverage", 
                "moonray_name": "warp_thread_coverage", 
                "order": 51, 
                "aliases": [
                    "warp thread coverage"
                ]
            }, 
            "use_UVs_for_thread_direction": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_UVs_for_thread_direction", 
                "help": "Use UV texture coordinates to compute thread direction (along dPds). Switch OFF for seamless camera aligned thread direction.  The warp_thread_direction parameter rotates this direction in tangent space.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use UVs For Thread Direction", 
                "moonray_name": "use_UVs_for_thread_direction", 
                "order": 42
            }, 
            "warp_roughness": {
                "default_value": [
                    0.75
                ], 
                "houdini_name": "warp_roughness", 
                "help": "Roughness of the fabric specular highlights. Or if 'use independent weft attributes' is 'true,' just the roughness of the fabric specular highlights of the warp threads.", 
                "moonray_type": "Float", 
                "houdini_label": "Warp Roughness", 
                "bindable": true, 
                "moonray_name": "warp_roughness", 
                "order": 38, 
                "aliases": [
                    "warp roughness"
                ]
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 14
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 55, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 20
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 25
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 46
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 32
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "warp_thread_elevation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "warp_thread_elevation", 
                "help": "This attribute can be used to 'elevate/rotate' the threads from their default direction. When laying flat on the surface (thread_direction.z=0), a value around 45 works well for 'silky' looks. Range - -90, +90. When threads are upright (thread_direction.z=1), this attribute can be used to 'dishevel' the threads and create a 'velvety' look (see wiki).", 
                "moonray_type": "Float", 
                "houdini_label": "Warp Thread Elevation", 
                "bindable": true, 
                "moonray_name": "warp_thread_elevation", 
                "order": 52, 
                "aliases": [
                    "warp thread elevation"
                ]
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 28, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 22
            }, 
            "warp_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "warp_color", 
                "help": "Color of the fabric specular highlights. Or if 'use independent weft attributes' is 'true,' just the color of the fabric specular highlights of the warp threads.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Warp Color", 
                "bindable": true, 
                "moonray_name": "warp_color", 
                "order": 37, 
                "aliases": [
                    "warp color"
                ]
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 48, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 56, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "Enables/disables specular fabric lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 36, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 47
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 24
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 19
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Fabric": [
                "show_specular", 
                "warp_color", 
                "warp_roughness", 
                "use_independent_weft_attributes", 
                "weft_color", 
                "weft_roughness", 
                "use_UVs_for_thread_direction"
            ], 
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Threads": [
                "warp_thread_direction", 
                "warp_thread_coverage", 
                "warp_thread_elevation"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "fabric_diffuse_scattering", 
                "show_diffuse", 
                "albedo", 
                "diffuse_roughness", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ]
        }
    }, 
    "ConvolutionDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ConvolutionDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "kernel_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "kernel_type", 
                "help": "Kernel to use for convolution.", 
                "moonray_type": "Int", 
                "menu": [
                    "gaussian", 
                    "box", 
                    "custom"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Kernel Type", 
                "moonray_name": "kernel_type", 
                "order": 0
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 5
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 4
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 6
            }, 
            "custom_kernel": {
                "default_value": [], 
                "houdini_name": "custom_kernel", 
                "help": "A list of kernel values for a custom filter. The number of values provided must be the square of an odd number (e.g. 3x3, 5x5, 7x7).", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Custom Kernel", 
                "moonray_name": "custom_kernel", 
                "order": 3
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to convolve", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 1
            }, 
            "kernel_size": {
                "default_value": [
                    5
                ], 
                "houdini_name": "kernel_size", 
                "help": "Size of kernel in pixels. Size must be odd. If using a custom kernel, this attribute is ignored, and the size of the custom kernel is used instead.", 
                "moonray_type": "Int", 
                "houdini_label": "Kernel Size", 
                "moonray_name": "kernel_size", 
                "order": 2
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "ShadowDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ShadowDisplayFilter", 
        "folders_sorted": [], 
        "parms": {
            "shadow_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "shadow_color", 
                "help": "Color of the shadow", 
                "moonray_type": "Rgb", 
                "houdini_label": "Shadow Color", 
                "moonray_name": "shadow_color", 
                "order": 3
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "Blend value between occluded and unoccluded images. 1 = completely occluded. 0 = completely unoccluded.", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 2
            }, 
            "unoccluded": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "unoccluded", 
                "help": "RenderOutput containing the unoccluded image", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Unoccluded", 
                "interface": "RenderOutput", 
                "moonray_name": "unoccluded", 
                "order": 1
            }, 
            "occluded": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "occluded", 
                "help": "RenderOutput containing the occluded image", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Occluded", 
                "interface": "RenderOutput", 
                "moonray_name": "occluded", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "Layer": {
        "moonray_type": "TraceSet", 
        "moonray_name": "Layer", 
        "folders_sorted": [], 
        "parms": {
            "lightfiltersets": {
                "default_value": [], 
                "houdini_name": "lightfiltersets", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Lightfiltersets", 
                "interface": "LightFilterSet", 
                "moonray_name": "lightfiltersets", 
                "order": 6
            }, 
            "geometries": {
                "default_value": [], 
                "houdini_name": "geometries", 
                "moonray_type": "SceneObjectIndexable", 
                "houdini_label": "Geometries", 
                "interface": "Geometry", 
                "moonray_name": "geometries", 
                "order": 0
            }, 
            "lightsets": {
                "default_value": [], 
                "houdini_name": "lightsets", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Lightsets", 
                "interface": "LightSet", 
                "moonray_name": "lightsets", 
                "order": 3
            }, 
            "shadowreceiversets": {
                "default_value": [], 
                "houdini_name": "shadowreceiversets", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Shadowreceiversets", 
                "interface": "ShadowReceiverSet", 
                "moonray_name": "shadowreceiversets", 
                "order": 8
            }, 
            "surface_shaders": {
                "default_value": [], 
                "houdini_name": "surface_shaders", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Surface Shaders", 
                "interface": "Material", 
                "moonray_name": "surface_shaders", 
                "order": 2, 
                "aliases": [
                    "surface shaders"
                ]
            }, 
            "parts": {
                "default_value": [], 
                "houdini_name": "parts", 
                "moonray_type": "StringVector", 
                "houdini_label": "Parts", 
                "moonray_name": "parts", 
                "order": 1
            }, 
            "shadowsets": {
                "default_value": [], 
                "houdini_name": "shadowsets", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Shadowsets", 
                "interface": "ShadowSet", 
                "moonray_name": "shadowsets", 
                "order": 7
            }, 
            "displacements": {
                "default_value": [], 
                "houdini_name": "displacements", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Displacements", 
                "interface": "Displacement", 
                "moonray_name": "displacements", 
                "order": 4
            }, 
            "volume_shaders": {
                "default_value": [], 
                "houdini_name": "volume_shaders", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Volume Shaders", 
                "interface": "Volume", 
                "moonray_name": "volume_shaders", 
                "order": 5, 
                "aliases": [
                    "volume shaders"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaMetalMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaMetalMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Clearcoat", 
            "Glitter", 
            "Specular", 
            "Iridescence", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "metallic_edge_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_edge_color", 
                "help": "the reflection color at grazing angles, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Edge Color", 
                "bindable": true, 
                "moonray_name": "metallic_edge_color", 
                "order": 50, 
                "aliases": [
                    "metallic edge color"
                ]
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 29
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 32
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 55
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 73
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 27
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 74
            }, 
            "use_independent_clearcoat_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_clearcoat_normal", 
                "help": "specifies whether the clearcoat lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Clearcoat Normal", 
                "moonray_name": "use_independent_clearcoat_normal", 
                "order": 18, 
                "aliases": [
                    "use independent clearcoat normal"
                ]
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 41
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 37
            }, 
            "show_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_clearcoat", 
                "help": "enables/disables clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Clearcoat", 
                "moonray_name": "show_clearcoat", 
                "order": 10, 
                "aliases": [
                    "show clearcoat"
                ]
            }, 
            "clearcoat": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat", 
                "help": "enables/disables clearcoat (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Clearcoat", 
                "bindable": true, 
                "moonray_name": "clearcoat", 
                "order": 11
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 58, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 56
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 51
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 22
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 28
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 63, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 67, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 36
            }, 
            "clearcoat_attenuation_color": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "clearcoat_attenuation_color", 
                "help": "the attenuation color of the clearcoat when 'cleacoat thickness' > 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "clearcoat_attenuation_color", 
                "order": 16, 
                "aliases": [
                    "clearcoat attenuation color"
                ]
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 23
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 34
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 60
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 65, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "clearcoat_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "clearcoat_model", 
                "help": "sets the normal distribution function for clearcoat.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "clearcoat_model", 
                "order": 12, 
                "aliases": [
                    "clearcoat model"
                ]
            }, 
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 77
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 46
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "independent_clearcoat_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_clearcoat_normal", 
                "help": "specifies an independent shading normal (normal map) for the clearcoat lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Clearcoat Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_clearcoat_normal", 
                "order": 19, 
                "aliases": [
                    "independent clearcoat normal"
                ]
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 44
            }, 
            "clearcoat_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat_normal_dial", 
                "help": "controls the amount of infuence of the alternate clearcoat normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "clearcoat_normal_dial", 
                "order": 20, 
                "aliases": [
                    "clearcoat normal dial"
                ]
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 38
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 53, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 61, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 39, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "clearcoat_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "clearcoat_roughness", 
                "help": "the roughness of the clearcoat lobe", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "clearcoat_roughness", 
                "order": 14, 
                "aliases": [
                    "clearcoat roughness"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 45, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 42
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 31
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 21
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 40, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 68, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 54
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 69, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 76, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 25
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 70, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 59, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 72
            }, 
            "clearcoat_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "clearcoat_refractive_index", 
                "help": "defines the Fresnel behavior", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "clearcoat_refractive_index", 
                "order": 13, 
                "aliases": [
                    "clearcoat refractive index"
                ]
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 64, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "clearcoat_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clearcoat_bending", 
                "help": "(advanced, recommended ON) bends rays based on the clearcoat-refractive-index before evaluating the lobes under clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Bending", 
                "moonray_name": "clearcoat_bending", 
                "order": 17, 
                "aliases": [
                    "clearcoat bending"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 75, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 43
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 48, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 24
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 33
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 52
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 71, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "clearcoat_thickness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clearcoat_thickness", 
                "help": "the thickness of the virtual clearcoat layer. Values > 0 enable absorption", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "clearcoat_thickness", 
                "order": 15, 
                "aliases": [
                    "clearcoat thickness"
                ]
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 62, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 47, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 35
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 30
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 66, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 26
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 57, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "metallic_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_color", 
                "help": "the overall reflection color, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Color", 
                "bindable": true, 
                "moonray_name": "metallic_color", 
                "order": 49, 
                "aliases": [
                    "metallic color"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "show_specular", 
                "specular_model", 
                "metallic_color", 
                "metallic_edge_color", 
                "roughness", 
                "anisotropy", 
                "shading_tangent"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Clearcoat": [
                "show_clearcoat", 
                "clearcoat", 
                "clearcoat_model", 
                "clearcoat_refractive_index", 
                "clearcoat_roughness", 
                "clearcoat_thickness", 
                "clearcoat_attenuation_color", 
                "clearcoat_bending", 
                "use_independent_clearcoat_normal", 
                "independent_clearcoat_normal", 
                "clearcoat_normal_dial"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Advanced": [
                "specular"
            ]
        }
    }, 
    "HairDiffuseMaterial": {
        "moonray_type": "DwaBaseHairLayerable", 
        "moonray_name": "HairDiffuseMaterial", 
        "folders_sorted": [
            "Common", 
            "Advanced", 
            "Subsurface", 
            "Emission"
        ], 
        "parms": {
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 13, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for SSS", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 16, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 3
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface.  When 0 surface diffuse is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 12, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "back_hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "back_hair_color", 
                "help": "(advanced only) hair color used for back-lit hair (transmission/forward reflectance)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Back Hair Color", 
                "bindable": true, 
                "moonray_name": "back_hair_color", 
                "order": 8
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 11, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "hair_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Hair Color", 
                "bindable": true, 
                "moonray_name": "hair_color", 
                "order": 5, 
                "aliases": [
                    "hair color"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole. Random walk unsupported for hair.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 10
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 18, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal (only for SSS lobe)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 15, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 17, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 4, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "use_independent_front_and_back_hair_color": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_front_and_back_hair_color", 
                "help": "(advanced) use a separate hair color for front and back", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Front And Back Hair Color", 
                "moonray_name": "use_independent_front_and_back_hair_color", 
                "order": 6
            }, 
            "subsurface_blend": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "subsurface_blend", 
                "help": "0 is fully hair diffuse, 1 is fully SSS. No effect if scattering radius is 0.", 
                "moonray_type": "Float", 
                "houdini_label": "Blend", 
                "bindable": true, 
                "moonray_name": "subsurface_blend", 
                "order": 9, 
                "aliases": [
                    "subsurface blend"
                ]
            }, 
            "front_hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "front_hair_color", 
                "help": "(advanced only) hair color used for front-lit hair (backward reflectance)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Front Hair Color", 
                "bindable": true, 
                "moonray_name": "front_hair_color", 
                "order": 7
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 14, 
                "aliases": [
                    "enable sss input normal"
                ]
            }
        }, 
        "folders_with_parms": {
            "Subsurface": [
                "subsurface_blend", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "input_normal", 
                "input_normal_dial"
            ], 
            "Common": [
                "presence", 
                "casts_caustics"
            ], 
            "Advanced": [
                "use_independent_front_and_back_hair_color", 
                "front_hair_color", 
                "back_hair_color", 
                "sss_trace_set"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ]
        }
    }, 
    "ClampDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ClampDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 4
            }, 
            "min": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "min", 
                "help": "Minimum color value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Min", 
                "moonray_name": "min", 
                "order": 1
            }, 
            "max": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "max", 
                "help": "Maximum color value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Max", 
                "moonray_name": "max", 
                "order": 2
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to clamp", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "RdlInstancerGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "RdlInstancerGeometry", 
        "folders_sorted": [], 
        "parms": {
            "scales": {
                "default_value": [], 
                "houdini_name": "scales", 
                "help": "A list of vec3 that represet the per-instance velocity(motion blur). The length should be either 0 or consistent with \"positions\".", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Scales", 
                "moonray_name": "scales", 
                "order": 26
            }, 
            "disable_indices": {
                "default_value": [], 
                "houdini_name": "disable_indices", 
                "help": "A list of index values to hide / disable. For example, with 4 instances you can supply a list of 0, 2 to disable those instances. If an index in this list is out of range, it is ignored.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Disable Indices", 
                "moonray_name": "disable_indices", 
                "order": 29, 
                "aliases": [
                    "disableIndices"
                ]
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "use_reference_xforms": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_xforms", 
                "help": "Transform the reference (prototype) geometry by it's node_xform parameter before applying the instance transform", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Xforms", 
                "moonray_name": "use_reference_xforms", 
                "order": 32
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "ref_indices": {
                "default_value": [], 
                "houdini_name": "ref_indices", 
                "help": "A list of index values to specify entry of \"reference\" per instance. The length should be either 0 or consistent with \"positions\"|\"xform_list\". The index entry falls back to 0 when this attribute is empty or the value of entry is out of index range", 
                "moonray_type": "IntVector", 
                "houdini_label": "Ref Indices", 
                "moonray_name": "ref_indices", 
                "order": 28, 
                "aliases": [
                    "refIndices"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "xform_list": {
                "default_value": [], 
                "houdini_name": "xform_list", 
                "help": "A list of xforms that represent the per-instance xform.", 
                "moonray_type": "Mat4dVector", 
                "houdini_label": "Xform List", 
                "moonray_name": "xform_list", 
                "order": 23
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "method": {
                "default_value": [
                    0
                ], 
                "houdini_name": "method", 
                "help": "Specify the source of xforms/refIndices for instancing. If set to \"xform attributes\", taking data from attributes \"positions\", \"orientations\", \"scales\", \"velocities\" and \"refIndices\". If set to \"xform list\", taking data from \"xform list\", \"velocities\" and \"refIndices\". ", 
                "moonray_type": "Int", 
                "menu": [
                    "xform attributes", 
                    "xform list"
                ], 
                "menu_values": [
                    "0", 
                    "2"
                ], 
                "houdini_label": "Method", 
                "moonray_name": "method", 
                "order": 21
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "evaluation_frame": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "evaluation_frame", 
                "help": "Evaluate geometry at specified frame (relative) instead of SceneVariables frame.", 
                "moonray_type": "Float", 
                "houdini_label": "Evaluation Frame", 
                "moonray_name": "evaluation_frame", 
                "order": 31, 
                "aliases": [
                    "evaluation frame"
                ]
            }, 
            "orientations": {
                "default_value": [], 
                "houdini_name": "orientations", 
                "help": "A list of quaternions that represent the per-instance orientation. The length should be either 0 or consistent with \"positions\".", 
                "moonray_type": "Vec4fVector", 
                "houdini_label": "Orientations", 
                "moonray_name": "orientations", 
                "order": 25
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "A list of UserData to specify arbitrary primitive attributes(For example, color or roughness multiplier) per -instance", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "interface": "UserData", 
                "moonray_name": "primitive_attributes", 
                "order": 30, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "positions": {
                "default_value": [], 
                "houdini_name": "positions", 
                "help": "A list of vec3 that represent the per-instance position.", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Positions", 
                "moonray_name": "positions", 
                "order": 24
            }, 
            "velocities": {
                "default_value": [], 
                "houdini_name": "velocities", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocities", 
                "moonray_name": "velocities", 
                "order": 27
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "use_reference_attributes": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_reference_attributes", 
                "help": "Use the geometry attributes of the reference (prototype) instead of the ones on the InstanceGeometry.   Currently only works for shadow_ray_epsilon", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Attributes", 
                "moonray_name": "use_reference_attributes", 
                "order": 33
            }, 
            "instance_level": {
                "default_value": [
                    0
                ], 
                "houdini_name": "instance_level", 
                "help": "Level of this instance.  This level can be referenced in TransformSpaceMap to allow for transforming data to/from the local space of each instance this instancer produces.", 
                "moonray_type": "Int", 
                "menu": [
                    "instance level 0", 
                    "instance level 1", 
                    "instance level 2", 
                    "instance level 3", 
                    "instance level 4"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Instance Level", 
                "moonray_name": "instance_level", 
                "order": 22
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ProjectTriplanarMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectTriplanarMap", 
        "folders_sorted": [
            "Positive X Modifiers", 
            "Positive Y Modifiers", 
            "Positive Z Modifiers", 
            "Negative X Modifiers", 
            "Negative Y Modifiers", 
            "Negative Z Modifiers"
        ], 
        "parms": {
            "positive_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert S", 
                "moonray_name": "positive_z_invert_s", 
                "order": 39, 
                "aliases": [
                    "positive z invert s"
                ]
            }, 
            "negative_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Scale", 
                "moonray_name": "negative_y_scale", 
                "order": 53, 
                "aliases": [
                    "negative y scale"
                ]
            }, 
            "negative_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Rotation Center", 
                "moonray_name": "negative_z_rotation_center", 
                "order": 67, 
                "aliases": [
                    "negative z rotation center"
                ]
            }, 
            "negative_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Swap St", 
                "moonray_name": "negative_y_swap_st", 
                "order": 57, 
                "aliases": [
                    "negative y swap st"
                ]
            }, 
            "negative_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative X Rotation", 
                "moonray_name": "negative_x_rotation", 
                "order": 50, 
                "aliases": [
                    "negative x rotation"
                ]
            }, 
            "randomize_flip": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_flip", 
                "help": "Rnd flipping in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Flip", 
                "moonray_name": "randomize_flip", 
                "order": 7, 
                "aliases": [
                    "randomize flip"
                ]
            }, 
            "positive_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Offset", 
                "moonray_name": "positive_y_offset", 
                "order": 30, 
                "aliases": [
                    "positive y offset"
                ]
            }, 
            "positive_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Wrap Around", 
                "moonray_name": "positive_x_wrap_around", 
                "order": 28, 
                "aliases": [
                    "positive x wrap around"
                ]
            }, 
            "negative_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert S", 
                "moonray_name": "negative_z_invert_s", 
                "order": 63, 
                "aliases": [
                    "negative z invert s"
                ]
            }, 
            "negative_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative X Texture", 
                "moonray_name": "negative_x_texture", 
                "order": 16, 
                "aliases": [
                    "negative x texture"
                ]
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 69
            }, 
            "positive_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert T", 
                "moonray_name": "positive_x_invert_t", 
                "order": 24, 
                "aliases": [
                    "positive x invert t"
                ]
            }, 
            "positive_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive X Rotation", 
                "moonray_name": "positive_x_rotation", 
                "order": 26, 
                "aliases": [
                    "positive x rotation"
                ]
            }, 
            "positive_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Y Texture", 
                "moonray_name": "positive_y_texture", 
                "order": 12, 
                "aliases": [
                    "positive y texture"
                ]
            }, 
            "positive_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Scale", 
                "moonray_name": "positive_y_scale", 
                "order": 29, 
                "aliases": [
                    "positive y scale"
                ]
            }, 
            "positive_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert S", 
                "moonray_name": "positive_x_invert_s", 
                "order": 23, 
                "aliases": [
                    "positive x invert s"
                ]
            }, 
            "negative_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Rotation Center", 
                "moonray_name": "negative_x_rotation_center", 
                "order": 51, 
                "aliases": [
                    "negative x rotation center"
                ]
            }, 
            "negative_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Wrap Around", 
                "moonray_name": "negative_z_wrap_around", 
                "order": 68, 
                "aliases": [
                    "negative z wrap around"
                ]
            }, 
            "positive_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert S", 
                "moonray_name": "positive_y_invert_s", 
                "order": 31, 
                "aliases": [
                    "positive y invert s"
                ]
            }, 
            "negative_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Scale", 
                "moonray_name": "negative_x_scale", 
                "order": 45, 
                "aliases": [
                    "negative x scale"
                ]
            }, 
            "negative_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Z Rotation", 
                "moonray_name": "negative_z_rotation", 
                "order": 66, 
                "aliases": [
                    "negative z rotation"
                ]
            }, 
            "positive_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert T", 
                "moonray_name": "positive_y_invert_t", 
                "order": 32, 
                "aliases": [
                    "positive y invert t"
                ]
            }, 
            "positive_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Rotation Center", 
                "moonray_name": "positive_z_rotation_center", 
                "order": 43, 
                "aliases": [
                    "positive z rotation center"
                ]
            }, 
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 71
            }, 
            "positive_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Swap St", 
                "moonray_name": "positive_y_swap_st", 
                "order": 33, 
                "aliases": [
                    "positive y swap st"
                ]
            }, 
            "positive_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Swap St", 
                "moonray_name": "positive_z_swap_st", 
                "order": 41, 
                "aliases": [
                    "positive z swap st"
                ]
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 70
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 73
            }, 
            "positive_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert T", 
                "moonray_name": "positive_z_invert_t", 
                "order": 40, 
                "aliases": [
                    "positive z invert t"
                ]
            }, 
            "positive_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Offset", 
                "moonray_name": "positive_z_offset", 
                "order": 38, 
                "aliases": [
                    "positive z offset"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 72
            }, 
            "positive_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Rotation Center", 
                "moonray_name": "positive_y_rotation_center", 
                "order": 35, 
                "aliases": [
                    "positive y rotation center"
                ]
            }, 
            "negative_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Active", 
                "moonray_name": "negative_x_active", 
                "order": 15, 
                "aliases": [
                    "negative x active"
                ]
            }, 
            "positive_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Rotation Center", 
                "moonray_name": "positive_x_rotation_center", 
                "order": 27, 
                "aliases": [
                    "positive x rotation center"
                ]
            }, 
            "positive_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Active", 
                "moonray_name": "positive_y_active", 
                "order": 11, 
                "aliases": [
                    "positive y active"
                ]
            }, 
            "positive_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Swap St", 
                "moonray_name": "positive_x_swap_st", 
                "order": 25, 
                "aliases": [
                    "positive x swap st"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 74
            }, 
            "negative_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Offset", 
                "moonray_name": "negative_y_offset", 
                "order": 54, 
                "aliases": [
                    "negative y offset"
                ]
            }, 
            "negative_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert T", 
                "moonray_name": "negative_x_invert_t", 
                "order": 48, 
                "aliases": [
                    "negative x invert t"
                ]
            }, 
            "negative_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Offset", 
                "moonray_name": "negative_x_offset", 
                "order": 46, 
                "aliases": [
                    "negative x offset"
                ]
            }, 
            "negative_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Swap St", 
                "moonray_name": "negative_z_swap_st", 
                "order": 65, 
                "aliases": [
                    "negative z swap st"
                ]
            }, 
            "positive_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Active", 
                "moonray_name": "positive_x_active", 
                "order": 9, 
                "aliases": [
                    "positive x active"
                ]
            }, 
            "positive_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive X Texture", 
                "moonray_name": "positive_x_texture", 
                "order": 10, 
                "aliases": [
                    "positive x texture"
                ]
            }, 
            "random_seed": {
                "default_value": [
                    8241
                ], 
                "houdini_name": "random_seed", 
                "help": "Seed for randomizing orientation, offset, and flip", 
                "moonray_type": "Int", 
                "houdini_label": "Random Seed", 
                "moonray_name": "random_seed", 
                "order": 5, 
                "aliases": [
                    "random seed"
                ]
            }, 
            "positive_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Scale", 
                "moonray_name": "positive_z_scale", 
                "order": 37, 
                "aliases": [
                    "positive z scale"
                ]
            }, 
            "positive_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Z Rotation", 
                "moonray_name": "positive_z_rotation", 
                "order": 42, 
                "aliases": [
                    "positive z rotation"
                ]
            }, 
            "negative_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Scale", 
                "moonray_name": "negative_z_scale", 
                "order": 61, 
                "aliases": [
                    "negative z scale"
                ]
            }, 
            "negative_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Y Rotation", 
                "moonray_name": "negative_y_rotation", 
                "order": 58, 
                "aliases": [
                    "negative y rotation"
                ]
            }, 
            "transition_width": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "transition_width", 
                "help": "Controls blending of per-axis projections.   Valid range is 0.0 (no blending) to 1.0 (max blending)", 
                "moonray_type": "Float", 
                "houdini_label": "Transition Width", 
                "moonray_name": "transition_width", 
                "order": 4, 
                "aliases": [
                    "transition width"
                ]
            }, 
            "debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "debug_mode", 
                "help": "for testing", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "dSdx/dSdy", 
                    "dTdx/dTdy"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "debug_mode", 
                "order": 2
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 76
            }, 
            "number_of_textures": {
                "default_value": [
                    3
                ], 
                "houdini_name": "number_of_textures", 
                "help": "Controls the number of active textures.   If set to 'one', only the 'pos x' texture settings will be used for all sides.   If set to 'three' the pos x, pos y, and pos z settings will be used for their respective negative sides.   If set to 'six', each side has independent controls and texture.", 
                "moonray_type": "Int", 
                "menu": [
                    "one", 
                    "three", 
                    "six"
                ], 
                "menu_values": [
                    "1", 
                    "3", 
                    "6"
                ], 
                "houdini_label": "Number Of Textures", 
                "moonray_name": "number_of_textures", 
                "order": 3, 
                "aliases": [
                    "number of textures"
                ]
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "Project onto reference positions ('ref_P') and normals ('ref_N')", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 0, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "positive_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Y Rotation", 
                "moonray_name": "positive_y_rotation", 
                "order": 34, 
                "aliases": [
                    "positive y rotation"
                ]
            }, 
            "positive_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Offset", 
                "moonray_name": "positive_x_offset", 
                "order": 22, 
                "aliases": [
                    "positive x offset"
                ]
            }, 
            "negative_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert S", 
                "moonray_name": "negative_x_invert_s", 
                "order": 47, 
                "aliases": [
                    "negative x invert s"
                ]
            }, 
            "negative_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Y Texture", 
                "moonray_name": "negative_y_texture", 
                "order": 18, 
                "aliases": [
                    "negative y texture"
                ]
            }, 
            "randomize_rotation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_rotation", 
                "help": "Rnd 2d rotation of each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Rotation", 
                "moonray_name": "randomize_rotation", 
                "order": 6, 
                "aliases": [
                    "randomize rotation"
                ]
            }, 
            "randomize_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_offset", 
                "help": "Rnd offset in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Offset", 
                "moonray_name": "randomize_offset", 
                "order": 8, 
                "aliases": [
                    "randomize offset"
                ]
            }, 
            "negative_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert T", 
                "moonray_name": "negative_z_invert_t", 
                "order": 64, 
                "aliases": [
                    "negative z invert t"
                ]
            }, 
            "negative_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Z Texture", 
                "moonray_name": "negative_z_texture", 
                "order": 20, 
                "aliases": [
                    "negative z texture"
                ]
            }, 
            "negative_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Swap St", 
                "moonray_name": "negative_x_swap_st", 
                "order": 49, 
                "aliases": [
                    "negative x swap st"
                ]
            }, 
            "positive_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Wrap Around", 
                "moonray_name": "positive_y_wrap_around", 
                "order": 36, 
                "aliases": [
                    "positive y wrap around"
                ]
            }, 
            "positive_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Scale", 
                "moonray_name": "positive_x_scale", 
                "order": 21, 
                "aliases": [
                    "positive x scale"
                ]
            }, 
            "positive_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Z Texture", 
                "moonray_name": "positive_z_texture", 
                "order": 14, 
                "aliases": [
                    "positive z texture"
                ]
            }, 
            "positive_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Active", 
                "moonray_name": "positive_z_active", 
                "order": 13, 
                "aliases": [
                    "positive z active"
                ]
            }, 
            "negative_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Active", 
                "moonray_name": "negative_y_active", 
                "order": 17, 
                "aliases": [
                    "negative y active"
                ]
            }, 
            "positive_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Wrap Around", 
                "moonray_name": "positive_z_wrap_around", 
                "order": 44, 
                "aliases": [
                    "positive z wrap around"
                ]
            }, 
            "negative_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Active", 
                "moonray_name": "negative_z_active", 
                "order": 19, 
                "aliases": [
                    "negative z active"
                ]
            }, 
            "negative_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Offset", 
                "moonray_name": "negative_z_offset", 
                "order": 62, 
                "aliases": [
                    "negative z offset"
                ]
            }, 
            "negative_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Wrap Around", 
                "moonray_name": "negative_y_wrap_around", 
                "order": 60, 
                "aliases": [
                    "negative y wrap around"
                ]
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 75
            }, 
            "negative_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Wrap Around", 
                "moonray_name": "negative_x_wrap_around", 
                "order": 52, 
                "aliases": [
                    "negative x wrap around"
                ]
            }, 
            "negative_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert T", 
                "moonray_name": "negative_y_invert_t", 
                "order": 56, 
                "aliases": [
                    "negative y invert t"
                ]
            }, 
            "negative_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Rotation Center", 
                "moonray_name": "negative_y_rotation_center", 
                "order": 59, 
                "aliases": [
                    "negative y rotation center"
                ]
            }, 
            "negative_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert S", 
                "moonray_name": "negative_y_invert_s", 
                "order": 55, 
                "aliases": [
                    "negative y invert s"
                ]
            }, 
            "gamma": {
                "default_value": [
                    2
                ], 
                "houdini_name": "gamma", 
                "help": "Controls application of gamma to images (off -0, on - 1, auto - 2).   Auto will apply gamma decoding to 8-bit images", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "on", 
                    "auto"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 1
            }
        }, 
        "folders_with_parms": {
            "Negative Z Modifiers": [
                "negative_z_scale", 
                "negative_z_offset", 
                "negative_z_invert_s", 
                "negative_z_invert_t", 
                "negative_z_swap_st", 
                "negative_z_rotation", 
                "negative_z_rotation_center", 
                "negative_z_wrap_around"
            ], 
            "Positive X Modifiers": [
                "positive_x_scale", 
                "positive_x_offset", 
                "positive_x_invert_s", 
                "positive_x_invert_t", 
                "positive_x_swap_st", 
                "positive_x_rotation", 
                "positive_x_rotation_center", 
                "positive_x_wrap_around"
            ], 
            "Positive Y Modifiers": [
                "positive_y_scale", 
                "positive_y_offset", 
                "positive_y_invert_s", 
                "positive_y_invert_t", 
                "positive_y_swap_st", 
                "positive_y_rotation", 
                "positive_y_rotation_center", 
                "positive_y_wrap_around"
            ], 
            "Negative Y Modifiers": [
                "negative_y_scale", 
                "negative_y_offset", 
                "negative_y_invert_s", 
                "negative_y_invert_t", 
                "negative_y_swap_st", 
                "negative_y_rotation", 
                "negative_y_rotation_center", 
                "negative_y_wrap_around"
            ], 
            "Positive Z Modifiers": [
                "positive_z_scale", 
                "positive_z_offset", 
                "positive_z_invert_s", 
                "positive_z_invert_t", 
                "positive_z_swap_st", 
                "positive_z_rotation", 
                "positive_z_rotation_center", 
                "positive_z_wrap_around"
            ], 
            "Negative X Modifiers": [
                "negative_x_scale", 
                "negative_x_offset", 
                "negative_x_invert_s", 
                "negative_x_invert_t", 
                "negative_x_swap_st", 
                "negative_x_rotation", 
                "negative_x_rotation_center", 
                "negative_x_wrap_around"
            ]
        }
    }, 
    "NoiseMap_v2": {
        "moonray_type": "Map", 
        "moonray_name": "NoiseMap_v2", 
        "folders_sorted": [
            "Flow Noise", 
            "4D", 
            "Adjustment", 
            "Space", 
            "Transform"
        ], 
        "parms": {
            "flow_advection_rate": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flow_advection_rate", 
                "help": "Rate of advection for flow noise", 
                "moonray_type": "Float", 
                "houdini_label": "Flow Advection Rate", 
                "bindable": true, 
                "moonray_name": "flow_advection_rate", 
                "order": 13, 
                "aliases": [
                    "flow advection rate"
                ]
            }, 
            "object_space": {
                "default_value": [], 
                "houdini_name": "object_space", 
                "help": "Directly connect object to use that object's space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object Space", 
                "interface": "Geometry", 
                "moonray_name": "object_space", 
                "order": 23, 
                "aliases": [
                    "object space"
                ]
            }, 
            "color": {
                "default_value": [
                    false
                ], 
                "houdini_name": "color", 
                "help": "Outputs RGB noise", 
                "moonray_type": "Bool", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 8
            }, 
            "use_4D_noise": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_4D_noise", 
                "help": "If on, 4-dimensional noise is used instead of 3-dimensional", 
                "moonray_type": "Bool", 
                "houdini_label": "Use 4D Noise", 
                "moonray_name": "use_4D_noise", 
                "order": 14, 
                "aliases": [
                    "use 4D noise"
                ]
            }, 
            "frequency_multiplier": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "frequency_multiplier", 
                "help": "Scalar multiplier for the frequency vector", 
                "moonray_type": "Float", 
                "houdini_label": "Frequency Multiplier", 
                "bindable": true, 
                "moonray_name": "frequency_multiplier", 
                "order": 1, 
                "aliases": [
                    "frequency multiplier"
                ]
            }, 
            "lacunarity": {
                "default_value": [
                    2.0
                ], 
                "houdini_name": "lacunarity", 
                "help": "Multiplier on the noise frequency per level", 
                "moonray_type": "Float", 
                "houdini_label": "Lacunarity", 
                "bindable": true, 
                "moonray_name": "lacunarity", 
                "order": 4
            }, 
            "distortion": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "distortion", 
                "help": "Warp input coordinate space with single noise level before looking up noise", 
                "moonray_type": "Float", 
                "houdini_label": "Distortion", 
                "bindable": true, 
                "moonray_name": "distortion", 
                "order": 6
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply the euler rotations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 28, 
                "aliases": [
                    "rotation order"
                ]
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "help": "Bias the noise towards 0 or 1", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 16
            }, 
            "smoothstep": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "smoothstep", 
                "help": "min/max values between which the smoothstep will interpolate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Smoothstep", 
                "bindable": true, 
                "moonray_name": "smoothstep", 
                "order": 20
            }, 
            "rotation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotation", 
                "help": "Rotates the noise in space based on the specified rotation order", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation", 
                "bindable": true, 
                "moonray_name": "rotation", 
                "order": 26
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Vector to scale the noise non-proportionally", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Scale", 
                "bindable": true, 
                "moonray_name": "scale", 
                "order": 27
            }, 
            "space": {
                "default_value": [
                    4
                ], 
                "houdini_name": "space", 
                "help": "The space to calculate the noise in", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture", 
                    "input texture coordinates", 
                    "hair_surface_uv", 
                    "hair_closest_surface_uv"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 21
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 22, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Invert the final pattern", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 18
            }, 
            "distortion_noise_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "distortion_noise_type", 
                "help": "Type of noise to use for distortion.", 
                "moonray_type": "Int", 
                "menu": [
                    "perlin classic", 
                    "perlin simplex"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Distortion Noise Type", 
                "moonray_name": "distortion_noise_type", 
                "order": 7, 
                "aliases": [
                    "distortion noise type"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "camera used to define camera and screen space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 24
            }, 
            "persistence": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "persistence", 
                "help": "Multiplier on the noise amplitude per level", 
                "moonray_type": "Float", 
                "houdini_label": "Persistence", 
                "bindable": true, 
                "moonray_name": "persistence", 
                "order": 5
            }, 
            "noise_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "noise_type", 
                "help": "Type of noise to use. Simplex grid activates Flow Noise Angle and Advection", 
                "moonray_type": "Int", 
                "menu": [
                    "perlin classic", 
                    "perlin simplex"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Noise Type", 
                "moonray_name": "noise_type", 
                "order": 11, 
                "aliases": [
                    "noise type"
                ]
            }, 
            "max_level": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "max_level", 
                "help": "Number of octaves of noise to add together for the final result", 
                "moonray_type": "Float", 
                "houdini_label": "Max Level", 
                "bindable": true, 
                "moonray_name": "max_level", 
                "order": 3, 
                "aliases": [
                    "max level"
                ]
            }, 
            "transformation_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "transformation_order", 
                "help": "Order in which to apply the translation, rotation, and frequency", 
                "moonray_type": "Int", 
                "menu": [
                    "srt", 
                    "str", 
                    "rst", 
                    "rts", 
                    "tsr", 
                    "trs"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Transformation Order", 
                "moonray_name": "transformation_order", 
                "order": 29, 
                "aliases": [
                    "transformation order"
                ]
            }, 
            "gain": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "gain", 
                "help": "Apply gain to the noise", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 17
            }, 
            "translation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translation", 
                "help": "Translation of the noise in space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Translation", 
                "bindable": true, 
                "moonray_name": "translation", 
                "order": 25
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "The color value at 1 noise", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 10, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "help": "The color value at 0 noise", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 9, 
                "aliases": [
                    "color A"
                ]
            }, 
            "flow_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "flow_angle", 
                "help": "Angle of rotation for flow noise", 
                "moonray_type": "Float", 
                "houdini_label": "Flow Angle", 
                "bindable": true, 
                "moonray_name": "flow_angle", 
                "order": 12, 
                "aliases": [
                    "flow angle"
                ]
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "The seed for the random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 0
            }, 
            "amplitude": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "amplitude", 
                "help": "Intensity of the noise", 
                "moonray_type": "Float", 
                "houdini_label": "Amplitude", 
                "bindable": true, 
                "moonray_name": "amplitude", 
                "order": 2
            }, 
            "time": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "time", 
                "help": "If use 4D noise is on, this is the value for the 4th dimension", 
                "moonray_type": "Float", 
                "houdini_label": "Time", 
                "bindable": true, 
                "moonray_name": "time", 
                "order": 15
            }, 
            "use_smoothstep": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_smoothstep", 
                "help": "Put the noise value through a smoothstep function defined by min/max", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Smoothstep", 
                "moonray_name": "use_smoothstep", 
                "order": 19, 
                "aliases": [
                    "use smoothstep"
                ]
            }
        }, 
        "folders_with_parms": {
            "4D": [
                "use_4D_noise", 
                "time"
            ], 
            "Adjustment": [
                "bias", 
                "gain", 
                "invert", 
                "use_smoothstep", 
                "smoothstep"
            ], 
            "Flow Noise": [
                "flow_angle", 
                "flow_advection_rate"
            ], 
            "Transform": [
                "translation", 
                "rotation", 
                "scale", 
                "rotation_order", 
                "transformation_order"
            ], 
            "Space": [
                "space", 
                "input_texture_coordinates", 
                "object_space", 
                "camera"
            ]
        }
    }, 
    "ConstantDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ConstantDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color", 
                "help": "Fill color value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 0
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 2
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 1
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 3
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "BarnDoorLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "BarnDoorLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "projector_height": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "projector_height", 
                "help": "height of the frustum at distance 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Height", 
                "moonray_name": "projector_height", 
                "order": 5
            }, 
            "size_bottom": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "size_bottom", 
                "help": "additional size on bottom edge", 
                "moonray_type": "Float", 
                "houdini_label": "Size Bottom", 
                "moonray_name": "size_bottom", 
                "order": 18
            }, 
            "size_right": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "size_right", 
                "help": "additional size on right edge", 
                "moonray_type": "Float", 
                "houdini_label": "Size Right", 
                "moonray_name": "size_right", 
                "order": 20
            }, 
            "radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "radius", 
                "help": "radius by which to convert the base box shape into a rounded box, as a proportion of half the width (or height, whichever is smaller)", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 14
            }, 
            "size_top": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "size_top", 
                "help": "additional size on top edge", 
                "moonray_type": "Float", 
                "houdini_label": "Size Top", 
                "moonray_name": "size_top", 
                "order": 17
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "swap application of filter from inside the Barn Door to outside", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 13
            }, 
            "projector_focal_distance": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "projector_focal_distance", 
                "help": "distance of the flap opening from the projector origin. Ignored for orthographic projection", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Focal Distance", 
                "moonray_name": "projector_focal_distance", 
                "order": 3
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "Color within the Barn Door lit region. For each color channel, 0=full shadow, 1=no shadow", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 23
            }, 
            "edge_scale_bottom": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "edge_scale_bottom", 
                "help": "scale factor for bottom edge", 
                "moonray_type": "Float", 
                "houdini_label": "Edge Scale Bottom", 
                "moonray_name": "edge_scale_bottom", 
                "order": 9
            }, 
            "edge_scale_top": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "edge_scale_top", 
                "help": "scale factor for top edge", 
                "moonray_type": "Float", 
                "houdini_label": "Edge Scale Top", 
                "moonray_name": "edge_scale_top", 
                "order": 8
            }, 
            "projector_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projector_type", 
                "help": "projection type used to map points to the flap opening. perspective has a focal point, while orthographic does not.", 
                "moonray_type": "Int", 
                "menu": [
                    "perspective", 
                    "orthographic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Projector Type", 
                "moonray_name": "projector_type", 
                "order": 2
            }, 
            "pre_barn_distance": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "pre_barn_distance", 
                "help": "distance from the BarnDoorLightFilter that the pre_barn_mode control takes effect", 
                "moonray_type": "Float", 
                "houdini_label": "Pre Barn Distance", 
                "moonray_name": "pre_barn_distance", 
                "order": 7
            }, 
            "edge_scale_right": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "edge_scale_right", 
                "help": "scale factor for right edge", 
                "moonray_type": "Float", 
                "houdini_label": "Edge Scale Right", 
                "moonray_name": "edge_scale_right", 
                "order": 11
            }, 
            "use_light_xform": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_light_xform", 
                "help": "attach to the light (in the -Z direction) and ignore node_xform", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Light Xform", 
                "moonray_name": "use_light_xform", 
                "order": 21
            }, 
            "edge_scale_left": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "edge_scale_left", 
                "help": "scale factor for left edge", 
                "moonray_type": "Float", 
                "houdini_label": "Edge Scale Left", 
                "moonray_name": "edge_scale_left", 
                "order": 10
            }, 
            "rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "rotation", 
                "help": "angle to rotate the Barn Door counter-clockwise as seen from the light, in degrees", 
                "moonray_type": "Float", 
                "houdini_label": "Rotation", 
                "moonray_name": "rotation", 
                "order": 22
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "projector_width": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "projector_width", 
                "help": "width of the frustum at distance 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Width", 
                "moonray_name": "projector_width", 
                "order": 4
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "fades the filter effect. 0=no effect (like having no filter), 1=full effect", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 12
            }, 
            "edge": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "edge", 
                "help": "size of transition zone from the rounded box to the outside, as a proportion of width (or height, whichever is smaller)", 
                "moonray_type": "Float", 
                "houdini_label": "Edge", 
                "moonray_name": "edge", 
                "order": 15
            }, 
            "size_left": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "size_left", 
                "help": "additional size on left edge", 
                "moonray_type": "Float", 
                "houdini_label": "Size Left", 
                "moonray_name": "size_left", 
                "order": 19
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "analytical mode allows light to shading points that project to the flap opening.physical mode allows light whose direction goes through the flap opening.", 
                "moonray_type": "Int", 
                "menu": [
                    "analytical", 
                    "physical"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 16
            }, 
            "pre_barn_mode": {
                "default_value": [
                    2
                ], 
                "houdini_name": "pre_barn_mode", 
                "help": "force region before the pre_barn_distance to be fully filtered (black), not filtered at all (white), or treated the same as elsewhere (default)", 
                "moonray_type": "Int", 
                "menu": [
                    "black", 
                    "white", 
                    "default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Pre Barn Mode", 
                "moonray_name": "pre_barn_mode", 
                "order": 6
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "node_xform", 
                "projector_type", 
                "projector_focal_distance", 
                "projector_width", 
                "projector_height", 
                "edge_scale_top", 
                "edge_scale_bottom", 
                "edge_scale_left", 
                "edge_scale_right", 
                "pre_barn_mode", 
                "pre_barn_distance", 
                "density", 
                "invert", 
                "radius", 
                "edge", 
                "mode", 
                "size_top", 
                "size_bottom", 
                "size_left", 
                "size_right", 
                "use_light_xform", 
                "rotation", 
                "color"
            ]
        }
    }, 
    "VdbGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "VdbGeometry", 
        "folders_sorted": [], 
        "parms": {
            "emission_grid": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "emission_grid", 
                "help": "The name of the emission grid. If multiple grids have the same name, only the first grid with that name will be loaded. If a vdb file has multiple grids with the same name, you may use a suffix index to pick which grid to load, e.g. \"emission[3]\". The index must be in [] brackets.", 
                "moonray_type": "String", 
                "houdini_label": "Emission Grid", 
                "moonray_name": "emission_grid", 
                "order": 24
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "emission_sample_rate": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "emission_sample_rate", 
                "help": "the relative scale of input emission grid resolution. Lower value has lower memory overhead and faster render time, with the cost of lower fidelity of emission shape and illumination", 
                "moonray_type": "Float", 
                "houdini_label": "Emission Sample Rate", 
                "moonray_name": "emission_sample_rate", 
                "order": 28, 
                "aliases": [
                    "emission sample rate"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "velocity_grid": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "velocity_grid", 
                "help": "the name of vector grid representing the velocity field. Usually named \"v\" or \"vel\" in simulation export. If multiple velocity grids have the same name, only the first grid with that name will be loaded. If a vdb file has multiple grids with the same name, you may use a suffix index to pick which grid to load, e.g. \"v[3]\". The index must be in [] brackets. The index can be different from the index on the \"density_grid\".", 
                "moonray_type": "String", 
                "houdini_label": "Velocity Grid", 
                "moonray_name": "velocity_grid", 
                "order": 25, 
                "aliases": [
                    "velocity grid"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "interpolation": {
                "default_value": [
                    1
                ], 
                "houdini_name": "interpolation", 
                "help": "the voxel interpolation to use when sampling the volume data", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "linear", 
                    "quadratic"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Interpolation", 
                "moonray_name": "interpolation", 
                "order": 22
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "velocity_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "velocity_scale", 
                "help": "A scale factor for the velocity field. A value of 0 disables motion blur.", 
                "moonray_type": "Float", 
                "houdini_label": "Velocity Scale", 
                "moonray_name": "velocity_scale", 
                "order": 26, 
                "aliases": [
                    "velocity scale"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "velocity_sample_rate": {
                "default_value": [
                    0.2
                ], 
                "houdini_name": "velocity_sample_rate", 
                "help": "the relative scale of input velocity grid resolution. Lower value has lower memory overhead and lower fidelity of motion blur effect, which is sometimes desired for artistic reasons", 
                "moonray_type": "Float", 
                "houdini_label": "Velocity Sample Rate", 
                "moonray_name": "velocity_sample_rate", 
                "order": 27, 
                "aliases": [
                    "velocity sample rate"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }, 
            "model": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "model", 
                "help": "filename that points to a VDB file", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Model", 
                "moonray_name": "model", 
                "order": 21
            }, 
            "density_grid": {
                "default_value": [
                    "density"
                ], 
                "houdini_name": "density_grid", 
                "help": "The name of the density grid. If multiple grids have the same name, only the first grid with that name will be loaded. If a vdb file has multiple grids with the same name, you may use a suffix index to pick which grid to load, e.g. \"density[3]\". The index must be in [] brackets.", 
                "moonray_type": "String", 
                "houdini_label": "Density Grid", 
                "moonray_name": "density_grid", 
                "order": 23
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DomeMaster3DCamera": {
        "moonray_type": "Camera", 
        "moonray_name": "DomeMaster3DCamera", 
        "folders_sorted": [
            "Frustum", 
            "Motion Blur", 
            "Render Masks", 
            "Medium", 
            "Stereo"
        ], 
        "parms": {
            "stereo_convergence_distance": {
                "default_value": [
                    360.0
                ], 
                "houdini_name": "stereo_convergence_distance", 
                "moonray_type": "Float", 
                "houdini_label": "Stereo Convergence Distance", 
                "moonray_name": "stereo_convergence_distance", 
                "order": 14, 
                "aliases": [
                    "stereo convergence distance"
                ]
            }, 
            "mb_shutter_open": {
                "default_value": [
                    -0.25
                ], 
                "houdini_name": "mb_shutter_open", 
                "help": "Frame at which the shutter opens, i.e., the beginning of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Open", 
                "moonray_name": "mb_shutter_open", 
                "order": 3, 
                "aliases": [
                    "mb shutter open"
                ]
            }, 
            "flip_ray_y": {
                "default_value": [
                    false
                ], 
                "houdini_name": "flip_ray_y", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Ray Y", 
                "moonray_name": "flip_ray_y", 
                "order": 12, 
                "aliases": [
                    "flip ray y"
                ]
            }, 
            "flip_ray_x": {
                "default_value": [
                    false
                ], 
                "houdini_name": "flip_ray_x", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Ray X", 
                "moonray_name": "flip_ray_x", 
                "order": 11, 
                "aliases": [
                    "flip ray x"
                ]
            }, 
            "far": {
                "default_value": [
                    10000.0
                ], 
                "houdini_name": "far", 
                "help": "Far clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Far", 
                "moonray_name": "far", 
                "order": 2
            }, 
            "stereo_interocular_distance": {
                "default_value": [
                    6.5
                ], 
                "houdini_name": "stereo_interocular_distance", 
                "moonray_type": "Float", 
                "houdini_label": "Stereo Interocular Distance", 
                "moonray_name": "stereo_interocular_distance", 
                "order": 15, 
                "aliases": [
                    "stereo interocular distance"
                ]
            }, 
            "pixel_sample_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "pixel_sample_map", 
                "help": "Map indicating the number of pixel samples that should be used per pixel (in uniform sampling mode). This is a multiplier on the global pixel sample count specified in SceneVariables. If the provided map has incompatible dimensions, it will be resized.", 
                "moonray_type": "String", 
                "houdini_label": "Pixel Sample Map", 
                "moonray_name": "pixel_sample_map", 
                "order": 6, 
                "aliases": [
                    "pixel sample map"
                ]
            }, 
            "stereo_view": {
                "default_value": [
                    0
                ], 
                "houdini_name": "stereo_view", 
                "moonray_type": "Int", 
                "menu": [
                    "center view", 
                    "left view", 
                    "right view"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Stereo View", 
                "moonray_name": "stereo_view", 
                "order": 13, 
                "aliases": [
                    "stereo view"
                ]
            }, 
            "mb_shutter_close": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "mb_shutter_close", 
                "help": "Frame at which the shutter closes, i.e., the end of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Close", 
                "moonray_name": "mb_shutter_close", 
                "order": 4, 
                "aliases": [
                    "mb shutter close"
                ]
            }, 
            "FOV_horizontal_angle": {
                "default_value": [
                    60.0
                ], 
                "houdini_name": "FOV_horizontal_angle", 
                "moonray_type": "Float", 
                "houdini_label": "FOV Horizontal Angle", 
                "moonray_name": "FOV_horizontal_angle", 
                "order": 10, 
                "aliases": [
                    "FOV horizontal angle"
                ]
            }, 
            "near": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "near", 
                "help": "Near clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Near", 
                "moonray_name": "near", 
                "order": 1
            }, 
            "zenith_mode": {
                "default_value": [
                    false
                ], 
                "houdini_name": "zenith_mode", 
                "moonray_type": "Bool", 
                "houdini_label": "Zenith Mode", 
                "moonray_name": "zenith_mode", 
                "order": 18, 
                "aliases": [
                    "zenith mode"
                ]
            }, 
            "FOV_vertical_angle": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "FOV_vertical_angle", 
                "moonray_type": "Float", 
                "houdini_label": "FOV Vertical Angle", 
                "moonray_name": "FOV_vertical_angle", 
                "order": 9, 
                "aliases": [
                    "FOV vertical angle"
                ]
            }, 
            "head_tilt_map": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "head_tilt_map", 
                "moonray_type": "Float", 
                "houdini_label": "Head Tilt Map", 
                "moonray_name": "head_tilt_map", 
                "order": 17, 
                "aliases": [
                    "head tilt map"
                ]
            }, 
            "interocular_distance_map_file_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "interocular_distance_map_file_name", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Interocular Distance Map File Name", 
                "moonray_name": "interocular_distance_map_file_name", 
                "order": 16, 
                "aliases": [
                    "interocular distance map file name"
                ]
            }, 
            "medium_material": {
                "default_value": [], 
                "houdini_name": "medium_material", 
                "help": "The material the camera is 'inside'. If no medium_geometry is specified, ALL rays will have this initial index of refraction applied. ", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Material", 
                "moonray_name": "medium_material", 
                "order": 7, 
                "aliases": [
                    "medium material"
                ]
            }, 
            "mb_shutter_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mb_shutter_bias", 
                "help": "Biases the motion blur samples toward one end of the shutter interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Bias", 
                "moonray_name": "mb_shutter_bias", 
                "order": 5, 
                "aliases": [
                    "mb shutter bias"
                ]
            }, 
            "medium_geometry": {
                "default_value": [], 
                "houdini_name": "medium_geometry", 
                "help": "The geometry the camera is 'inside' to which you'd like the medium_material applied. (The use case for this is typically partially-submerged cameras)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Geometry", 
                "moonray_name": "medium_geometry", 
                "order": 8, 
                "aliases": [
                    "medium geometry"
                ]
            }
        }, 
        "folders_with_parms": {
            "Stereo": [
                "stereo_view", 
                "stereo_interocular_distance", 
                "interocular_distance_map_file_name", 
                "stereo_convergence_distance", 
                "head_tilt_map", 
                "zenith_mode"
            ], 
            "Medium": [
                "medium_material", 
                "medium_geometry"
            ], 
            "Frustum": [
                "near", 
                "far"
            ], 
            "Motion Blur": [
                "mb_shutter_open", 
                "mb_shutter_close", 
                "mb_shutter_bias"
            ], 
            "Render Masks": [
                "pixel_sample_map"
            ]
        }
    }, 
    "ColorCorrectHueShiftMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectHueShiftMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "hue_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue_shift", 
                "help": "shifts the hue of the input (spectrum range is 0-1)", 
                "moonray_type": "Float", 
                "houdini_label": "Hue Shift", 
                "bindable": true, 
                "moonray_name": "hue_shift", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ConstantColorMap": {
        "moonray_type": "Map", 
        "moonray_name": "ConstantColorMap", 
        "folders_sorted": [], 
        "parms": {
            "color_value": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_value", 
                "help": "constant color value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color Value", 
                "moonray_name": "color_value", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "CylinderLight": {
        "moonray_type": "Light", 
        "moonray_name": "CylinderLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 41
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "height": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "height", 
                "help": "The height of the cylinder as measured along its axis.", 
                "moonray_type": "Float", 
                "houdini_label": "Height", 
                "moonray_name": "height", 
                "order": 37
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "radius", 
                "help": "The radius of the cylinder.", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 36
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 40
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "sidedness": {
                "default_value": [
                    0
                ], 
                "houdini_name": "sidedness", 
                "help": "When set to 0 (regular), light is emitted from the outward-facing surface of the cylinder. When set to 1 (reverse), light is emitted from the inward-facing surface of the cylinder. There is no mode for emitting from both surfaces at the same time, but two cylinder lights of opposing sidedness can be combined to achieve this effect.", 
                "moonray_type": "Int", 
                "menu": [
                    "regular", 
                    "reverse"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Sidedness", 
                "moonray_name": "sidedness", 
                "order": 38
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 39
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "radius", 
                "height", 
                "sidedness", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "VdbLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "VdbLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "density_grid_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "density_grid_name", 
                "help": "The name of the grid within the .vdb file from which to sample for density(hint: use openvdb_print to see contents of .vdb file). If no grid is specified, it will use 'density' as the defaultIn cases where there are multiple grids with the same name, the grid name can be indexed (eg. density[1])", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Density Grid Name", 
                "moonray_name": "density_grid_name", 
                "order": 3, 
                "aliases": [
                    "Density Grid Name"
                ]
            }, 
            "density_remap_input_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density_remap_input_max", 
                "help": "Clamp the remapped input to this max value", 
                "moonray_type": "Float", 
                "houdini_label": "Density Remap Input Max", 
                "moonray_name": "density_remap_input_max", 
                "order": 5
            }, 
            "density_remap_inputs": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "density_remap_inputs", 
                "help": "List of input remap curve values", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Density Remap Inputs", 
                "moonray_name": "density_remap_inputs", 
                "order": 9, 
                "ramp_parm_name": "ramp"
            }, 
            "density_remap_outputs": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "density_remap_outputs", 
                "help": "List of output remap curve values", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Density Remap Outputs", 
                "moonray_name": "density_remap_outputs", 
                "order": 10, 
                "ramp_parm_name": "ramp"
            }, 
            "density_remap_interpolation_types": {
                "default_value": [
                    1, 
                    1
                ], 
                "houdini_name": "density_remap_interpolation_types", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Density Remap Interpolation Types", 
                "moonray_name": "density_remap_interpolation_types", 
                "order": 11, 
                "ramp_parm_name": "ramp"
            }, 
            "density_remap_output_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "density_remap_output_min", 
                "help": "Clamp the remapped output to this min value", 
                "moonray_type": "Float", 
                "houdini_label": "Density Remap Output Min", 
                "moonray_name": "density_remap_output_min", 
                "order": 6
            }, 
            "density_remap_output_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density_remap_output_max", 
                "help": "Clamp the remapped output to this max value", 
                "moonray_type": "Float", 
                "houdini_label": "Density Remap Output Max", 
                "moonray_name": "density_remap_output_max", 
                "order": 7
            }, 
            "blur_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_value", 
                "help": "The blur radius", 
                "moonray_type": "Float", 
                "display": "logarithmic", 
                "houdini_label": "Blur Value", 
                "moonray_name": "blur_value", 
                "order": 13
            }, 
            "vdb_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "vdb_map", 
                "help": "The path to the vdb", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Vdb Map", 
                "moonray_name": "vdb_map", 
                "order": 2, 
                "aliases": [
                    "Vdb map"
                ]
            }, 
            "color_tint": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_tint", 
                "help": "Tints the light filter.  Lower density increases the shift toward the tint color.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color Tint", 
                "moonray_name": "color_tint", 
                "order": 15
            }, 
            "invert_density": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_density", 
                "help": "Invert the density with density = 1 - density", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Density", 
                "moonray_name": "invert_density", 
                "order": 16
            }, 
            "vdb_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "vdb_interpolation_type", 
                "help": "The type of interpolation to use when sampling the filter", 
                "moonray_type": "Int", 
                "menu": [
                    "point", 
                    "box", 
                    "quadratic"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Vdb Interpolation Type", 
                "moonray_name": "vdb_interpolation_type", 
                "order": 12
            }, 
            "density_remap_input_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "density_remap_input_min", 
                "help": "Clamp the remapped input to this min value", 
                "moonray_type": "Float", 
                "houdini_label": "Density Remap Input Min", 
                "moonray_name": "density_remap_input_min", 
                "order": 4
            }, 
            "density_rescale_enable": {
                "default_value": [
                    false
                ], 
                "houdini_name": "density_rescale_enable", 
                "help": "Enable density rescaling", 
                "moonray_type": "Bool", 
                "houdini_label": "Density Rescale Enable", 
                "moonray_name": "density_rescale_enable", 
                "order": 8
            }, 
            "blur_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blur_type", 
                "help": "The type of blur to apply", 
                "moonray_type": "Int", 
                "menu": [
                    "gaussian", 
                    "circular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Blur Type", 
                "moonray_name": "blur_type", 
                "order": 14
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "vdb_map", 
                "density_grid_name", 
                "vdb_interpolation_type", 
                "density_remap_input_min", 
                "density_remap_input_max", 
                "density_remap_output_min", 
                "density_remap_output_max", 
                "ramp", 
                "density_rescale_enable", 
                "color_tint", 
                "blur_value", 
                "blur_type", 
                "invert_density"
            ]
        }
    }, 
    "HairLayerMaterial": {
        "moonray_type": "DwaBaseHairLayerable", 
        "moonray_name": "HairLayerMaterial", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "hair_material_B": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "hair_material_B", 
                "help": "background hair material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Hair Material B", 
                "interface": "DwaBaseHairLayerable", 
                "moonray_name": "hair_material_B", 
                "order": 4, 
                "aliases": [
                    "hair material B"
                ]
            }, 
            "mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mask", 
                "help": "foreground hair material weight", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "mask", 
                "order": 5
            }, 
            "fallback_bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_bssrdf", 
                "help": "If child materials disagree on the type of bssrdf, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Bssrdf", 
                "moonray_name": "fallback_bssrdf", 
                "order": 7
            }, 
            "hair_material_A": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "hair_material_A", 
                "help": "foreground hair material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Hair Material A", 
                "interface": "DwaBaseHairLayerable", 
                "moonray_name": "hair_material_A", 
                "order": 3, 
                "aliases": [
                    "hair material A"
                ]
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "blend_color_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blend_color_space", 
                "help": "Color space used when blending the two material's color parameters", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV", 
                    "HSL"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Blend Color Space", 
                "moonray_name": "blend_color_space", 
                "order": 6
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "blend_color_space", 
                "fallback_bssrdf"
            ]
        }
    }, 
    "RgbToFloatMap": {
        "moonray_type": "Map", 
        "moonray_name": "RgbToFloatMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "mode": {
                "default_value": [
                    5
                ], 
                "houdini_name": "mode", 
                "help": "specify the method to convert RGB Color to float", 
                "moonray_type": "Int", 
                "menu": [
                    "r", 
                    "g", 
                    "b", 
                    "min", 
                    "max", 
                    "average", 
                    "sum", 
                    "luminance"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ColorCorrectContrastMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectContrastMap", 
        "folders_sorted": [], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "contrast_r": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_r", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the red channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast R", 
                "bindable": true, 
                "moonray_name": "contrast_r", 
                "order": 5
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast", 
                "bindable": true, 
                "moonray_name": "contrast", 
                "order": 3
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "contrast_g": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_g", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the green channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast G", 
                "bindable": true, 
                "moonray_name": "contrast_g", 
                "order": 6
            }, 
            "use_per_channel_contrast": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_contrast", 
                "help": "enables separate RGB controls for contrast", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Contrast", 
                "moonray_name": "use_per_channel_contrast", 
                "order": 4
            }, 
            "contrast_b": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_b", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the blue channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast B", 
                "bindable": true, 
                "moonray_name": "contrast_b", 
                "order": 7
            }
        }, 
        "folders_with_parms": {}
    }, 
    "BoxGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "BoxGeometry", 
        "folders_sorted": [
            "Quadric"
        ], 
        "parms": {
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "size": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "size", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Size", 
                "moonray_name": "size", 
                "order": 21
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }
        }, 
        "folders_with_parms": {
            "Quadric": [
                "size"
            ]
        }
    }, 
    "TraceSet": {
        "moonray_type": "TraceSet", 
        "moonray_name": "TraceSet", 
        "folders_sorted": [], 
        "parms": {
            "parts": {
                "default_value": [], 
                "houdini_name": "parts", 
                "moonray_type": "StringVector", 
                "houdini_label": "Parts", 
                "moonray_name": "parts", 
                "order": 1
            }, 
            "geometries": {
                "default_value": [], 
                "houdini_name": "geometries", 
                "moonray_type": "SceneObjectIndexable", 
                "houdini_label": "Geometries", 
                "interface": "Geometry", 
                "moonray_name": "geometries", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RgbToHsvMap": {
        "moonray_type": "Map", 
        "moonray_name": "RgbToHsvMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "TransformSpaceMap": {
        "moonray_type": "Map", 
        "moonray_name": "TransformSpaceMap", 
        "folders_sorted": [], 
        "parms": {
            "use_custom_window_coordinates": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_custom_window_coordinates", 
                "help": "used to apply non-uniform scaling to projection", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Custom Window Coordinates", 
                "moonray_name": "use_custom_window_coordinates", 
                "order": 7, 
                "aliases": [
                    "use custom window coordinates"
                ]
            }, 
            "window_y_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "window_y_max", 
                "help": "maximum projected y coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window Y Max", 
                "moonray_name": "window_y_max", 
                "order": 11, 
                "aliases": [
                    "window y max"
                ]
            }, 
            "from_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "from_space", 
                "help": "the space to transform from", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "local tangent", 
                    "instance object transform", 
                    "instance level 0", 
                    "instance level 1", 
                    "instance level 2", 
                    "instance level 3", 
                    "instance level 4"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11"
                ], 
                "houdini_label": "From Space", 
                "moonray_name": "from_space", 
                "order": 2, 
                "aliases": [
                    "from space"
                ]
            }, 
            "concatenate_instance_level_transforms": {
                "default_value": [
                    true
                ], 
                "houdini_name": "concatenate_instance_level_transforms", 
                "help": "When true, instance level transforms below the specified one are concatenated otherwise only the selected level's transform is used", 
                "moonray_type": "Bool", 
                "houdini_label": "Concatenate Instance Level Transforms", 
                "moonray_name": "concatenate_instance_level_transforms", 
                "order": 4
            }, 
            "object": {
                "default_value": [], 
                "houdini_name": "object", 
                "help": "an alternate object to use when transforming to/from 'object' space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object", 
                "interface": "Geometry", 
                "moonray_name": "object", 
                "order": 6
            }, 
            "to_space": {
                "default_value": [
                    2
                ], 
                "houdini_name": "to_space", 
                "help": "the space to transform to", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "local reference tangent", 
                    "instance level 0", 
                    "instance level 1", 
                    "instance level 2", 
                    "instance level 3", 
                    "instance level 4", 
                    "instance object transform"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11"
                ], 
                "houdini_label": "To Space", 
                "moonray_name": "to_space", 
                "order": 3, 
                "aliases": [
                    "to space"
                ]
            }, 
            "window_y_min": {
                "default_value": [
                    -1.0
                ], 
                "houdini_name": "window_y_min", 
                "help": "minimum projected y coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window Y Min", 
                "moonray_name": "window_y_min", 
                "order": 10, 
                "aliases": [
                    "window y min"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "an alternate camera to use when transforming to/from 'camera' space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 5
            }, 
            "window_x_min": {
                "default_value": [
                    -1.0
                ], 
                "houdini_name": "window_x_min", 
                "help": "minimum projected x coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window X Min", 
                "moonray_name": "window_x_min", 
                "order": 8, 
                "aliases": [
                    "window x min"
                ]
            }, 
            "input_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "input_type", 
                "help": "the type of input value provided", 
                "moonray_type": "Int", 
                "menu": [
                    "point", 
                    "vector", 
                    "normal"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Input Type", 
                "moonray_name": "input_type", 
                "order": 1, 
                "aliases": [
                    "input type"
                ]
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "the input value to transform", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "window_x_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "window_x_max", 
                "help": "maximum projected x coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window X Max", 
                "moonray_name": "window_x_max", 
                "order": 9, 
                "aliases": [
                    "window x max"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "MultiChannelToFloatMap": {
        "moonray_type": "Map", 
        "moonray_name": "MultiChannelToFloatMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "tolerance": {
                "default_value": [
                    0.2
                ], 
                "houdini_name": "tolerance", 
                "help": "Low tolerance values will tend to produce harsher edges near overlapping colors, while high tolerance values may result in cross-color bleeding.", 
                "moonray_type": "Float", 
                "houdini_label": "Tolerance", 
                "bindable": true, 
                "moonray_name": "tolerance", 
                "order": 2
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "Specifies which color channels including combination channels (Cyan, Magenta, Yellow, and White) to convert to float.", 
                "moonray_type": "Int", 
                "menu": [
                    "Red", 
                    "Green", 
                    "Blue", 
                    "Cyan", 
                    "Magenta", 
                    "Yellow", 
                    "White"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ProjectTriplanarNormalMap_v2": {
        "moonray_type": "NormalMap", 
        "moonray_name": "ProjectTriplanarNormalMap_v2", 
        "folders_sorted": [
            "Positive X Modifiers", 
            "Positive Y Modifiers", 
            "Positive Z Modifiers", 
            "Negative X Modifiers", 
            "Negative Y Modifiers", 
            "Negative Z Modifiers"
        ], 
        "parms": {
            "positive_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert S", 
                "moonray_name": "positive_z_invert_s", 
                "order": 37, 
                "aliases": [
                    "positive z invert s"
                ]
            }, 
            "negative_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Scale", 
                "moonray_name": "negative_y_scale", 
                "order": 51, 
                "aliases": [
                    "negative y scale"
                ]
            }, 
            "negative_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Rotation Center", 
                "moonray_name": "negative_z_rotation_center", 
                "order": 65, 
                "aliases": [
                    "negative z rotation center"
                ]
            }, 
            "negative_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Swap St", 
                "moonray_name": "negative_y_swap_st", 
                "order": 55, 
                "aliases": [
                    "negative y swap st"
                ]
            }, 
            "input_normal": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_normal", 
                "help": "Bind normal data here", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Normal", 
                "bindable": true, 
                "moonray_name": "input_normal", 
                "order": 77
            }, 
            "negative_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative X Rotation", 
                "moonray_name": "negative_x_rotation", 
                "order": 48, 
                "aliases": [
                    "negative x rotation"
                ]
            }, 
            "randomize_flip": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_flip", 
                "help": "Rnd flipping in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Flip", 
                "moonray_name": "randomize_flip", 
                "order": 5, 
                "aliases": [
                    "randomize flip"
                ]
            }, 
            "positive_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Offset", 
                "moonray_name": "positive_y_offset", 
                "order": 28, 
                "aliases": [
                    "positive y offset"
                ]
            }, 
            "positive_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Wrap Around", 
                "moonray_name": "positive_x_wrap_around", 
                "order": 26, 
                "aliases": [
                    "positive x wrap around"
                ]
            }, 
            "negative_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert S", 
                "moonray_name": "negative_z_invert_s", 
                "order": 61, 
                "aliases": [
                    "negative z invert s"
                ]
            }, 
            "negative_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative X Texture", 
                "moonray_name": "negative_x_texture", 
                "order": 14, 
                "aliases": [
                    "negative x texture"
                ]
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 67
            }, 
            "positive_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert T", 
                "moonray_name": "positive_x_invert_t", 
                "order": 22, 
                "aliases": [
                    "positive x invert t"
                ]
            }, 
            "positive_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive X Rotation", 
                "moonray_name": "positive_x_rotation", 
                "order": 24, 
                "aliases": [
                    "positive x rotation"
                ]
            }, 
            "positive_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Y Texture", 
                "moonray_name": "positive_y_texture", 
                "order": 10, 
                "aliases": [
                    "positive y texture"
                ]
            }, 
            "positive_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Scale", 
                "moonray_name": "positive_y_scale", 
                "order": 27, 
                "aliases": [
                    "positive y scale"
                ]
            }, 
            "positive_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert S", 
                "moonray_name": "positive_x_invert_s", 
                "order": 21, 
                "aliases": [
                    "positive x invert s"
                ]
            }, 
            "negative_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Rotation Center", 
                "moonray_name": "negative_x_rotation_center", 
                "order": 49, 
                "aliases": [
                    "negative x rotation center"
                ]
            }, 
            "negative_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Wrap Around", 
                "moonray_name": "negative_z_wrap_around", 
                "order": 66, 
                "aliases": [
                    "negative z wrap around"
                ]
            }, 
            "positive_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert S", 
                "moonray_name": "positive_y_invert_s", 
                "order": 29, 
                "aliases": [
                    "positive y invert s"
                ]
            }, 
            "negative_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Scale", 
                "moonray_name": "negative_x_scale", 
                "order": 43, 
                "aliases": [
                    "negative x scale"
                ]
            }, 
            "negative_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Z Rotation", 
                "moonray_name": "negative_z_rotation", 
                "order": 64, 
                "aliases": [
                    "negative z rotation"
                ]
            }, 
            "positive_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert T", 
                "moonray_name": "positive_y_invert_t", 
                "order": 30, 
                "aliases": [
                    "positive y invert t"
                ]
            }, 
            "positive_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Rotation Center", 
                "moonray_name": "positive_z_rotation_center", 
                "order": 41, 
                "aliases": [
                    "positive z rotation center"
                ]
            }, 
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 69
            }, 
            "positive_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Swap St", 
                "moonray_name": "positive_y_swap_st", 
                "order": 31, 
                "aliases": [
                    "positive y swap st"
                ]
            }, 
            "positive_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Swap St", 
                "moonray_name": "positive_z_swap_st", 
                "order": 39, 
                "aliases": [
                    "positive z swap st"
                ]
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 68
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 71
            }, 
            "input_position": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_position", 
                "help": "Bind position data here", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Position", 
                "bindable": true, 
                "moonray_name": "input_position", 
                "order": 76
            }, 
            "positive_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert T", 
                "moonray_name": "positive_z_invert_t", 
                "order": 38, 
                "aliases": [
                    "positive z invert t"
                ]
            }, 
            "positive_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Offset", 
                "moonray_name": "positive_z_offset", 
                "order": 36, 
                "aliases": [
                    "positive z offset"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 70
            }, 
            "positive_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Rotation Center", 
                "moonray_name": "positive_y_rotation_center", 
                "order": 33, 
                "aliases": [
                    "positive y rotation center"
                ]
            }, 
            "negative_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Active", 
                "moonray_name": "negative_x_active", 
                "order": 13, 
                "aliases": [
                    "negative x active"
                ]
            }, 
            "positive_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Rotation Center", 
                "moonray_name": "positive_x_rotation_center", 
                "order": 25, 
                "aliases": [
                    "positive x rotation center"
                ]
            }, 
            "positive_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Active", 
                "moonray_name": "positive_y_active", 
                "order": 9, 
                "aliases": [
                    "positive y active"
                ]
            }, 
            "positive_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Swap St", 
                "moonray_name": "positive_x_swap_st", 
                "order": 23, 
                "aliases": [
                    "positive x swap st"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 72
            }, 
            "negative_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Offset", 
                "moonray_name": "negative_y_offset", 
                "order": 52, 
                "aliases": [
                    "negative y offset"
                ]
            }, 
            "negative_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert T", 
                "moonray_name": "negative_x_invert_t", 
                "order": 46, 
                "aliases": [
                    "negative x invert t"
                ]
            }, 
            "negative_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Offset", 
                "moonray_name": "negative_x_offset", 
                "order": 44, 
                "aliases": [
                    "negative x offset"
                ]
            }, 
            "negative_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Swap St", 
                "moonray_name": "negative_z_swap_st", 
                "order": 63, 
                "aliases": [
                    "negative z swap st"
                ]
            }, 
            "positive_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Active", 
                "moonray_name": "positive_x_active", 
                "order": 7, 
                "aliases": [
                    "positive x active"
                ]
            }, 
            "positive_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive X Texture", 
                "moonray_name": "positive_x_texture", 
                "order": 8, 
                "aliases": [
                    "positive x texture"
                ]
            }, 
            "random_seed": {
                "default_value": [
                    8241
                ], 
                "houdini_name": "random_seed", 
                "help": "Seed for randomizing orientation, offset, and flip", 
                "moonray_type": "Int", 
                "houdini_label": "Random Seed", 
                "moonray_name": "random_seed", 
                "order": 3, 
                "aliases": [
                    "random seed"
                ]
            }, 
            "positive_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Scale", 
                "moonray_name": "positive_z_scale", 
                "order": 35, 
                "aliases": [
                    "positive z scale"
                ]
            }, 
            "positive_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Z Rotation", 
                "moonray_name": "positive_z_rotation", 
                "order": 40, 
                "aliases": [
                    "positive z rotation"
                ]
            }, 
            "negative_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Scale", 
                "moonray_name": "negative_z_scale", 
                "order": 59, 
                "aliases": [
                    "negative z scale"
                ]
            }, 
            "negative_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Y Rotation", 
                "moonray_name": "negative_y_rotation", 
                "order": 56, 
                "aliases": [
                    "negative y rotation"
                ]
            }, 
            "transition_width": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "transition_width", 
                "help": "Controls blending of per-axis projections.   Valid range is 0.0 (no blending) to 1.0 (max blending)", 
                "moonray_type": "Float", 
                "houdini_label": "Transition Width", 
                "moonray_name": "transition_width", 
                "order": 2, 
                "aliases": [
                    "transition width"
                ]
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 73
            }, 
            "normal_encoding": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_encoding", 
                "help": "Most normal maps are encoded [0,1].   Only certain rare floating point normal maps are encoded [-1,1]", 
                "moonray_type": "Int", 
                "menu": [
                    "[0,1]", 
                    "[-1,1]"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Encoding", 
                "moonray_name": "normal_encoding", 
                "order": 0, 
                "aliases": [
                    "normal encoding"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 74
            }, 
            "number_of_textures": {
                "default_value": [
                    3
                ], 
                "houdini_name": "number_of_textures", 
                "help": "Controls the number of active textures.   If set to 'one', only the 'pos x' texture settings will be used for all sides.   If set to 'three' the pos x, pos y, and pos z settings will be used for their respective negative sides.   If set to 'six', each side has independent controls and texture.", 
                "moonray_type": "Int", 
                "menu": [
                    "one", 
                    "three", 
                    "six"
                ], 
                "menu_values": [
                    "1", 
                    "3", 
                    "6"
                ], 
                "houdini_label": "Number Of Textures", 
                "moonray_name": "number_of_textures", 
                "order": 1, 
                "aliases": [
                    "number of textures"
                ]
            }, 
            "negative_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Wrap Around", 
                "moonray_name": "negative_x_wrap_around", 
                "order": 50, 
                "aliases": [
                    "negative x wrap around"
                ]
            }, 
            "positive_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Y Rotation", 
                "moonray_name": "positive_y_rotation", 
                "order": 32, 
                "aliases": [
                    "positive y rotation"
                ]
            }, 
            "positive_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Offset", 
                "moonray_name": "positive_x_offset", 
                "order": 20, 
                "aliases": [
                    "positive x offset"
                ]
            }, 
            "negative_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert S", 
                "moonray_name": "negative_x_invert_s", 
                "order": 45, 
                "aliases": [
                    "negative x invert s"
                ]
            }, 
            "negative_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Y Texture", 
                "moonray_name": "negative_y_texture", 
                "order": 16, 
                "aliases": [
                    "negative y texture"
                ]
            }, 
            "randomize_rotation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_rotation", 
                "help": "Rnd 2d rotation of each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Rotation", 
                "moonray_name": "randomize_rotation", 
                "order": 4, 
                "aliases": [
                    "randomize rotation"
                ]
            }, 
            "randomize_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_offset", 
                "help": "Rnd offset in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Offset", 
                "moonray_name": "randomize_offset", 
                "order": 6, 
                "aliases": [
                    "randomize offset"
                ]
            }, 
            "negative_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert T", 
                "moonray_name": "negative_z_invert_t", 
                "order": 62, 
                "aliases": [
                    "negative z invert t"
                ]
            }, 
            "negative_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Z Texture", 
                "moonray_name": "negative_z_texture", 
                "order": 18, 
                "aliases": [
                    "negative z texture"
                ]
            }, 
            "negative_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Swap St", 
                "moonray_name": "negative_x_swap_st", 
                "order": 47, 
                "aliases": [
                    "negative x swap st"
                ]
            }, 
            "positive_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Wrap Around", 
                "moonray_name": "positive_y_wrap_around", 
                "order": 34, 
                "aliases": [
                    "positive y wrap around"
                ]
            }, 
            "positive_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Scale", 
                "moonray_name": "positive_x_scale", 
                "order": 19, 
                "aliases": [
                    "positive x scale"
                ]
            }, 
            "positive_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Z Texture", 
                "moonray_name": "positive_z_texture", 
                "order": 12, 
                "aliases": [
                    "positive z texture"
                ]
            }, 
            "positive_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Active", 
                "moonray_name": "positive_z_active", 
                "order": 11, 
                "aliases": [
                    "positive z active"
                ]
            }, 
            "negative_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Active", 
                "moonray_name": "negative_y_active", 
                "order": 15, 
                "aliases": [
                    "negative y active"
                ]
            }, 
            "positive_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Wrap Around", 
                "moonray_name": "positive_z_wrap_around", 
                "order": 42, 
                "aliases": [
                    "positive z wrap around"
                ]
            }, 
            "negative_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Active", 
                "moonray_name": "negative_z_active", 
                "order": 17, 
                "aliases": [
                    "negative z active"
                ]
            }, 
            "negative_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Offset", 
                "moonray_name": "negative_z_offset", 
                "order": 60, 
                "aliases": [
                    "negative z offset"
                ]
            }, 
            "negative_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Wrap Around", 
                "moonray_name": "negative_y_wrap_around", 
                "order": 58, 
                "aliases": [
                    "negative y wrap around"
                ]
            }, 
            "negative_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert T", 
                "moonray_name": "negative_y_invert_t", 
                "order": 54, 
                "aliases": [
                    "negative y invert t"
                ]
            }, 
            "input_position_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "input_position_source", 
                "help": "Input position to use", 
                "moonray_type": "Int", 
                "menu": [
                    "P/N", 
                    "ref_P/ref_N", 
                    "input_position/input_normal"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Input Position Source", 
                "moonray_name": "input_position_source", 
                "order": 75
            }, 
            "negative_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Rotation Center", 
                "moonray_name": "negative_y_rotation_center", 
                "order": 57, 
                "aliases": [
                    "negative y rotation center"
                ]
            }, 
            "negative_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert S", 
                "moonray_name": "negative_y_invert_s", 
                "order": 53, 
                "aliases": [
                    "negative y invert s"
                ]
            }
        }, 
        "folders_with_parms": {
            "Negative Z Modifiers": [
                "negative_z_scale", 
                "negative_z_offset", 
                "negative_z_invert_s", 
                "negative_z_invert_t", 
                "negative_z_swap_st", 
                "negative_z_rotation", 
                "negative_z_rotation_center", 
                "negative_z_wrap_around"
            ], 
            "Positive X Modifiers": [
                "positive_x_scale", 
                "positive_x_offset", 
                "positive_x_invert_s", 
                "positive_x_invert_t", 
                "positive_x_swap_st", 
                "positive_x_rotation", 
                "positive_x_rotation_center", 
                "positive_x_wrap_around"
            ], 
            "Positive Y Modifiers": [
                "positive_y_scale", 
                "positive_y_offset", 
                "positive_y_invert_s", 
                "positive_y_invert_t", 
                "positive_y_swap_st", 
                "positive_y_rotation", 
                "positive_y_rotation_center", 
                "positive_y_wrap_around"
            ], 
            "Negative Y Modifiers": [
                "negative_y_scale", 
                "negative_y_offset", 
                "negative_y_invert_s", 
                "negative_y_invert_t", 
                "negative_y_swap_st", 
                "negative_y_rotation", 
                "negative_y_rotation_center", 
                "negative_y_wrap_around"
            ], 
            "Positive Z Modifiers": [
                "positive_z_scale", 
                "positive_z_offset", 
                "positive_z_invert_s", 
                "positive_z_invert_t", 
                "positive_z_swap_st", 
                "positive_z_rotation", 
                "positive_z_rotation_center", 
                "positive_z_wrap_around"
            ], 
            "Negative X Modifiers": [
                "negative_x_scale", 
                "negative_x_offset", 
                "negative_x_invert_s", 
                "negative_x_invert_t", 
                "negative_x_swap_st", 
                "negative_x_rotation", 
                "negative_x_rotation_center", 
                "negative_x_wrap_around"
            ]
        }
    }, 
    "TangentSpaceDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "TangentSpaceDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 5
            }, 
            "dPds": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "dPds", 
                "help": "Connect a RenderOutput with State dPds AOV here. Used to construct tangent space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dpds", 
                "interface": "RenderOutput", 
                "moonray_name": "dPds", 
                "order": 3
            }, 
            "normal_map_output": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normal_map_output", 
                "help": "When on, encodes the output to clamped [0, 1] in the same manner as a normal map", 
                "moonray_type": "Bool", 
                "houdini_label": "Normal Map Output", 
                "moonray_name": "normal_map_output", 
                "order": 0
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 4
            }, 
            "N": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "N", 
                "help": "Connect a RenderOutput with State N AOV here. Used to construct tangent space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "N", 
                "interface": "RenderOutput", 
                "moonray_name": "N", 
                "order": 2
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 6
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to transform into tangent space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 1
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "DwaColorCorrectMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaColorCorrectMaterial", 
        "folders_sorted": [
            "Hue/Sat/Gain", 
            "TMI"
        ], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Enable/disable all color corrections", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 4
            }, 
            "saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "desaturates the input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "bindable": true, 
                "moonray_name": "saturation", 
                "order": 7
            }, 
            "TMI_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "TMI_enabled", 
                "help": "enables the TMI parameters", 
                "moonray_type": "Bool", 
                "houdini_label": "Enabled", 
                "moonray_name": "TMI_enabled", 
                "order": 9
            }, 
            "hue_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue_shift", 
                "help": "shifts the hue of the input (spectrum range is 0-1)", 
                "moonray_type": "Float", 
                "houdini_label": "Hue Shift", 
                "bindable": true, 
                "moonray_name": "hue_shift", 
                "order": 6
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "gain": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "multiplies the input channels by the specified value", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 8
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Rgb", 
                "display": "tmi", 
                "houdini_label": "TMI", 
                "moonray_name": "TMI", 
                "order": 10
            }, 
            "input_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Material", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "input_material", 
                "order": 3
            }
        }, 
        "folders_with_parms": {
            "TMI": [
                "TMI_enabled", 
                "TMI"
            ], 
            "Hue/Sat/Gain": [
                "hue_shift", 
                "saturation", 
                "gain"
            ]
        }
    }, 
    "DwaBaseMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaBaseMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Clearcoat", 
            "Glitter", 
            "Specular", 
            "Iridescence", 
            "Diffuse", 
            "Transmission", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 98, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole, 2 for random walk", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 73
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 68, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "show_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_clearcoat", 
                "help": "enables/disables clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Clearcoat", 
                "moonray_name": "show_clearcoat", 
                "order": 10, 
                "aliases": [
                    "show clearcoat"
                ]
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 53
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 23
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "independent_transmission_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "independent_transmission_roughness", 
                "help": "separate roughness for transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Roughness", 
                "bindable": true, 
                "moonray_name": "independent_transmission_roughness", 
                "order": 87
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 66, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 21
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 90, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 58
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 25
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 31
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 36
            }, 
            "clearcoat_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clearcoat_bending", 
                "help": "(advanced, recommended ON) bends rays based on the clearcoat-refractive-index before evaluating the lobes under clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Bending", 
                "moonray_name": "clearcoat_bending", 
                "order": 17, 
                "aliases": [
                    "clearcoat bending"
                ]
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 100, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 97, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "transmission": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "transmission", 
                "help": "enables/disables refractive solid model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "transmission", 
                "order": 81
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 54
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 78
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 74, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 44
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 35
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 30
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 32
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 57
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "use_independent_clearcoat_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_clearcoat_normal", 
                "help": "specifies whether the clearcoat lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Clearcoat Normal", 
                "moonray_name": "use_independent_clearcoat_normal", 
                "order": 18, 
                "aliases": [
                    "use independent clearcoat normal"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 93, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 60, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 65, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 67, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "clearcoat_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "clearcoat_model", 
                "help": "sets the normal distribution function for clearcoat.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "clearcoat_model", 
                "order": 12, 
                "aliases": [
                    "clearcoat model"
                ]
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 46
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 69, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 49, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 42
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 70, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "use_independent_transmission_refractive_index": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_refractive_index", 
                "help": "use a separate IOR for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Refractive Index", 
                "moonray_name": "use_independent_transmission_refractive_index", 
                "order": 84, 
                "aliases": [
                    "use independent transmission refractive index"
                ]
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 43
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 40, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "clearcoat_thickness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clearcoat_thickness", 
                "help": "the thickness of the virtual clearcoat layer. Values > 0 enable absorption", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "clearcoat_thickness", 
                "order": 15, 
                "aliases": [
                    "clearcoat thickness"
                ]
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 55, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 64, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "transmission_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "transmission_color", 
                "help": "the desired color of transmitted light", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "transmission_color", 
                "order": 83, 
                "aliases": [
                    "transmission color"
                ]
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 96
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 95
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 27
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 39, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 37
            }, 
            "metallic_edge_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_edge_color", 
                "help": "the reflection color at grazing angles, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Edge Color", 
                "bindable": true, 
                "moonray_name": "metallic_edge_color", 
                "order": 52, 
                "aliases": [
                    "metallic edge color"
                ]
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 22
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 61, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 34
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 62
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 29
            }, 
            "use_independent_transmission_roughness": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_roughness", 
                "help": "use a separate roughness for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Roughness", 
                "moonray_name": "use_independent_transmission_roughness", 
                "order": 86
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "clearcoat_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat_normal_dial", 
                "help": "controls the amount of infuence of the alternate clearcoat normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "clearcoat_normal_dial", 
                "order": 20, 
                "aliases": [
                    "clearcoat normal dial"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 63, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "clearcoat_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "clearcoat_roughness", 
                "help": "the roughness of the clearcoat lobe", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "clearcoat_roughness", 
                "order": 14, 
                "aliases": [
                    "clearcoat roughness"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 45, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 91, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "metallic_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_color", 
                "help": "the overall reflection color, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Color", 
                "bindable": true, 
                "moonray_name": "metallic_color", 
                "order": 51, 
                "aliases": [
                    "metallic color"
                ]
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 92, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "clearcoat_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "clearcoat_refractive_index", 
                "help": "defines the Fresnel behavior", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "clearcoat_refractive_index", 
                "order": 13, 
                "aliases": [
                    "clearcoat refractive index"
                ]
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 72
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 76, 
                "aliases": [
                    "enable sss input normal"
                ]
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 33
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 59, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "independent_transmission_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "independent_transmission_refractive_index", 
                "help": "defines a separate IOR for the bending of light with transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Refractive Index", 
                "moonray_name": "independent_transmission_refractive_index", 
                "order": 85, 
                "aliases": [
                    "independent transmission refractive index"
                ]
            }, 
            "dispersion_abbe_number": {
                "default_value": [
                    34.0
                ], 
                "houdini_name": "dispersion_abbe_number", 
                "help": "The amount of dispersion/chromatic-aberration via refractions. Lower this number to increase the effect. A value of 0 turns off dispersion. Around [25-80] makes sense for realistic glass. Lower values may look better on gemstones.", 
                "moonray_type": "Float", 
                "houdini_label": "Dispersion Abbe Number", 
                "moonray_name": "dispersion_abbe_number", 
                "order": 89
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 24
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 41
            }, 
            "clearcoat": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat", 
                "help": "enables/disables clearcoat (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Clearcoat", 
                "bindable": true, 
                "moonray_name": "clearcoat", 
                "order": 11
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 71
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 28
            }, 
            "clearcoat_attenuation_color": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "clearcoat_attenuation_color", 
                "help": "the attenuation color of the clearcoat when 'cleacoat thickness' > 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "clearcoat_attenuation_color", 
                "order": 16, 
                "aliases": [
                    "clearcoat attenuation color"
                ]
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 80, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "metallic": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "metallic", 
                "help": "enables/disables metallic model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Metallic", 
                "bindable": true, 
                "moonray_name": "metallic", 
                "order": 47
            }, 
            "independent_clearcoat_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_clearcoat_normal", 
                "help": "specifies an independent shading normal (normal map) for the clearcoat lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Clearcoat Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_clearcoat_normal", 
                "order": 19, 
                "aliases": [
                    "independent clearcoat normal"
                ]
            }, 
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 99
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 38
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 56
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface. When 0 surface diffuse (lambertian or toon) is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 75, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "resolve_self_intersections": {
                "default_value": [
                    true
                ], 
                "houdini_name": "resolve_self_intersections", 
                "help": "tries to resolve self-intersecting geometry automatically by only evaluating 'exiting' intersections for subsurface evaluations", 
                "moonray_type": "Bool", 
                "houdini_label": "Resolve Self Intersections", 
                "moonray_name": "resolve_self_intersections", 
                "order": 77
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 94
            }, 
            "show_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_transmission", 
                "help": "enables/disables refractive solid model", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Transmission", 
                "moonray_name": "show_transmission", 
                "order": 82, 
                "aliases": [
                    "show transmission"
                ]
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 79, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 26
            }, 
            "use_dispersion": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_dispersion", 
                "help": "use dispersion effects in transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Dispersion", 
                "moonray_name": "use_dispersion", 
                "order": 88
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 48, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "refractive_index", 
                "help": "defines the Fresnel behavior, (affects reflection and refraction)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 50, 
                "aliases": [
                    "refractive index"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Transmission": [
                "transmission", 
                "show_transmission", 
                "transmission_color", 
                "use_independent_transmission_refractive_index", 
                "independent_transmission_refractive_index", 
                "use_independent_transmission_roughness", 
                "independent_transmission_roughness", 
                "use_dispersion", 
                "dispersion_abbe_number"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "metallic", 
                "show_specular", 
                "specular_model", 
                "refractive_index", 
                "metallic_color", 
                "metallic_edge_color", 
                "roughness", 
                "anisotropy", 
                "shading_tangent"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Clearcoat": [
                "show_clearcoat", 
                "clearcoat", 
                "clearcoat_model", 
                "clearcoat_refractive_index", 
                "clearcoat_roughness", 
                "clearcoat_thickness", 
                "clearcoat_attenuation_color", 
                "clearcoat_bending", 
                "use_independent_clearcoat_normal", 
                "independent_clearcoat_normal", 
                "clearcoat_normal_dial"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "show_diffuse", 
                "albedo", 
                "diffuse_roughness", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "resolve_self_intersections", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ], 
            "Advanced": [
                "specular", 
                "sss_trace_set"
            ]
        }
    }, 
    "ProjectCameraMap_v2": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectCameraMap_v2", 
        "folders_sorted": [], 
        "parms": {
            "unpremultiply": {
                "default_value": [
                    false
                ], 
                "houdini_name": "unpremultiply", 
                "help": "When enabled, the rgb channels are divided by the alpha channel (where non-zero)", 
                "moonray_type": "Bool", 
                "houdini_label": "Unpremultiply", 
                "moonray_name": "unpremultiply", 
                "order": 6
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the camera to project from", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Camera", 
                "moonray_name": "projector", 
                "order": 0
            }, 
            "custom_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "custom_aspect_ratio", 
                "help": "a custom aspect ratio for the projected texture", 
                "moonray_type": "Float", 
                "houdini_label": "Custom Aspect Ratio", 
                "moonray_name": "custom_aspect_ratio", 
                "order": 8
            }, 
            "project_on_back_faces": {
                "default_value": [
                    false
                ], 
                "houdini_name": "project_on_back_faces", 
                "help": "Toggles whether camera projections appear on back faces.", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Back Faces", 
                "moonray_name": "project_on_back_faces", 
                "order": 1
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 4
            }, 
            "aspect_ratio_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "aspect_ratio_source", 
                "help": "Whether to use the image and pixel aspect ratio of the texture being projected, or a custom aspect ratio", 
                "moonray_type": "Int", 
                "menu": [
                    "from texture", 
                    "custom"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Aspect Ratio Source", 
                "moonray_name": "aspect_ratio_source", 
                "order": 7
            }, 
            "alpha_only": {
                "default_value": [
                    false
                ], 
                "houdini_name": "alpha_only", 
                "help": "When enabled, the alpha channel is returned instead of RGB", 
                "moonray_type": "Bool", 
                "houdini_label": "Alpha Only", 
                "moonray_name": "alpha_only", 
                "order": 5
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 3
            }, 
            "black_outside_projection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "black_outside_projection", 
                "help": "Toggles whether projections appear outside the 0-1 uv range of the projector", 
                "moonray_type": "Bool", 
                "houdini_label": "Black Outside Projection", 
                "moonray_name": "black_outside_projection", 
                "order": 2
            }, 
            "gamma": {
                "default_value": [
                    2
                ], 
                "houdini_name": "gamma", 
                "help": "Controls application of gamma to images (off -0, on - 1, auto - 2).   Auto will apply gamma decoding to 8-bit images", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "on", 
                    "auto"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 9
            }
        }, 
        "folders_with_parms": {}
    }, 
    "CookieLightFilter_v2": {
        "moonray_type": "LightFilter", 
        "moonray_name": "CookieLightFilter_v2", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "blur_near_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_near_distance", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Near Distance", 
                "moonray_name": "blur_near_distance", 
                "order": 7
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "projector_film_width_aperture": {
                "default_value": [
                    24.0
                ], 
                "houdini_name": "projector_film_width_aperture", 
                "help": "Size of the camera image plane", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Film Width Aperture", 
                "moonray_name": "projector_film_width_aperture", 
                "order": 5
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light filter's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 18
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "If a projector is specified, it overrides the node_xform and projector_* attributes", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Camera", 
                "moonray_name": "projector", 
                "order": 1
            }, 
            "projector_focal": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "projector_focal", 
                "help": "Focal length of the lens when using perspective projection", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Focal", 
                "moonray_name": "projector_focal", 
                "order": 4
            }, 
            "blur_far_distance": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "blur_far_distance", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Far Distance", 
                "moonray_name": "blur_far_distance", 
                "order": 9
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Inverts the map", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 16
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "Controls how much of the cookie is added to the light", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 15
            }, 
            "blur_near_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_near_value", 
                "help": "Blur filter radius (in texture UV space) at the near distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Near Value", 
                "moonray_name": "blur_near_value", 
                "order": 10
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light filter.  Any file format supported by OpenImageIO can be used.  ", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 17
            }, 
            "outside_projection": {
                "default_value": [
                    0
                ], 
                "houdini_name": "outside_projection", 
                "help": "What happens outside the frustum of the projection camera.  Black (default), White, or Default (This uses the mode set on the Moonray map shader)", 
                "moonray_type": "Int", 
                "menu": [
                    "black", 
                    "white", 
                    "default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Outside Projection", 
                "moonray_name": "outside_projection", 
                "order": 14
            }, 
            "blur_far_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_far_value", 
                "help": "Blur filter radius (in texture UV space) at the far distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Far Value", 
                "moonray_name": "blur_far_value", 
                "order": 12
            }, 
            "blur_midpoint": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "blur_midpoint", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Midpoint", 
                "moonray_name": "blur_midpoint", 
                "order": 8
            }, 
            "projector_pixel_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "projector_pixel_aspect_ratio", 
                "help": "Aspect ratio of the projection", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Pixel Aspect Ratio", 
                "moonray_name": "projector_pixel_aspect_ratio", 
                "order": 6
            }, 
            "projector_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projector_type", 
                "help": "Perspective or orthographic projection", 
                "moonray_type": "Int", 
                "menu": [
                    "perspective", 
                    "orthographic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Projector Type", 
                "moonray_name": "projector_type", 
                "order": 3
            }, 
            "blur_mid_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_mid_value", 
                "help": "Blur filter radius (in texture UV space) at the mid distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Mid Value", 
                "moonray_name": "blur_mid_value", 
                "order": 11
            }, 
            "blur_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blur_type", 
                "help": "Gaussian or circular blur", 
                "moonray_type": "Int", 
                "menu": [
                    "gaussian", 
                    "circular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Blur Type", 
                "moonray_name": "blur_type", 
                "order": 13
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "projector", 
                "blur_near_distance", 
                "blur_midpoint", 
                "blur_far_distance", 
                "blur_near_value", 
                "blur_mid_value", 
                "blur_far_value", 
                "blur_type", 
                "outside_projection", 
                "density", 
                "invert", 
                "texture", 
                "gamma"
            ]
        }
    }, 
    "UsdGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "UsdGeometry", 
        "folders_sorted": [
            "Curve"
        ], 
        "parms": {
            "base_width_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "base_width_factor", 
                "help": "Multiplier for the radius of the base of curves", 
                "moonray_type": "Float", 
                "houdini_label": "Base Width Factor", 
                "moonray_name": "base_width_factor", 
                "order": 30, 
                "aliases": [
                    "base width factor"
                ]
            }, 
            "subd_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "subd_type", 
                "help": "PolygonMesh/SubdivisionMesh prim type to create.\n\"use mesh type\" will use the type the Mesh prim specifies.\n\"force polygon mesh\" will always resolve to PolygonMesh.\n\"force subdivision mesh\" will always resolve to SubdivisionMesh.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "use mesh type", 
                    "force polygon mesh", 
                    "force subdivision mesh"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Subd Type", 
                "moonray_name": "subd_type", 
                "order": 28, 
                "aliases": [
                    "subd type"
                ]
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "radius_mult": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "radius_mult", 
                "help": "radius multiplier for points and curves", 
                "moonray_type": "Float", 
                "houdini_label": "Radius Mult", 
                "moonray_name": "radius_mult", 
                "order": 29, 
                "aliases": [
                    "radius mult", 
                    "point scale", 
                    "point_scale"
                ]
            }, 
            "use_prim_xform": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_prim_xform", 
                "help": "Include the xform from the Prim during geometry creation\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Prim Xform", 
                "moonray_name": "use_prim_xform", 
                "order": 23, 
                "aliases": [
                    "use prim xform"
                ]
            }, 
            "use_stage_cache": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_stage_cache", 
                "help": "Load the entire stage and use StageCache to share it among all UsdGeometry objects.\nIf this is false, load a stage masked to the prim path just for this UsdGeometry.\nFor large stages with thousands of unique assets, it is faster to enable the stage cache\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Stage Cache", 
                "moonray_name": "use_stage_cache", 
                "order": 25, 
                "aliases": [
                    "use stage cache"
                ]
            }, 
            "part_list": {
                "default_value": [], 
                "houdini_name": "part_list", 
                "help": "Ordered list of part names", 
                "moonray_type": "StringVector", 
                "houdini_label": "Part List", 
                "moonray_name": "part_list", 
                "order": 33, 
                "aliases": [
                    "part list"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "use_evaluation_frame": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_evaluation_frame", 
                "help": "uses \"evaluation frame\" instead of SceneVariables frame\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Evaluation Frame", 
                "moonray_name": "use_evaluation_frame", 
                "order": 26, 
                "aliases": [
                    "use evaluation frame"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "tessellation_rate": {
                "default_value": [
                    4
                ], 
                "houdini_name": "tessellation_rate", 
                "help": "Number of segments to split curve spans into", 
                "moonray_type": "Int", 
                "houdini_label": "Tessellation Rate", 
                "moonray_name": "tessellation_rate", 
                "order": 35
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "primitive_attribute_frame": {
                "default_value": [
                    2
                ], 
                "houdini_name": "primitive_attribute_frame", 
                "help": "Which frame(s) do we take the primitive attributes from?\n\tO : first motion step\n\t1 : second motion step\n\t2 : both motion steps", 
                "moonray_type": "Int", 
                "menu": [
                    "first motion step", 
                    "second motion step", 
                    "both motion steps"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Primitive Attribute Frame", 
                "moonray_name": "primitive_attribute_frame", 
                "order": 42
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "use_rotation_motion_blur": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_rotation_motion_blur", 
                "help": "if \"xform\" is time varying and motion blur is turned on, Turning on this toggle can generate better rotation trail. Known limitation: turning on this toggle will disable adaptive tessellation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Rotation Motion Blur", 
                "moonray_name": "use_rotation_motion_blur", 
                "order": 39, 
                "aliases": [
                    "use_rotation_motion_blur"
                ]
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "A list of UserData to specify arbitrary primitive attributes", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "interface": "UserData", 
                "moonray_name": "primitive_attributes", 
                "order": 34, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "mesh_resolution": {
                "default_value": [
                    2.0
                ], 
                "houdini_name": "mesh_resolution", 
                "help": "The maximum resolution to tessellate a mesh. An edge on input face will be tessellated to at most n segments when \"mesh resolution\" is set to n. If \"adaptive error\" is set to 0, every edge on input face will be uniformly tessellated to \"mesh resolution\". Otherwise renderer will adaptively tessellate mesh based on camera information", 
                "moonray_type": "Float", 
                "houdini_label": "Mesh Resolution", 
                "moonray_name": "mesh_resolution", 
                "order": 36, 
                "aliases": [
                    "resolution factor", 
                    "subd resolution", 
                    "subd_resolution"
                ]
            }, 
            "curved_motion_blur_sample_count": {
                "default_value": [
                    10
                ], 
                "houdini_name": "curved_motion_blur_sample_count", 
                "help": "Number of time samples generated along each curve when using curved motion blur", 
                "moonray_type": "Int", 
                "houdini_label": "Curved Motion Blur Sample Count", 
                "moonray_name": "curved_motion_blur_sample_count", 
                "order": 41, 
                "aliases": [
                    "curved motion blur sample count"
                ]
            }, 
            "adaptive_error": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "adaptive_error", 
                "help": "the maximum allowable difference in pixels for subdivison mesh adaptive tessellation (each final tessellated edge won't be longer than n pixels if adaptive error is set to n).A value of 0 disables adaptive tessellation, reverting to uniform tessellation, which sometimes is more stable in animation.Adaptive tessellation is not supported for instances.", 
                "moonray_type": "Float", 
                "houdini_label": "Adaptive Error", 
                "moonray_name": "adaptive_error", 
                "order": 37, 
                "aliases": [
                    "adaptive error"
                ]
            }, 
            "evaluation_frame": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "evaluation_frame", 
                "help": "evaluate geometry at specified frame instead of SceneVariables frame\n", 
                "moonray_type": "Float", 
                "houdini_label": "Evaluation Frame", 
                "moonray_name": "evaluation_frame", 
                "order": 27, 
                "aliases": [
                    "evaluation frame"
                ]
            }, 
            "use_master_xform": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_master_xform", 
                "help": "If the prim is an instance proxy, use the xform from the master Prim during geometry creation\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Master Xform", 
                "moonray_name": "use_master_xform", 
                "order": 24, 
                "aliases": [
                    "use master xform"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "stage": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "stage", 
                "help": "USD Stage to load\n", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Stage", 
                "moonray_name": "stage", 
                "order": 21
            }, 
            "curves_subtype": {
                "default_value": [
                    0
                ], 
                "houdini_name": "curves_subtype", 
                "help": "Curves subtype is ray facing or round", 
                "moonray_type": "Int", 
                "menu": [
                    "ray_facing", 
                    "round"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Curves Subtype", 
                "moonray_name": "curves_subtype", 
                "order": 32
            }, 
            "smooth_normal": {
                "default_value": [
                    true
                ], 
                "houdini_name": "smooth_normal", 
                "help": "generate smooth shading normal when rendering PolygonMesh and the mesh doesn't provide shading normal itself", 
                "moonray_type": "Bool", 
                "houdini_label": "Smooth Normal", 
                "moonray_name": "smooth_normal", 
                "order": 38
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "prim_path": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "prim_path", 
                "help": "The geometry Prim to load from the USD Stage\n", 
                "moonray_type": "String", 
                "houdini_label": "Prim Path", 
                "moonray_name": "prim_path", 
                "order": 22
            }, 
            "motion_blur_type": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "motion_blur_type", 
                "help": "Motion blur type for PolygonMesh/Points/Curves in alembic file.\n\"static\" will treat the mesh as static.\n\"velocity\" will blur using the supplied vertex positions and velocities.\n\"frame delta\" will interpolate between the two supplied vertex positions.\n\"acceleration\" will blur using the supplied vertex positions, velocities and accelerations.\n\"hermite\" will use supplied pair of positions and pair of velocities to interpolate along a cubic Hermite curve.\n\"best\" will use choose the method which provides the highest quality given the available data.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "best", 
                    "static", 
                    "velocity", 
                    "frame delta", 
                    "acceleration", 
                    "hermite"
                ], 
                "menu_values": [
                    "-1", 
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Motion Blur Type", 
                "moonray_name": "motion_blur_type", 
                "order": 40, 
                "aliases": [
                    "motion blur type"
                ]
            }, 
            "tip_width_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "tip_width_factor", 
                "help": "Multiplier for the radius of the tip of curves", 
                "moonray_type": "Float", 
                "houdini_label": "Tip Width Factor", 
                "moonray_name": "tip_width_factor", 
                "order": 31, 
                "aliases": [
                    "tip width factor"
                ]
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {
            "Curve": [
                "tessellation_rate"
            ]
        }
    }, 
    "CheckerboardMap": {
        "moonray_type": "Map", 
        "moonray_name": "CheckerboardMap", 
        "folders_sorted": [], 
        "parms": {
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "help": "switches between the model's uv coordinates or the input texture coordinates", 
                "moonray_type": "Int", 
                "menu": [
                    "texture", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 4, 
                "aliases": [
                    "texture coordinates"
                ]
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "help": "bind a shader that outputs UV coordinates (such as a projection shader) here", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 5, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "moonray_name": "color_B", 
                "order": 1, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "moonray_name": "color_A", 
                "order": 0, 
                "aliases": [
                    "color A"
                ]
            }, 
            "num_u_tiles": {
                "default_value": [
                    8
                ], 
                "houdini_name": "num_u_tiles", 
                "help": "number of checkerboard squares in the U direction", 
                "moonray_type": "Int", 
                "houdini_label": "Num U Tiles", 
                "moonray_name": "num_u_tiles", 
                "order": 2, 
                "aliases": [
                    "num u tiles"
                ]
            }, 
            "num_v_tiles": {
                "default_value": [
                    8
                ], 
                "houdini_name": "num_v_tiles", 
                "help": "number of checkerboard squares in the V direction", 
                "moonray_type": "Int", 
                "houdini_label": "Num V Tiles", 
                "moonray_name": "num_v_tiles", 
                "order": 3, 
                "aliases": [
                    "num v tiles"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaRefractiveMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaRefractiveMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Clearcoat", 
            "Specular", 
            "Iridescence", 
            "Transmission", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 58
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 32, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "transmission_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "transmission_color", 
                "help": "the desired color of transmitted light", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "transmission_color", 
                "order": 42, 
                "aliases": [
                    "transmission color"
                ]
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 28
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 54
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "dispersion_abbe_number": {
                "default_value": [
                    34.0
                ], 
                "houdini_name": "dispersion_abbe_number", 
                "help": "The amount of dispersion/chromatic-aberration via refractions. Lower this number to increase the effect. A value of 0 turns off dispersion. Around [25-80] makes sense for realistic glass. Lower values may look better on gemstones.", 
                "moonray_type": "Float", 
                "houdini_label": "Dispersion Abbe Number", 
                "moonray_name": "dispersion_abbe_number", 
                "order": 48
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 55
            }, 
            "use_independent_clearcoat_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_clearcoat_normal", 
                "help": "specifies whether the clearcoat lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Clearcoat Normal", 
                "moonray_name": "use_independent_clearcoat_normal", 
                "order": 18, 
                "aliases": [
                    "use independent clearcoat normal"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 52, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "show_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_clearcoat", 
                "help": "enables/disables clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Clearcoat", 
                "moonray_name": "show_clearcoat", 
                "order": 10, 
                "aliases": [
                    "show clearcoat"
                ]
            }, 
            "clearcoat": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat", 
                "help": "enables/disables clearcoat (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Clearcoat", 
                "bindable": true, 
                "moonray_name": "clearcoat", 
                "order": 11
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 31, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 24
            }, 
            "independent_transmission_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "independent_transmission_refractive_index", 
                "help": "defines a separate IOR for the bending of light with transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Refractive Index", 
                "moonray_name": "independent_transmission_refractive_index", 
                "order": 44, 
                "aliases": [
                    "independent transmission refractive index"
                ]
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 36, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 40, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "clearcoat_attenuation_color": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "clearcoat_attenuation_color", 
                "help": "the attenuation color of the clearcoat when 'cleacoat thickness' > 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "clearcoat_attenuation_color", 
                "order": 16, 
                "aliases": [
                    "clearcoat attenuation color"
                ]
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 37, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 33
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 38, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "clearcoat_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "clearcoat_model", 
                "help": "sets the normal distribution function for clearcoat.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "clearcoat_model", 
                "order": 12, 
                "aliases": [
                    "clearcoat model"
                ]
            }, 
            "use_independent_transmission_roughness": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_roughness", 
                "help": "use a separate roughness for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Roughness", 
                "moonray_name": "use_independent_transmission_roughness", 
                "order": 45
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "independent_clearcoat_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_clearcoat_normal", 
                "help": "specifies an independent shading normal (normal map) for the clearcoat lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Clearcoat Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_clearcoat_normal", 
                "order": 19, 
                "aliases": [
                    "independent clearcoat normal"
                ]
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 22, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "clearcoat_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat_normal_dial", 
                "help": "controls the amount of infuence of the alternate clearcoat normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "clearcoat_normal_dial", 
                "order": 20, 
                "aliases": [
                    "clearcoat normal dial"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 26, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 34, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "clearcoat_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "clearcoat_roughness", 
                "help": "the roughness of the clearcoat lobe", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "clearcoat_roughness", 
                "order": 14, 
                "aliases": [
                    "clearcoat roughness"
                ]
            }, 
            "use_dispersion": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_dispersion", 
                "help": "use dispersion effects in transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Dispersion", 
                "moonray_name": "use_dispersion", 
                "order": 47
            }, 
            "independent_transmission_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "independent_transmission_roughness", 
                "help": "separate roughness for transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Roughness", 
                "bindable": true, 
                "moonray_name": "independent_transmission_roughness", 
                "order": 46
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 29
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "show_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_transmission", 
                "help": "enables/disables refractive solid model", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Transmission", 
                "moonray_name": "show_transmission", 
                "order": 41, 
                "aliases": [
                    "show transmission"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 50, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 49, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 27
            }, 
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 57, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "use_independent_transmission_refractive_index": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_refractive_index", 
                "help": "use a separate IOR for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Refractive Index", 
                "moonray_name": "use_independent_transmission_refractive_index", 
                "order": 43, 
                "aliases": [
                    "use independent transmission refractive index"
                ]
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 51, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 53
            }, 
            "clearcoat_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "clearcoat_refractive_index", 
                "help": "defines the Fresnel behavior", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "clearcoat_refractive_index", 
                "order": 13, 
                "aliases": [
                    "clearcoat refractive index"
                ]
            }, 
            "clearcoat_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clearcoat_bending", 
                "help": "(advanced, recommended ON) bends rays based on the clearcoat-refractive-index before evaluating the lobes under clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Bending", 
                "moonray_name": "clearcoat_bending", 
                "order": 17, 
                "aliases": [
                    "clearcoat bending"
                ]
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 56, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 25
            }, 
            "clearcoat_thickness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clearcoat_thickness", 
                "help": "the thickness of the virtual clearcoat layer. Values > 0 enable absorption", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "clearcoat_thickness", 
                "order": 15, 
                "aliases": [
                    "clearcoat thickness"
                ]
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 35, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 21, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 39, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "refractive_index", 
                "help": "defines the Fresnel behavior, (affects reflection and refraction)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 23, 
                "aliases": [
                    "refractive index"
                ]
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 30, 
                "aliases": [
                    "iridescence primary color"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Transmission": [
                "show_transmission", 
                "transmission_color", 
                "use_independent_transmission_refractive_index", 
                "independent_transmission_refractive_index", 
                "use_independent_transmission_roughness", 
                "independent_transmission_roughness", 
                "use_dispersion", 
                "dispersion_abbe_number"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "show_specular", 
                "specular_model", 
                "refractive_index", 
                "roughness", 
                "anisotropy", 
                "shading_tangent"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Clearcoat": [
                "show_clearcoat", 
                "clearcoat", 
                "clearcoat_model", 
                "clearcoat_refractive_index", 
                "clearcoat_roughness", 
                "clearcoat_thickness", 
                "clearcoat_attenuation_color", 
                "clearcoat_bending", 
                "use_independent_clearcoat_normal", 
                "independent_clearcoat_normal", 
                "clearcoat_normal_dial"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Advanced": [
                "specular"
            ]
        }
    }, 
    "ProjectTriplanarUdimMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectTriplanarUdimMap", 
        "folders_sorted": [], 
        "parms": {
            "y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "y_rotation", 
                "help": "2D rotation for y projected map", 
                "moonray_type": "Float", 
                "houdini_label": "Y Rotation", 
                "moonray_name": "y_rotation", 
                "order": 8, 
                "aliases": [
                    "y rotation"
                ]
            }, 
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 16
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 18
            }, 
            "z_rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "z_rotation_center", 
                "help": "2D rotation center for z projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Z Rotation Center", 
                "moonray_name": "z_rotation_center", 
                "order": 13, 
                "aliases": [
                    "z rotation center"
                ]
            }, 
            "x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "x_scale", 
                "help": "2D scale for x projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "X Scale", 
                "moonray_name": "x_scale", 
                "order": 3, 
                "aliases": [
                    "x scale"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 21
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 15
            }, 
            "z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "z_offset", 
                "help": "2D offset for z projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Z Offset", 
                "moonray_name": "z_offset", 
                "order": 10, 
                "aliases": [
                    "z offset"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 19
            }, 
            "z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "z_rotation", 
                "help": "2D rotation for z projected map", 
                "moonray_type": "Float", 
                "houdini_label": "Z Rotation", 
                "moonray_name": "z_rotation", 
                "order": 12, 
                "aliases": [
                    "z rotation"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 17
            }, 
            "y_rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "y_rotation_center", 
                "help": "2D rotation center for y projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Y Rotation Center", 
                "moonray_name": "y_rotation_center", 
                "order": 9, 
                "aliases": [
                    "y rotation center"
                ]
            }, 
            "x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "x_rotation", 
                "help": "2D rotation for x projected map", 
                "moonray_type": "Float", 
                "houdini_label": "X Rotation", 
                "moonray_name": "x_rotation", 
                "order": 4, 
                "aliases": [
                    "x rotation"
                ]
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 1, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "z_scale", 
                "help": "2D scale for z projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Z Scale", 
                "moonray_name": "z_scale", 
                "order": 11, 
                "aliases": [
                    "z scale"
                ]
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 14
            }, 
            "x_rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "x_rotation_center", 
                "help": "2D rotation center for x projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "X Rotation Center", 
                "moonray_name": "x_rotation_center", 
                "order": 5, 
                "aliases": [
                    "x rotation center"
                ]
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 20
            }, 
            "y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "y_scale", 
                "help": "2D scale for y projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Y Scale", 
                "moonray_name": "y_scale", 
                "order": 7, 
                "aliases": [
                    "y scale"
                ]
            }, 
            "y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "y_offset", 
                "help": "2D offset for y projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Y Offset", 
                "moonray_name": "y_offset", 
                "order": 6, 
                "aliases": [
                    "y offset"
                ]
            }, 
            "x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "x_offset", 
                "help": "2D offset for x projected map", 
                "moonray_type": "Vec2f", 
                "houdini_label": "X Offset", 
                "moonray_name": "x_offset", 
                "order": 2, 
                "aliases": [
                    "x offset"
                ]
            }, 
            "use_correct_uv": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_correct_uv", 
                "help": "use correct uv orientation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Correct Uv", 
                "moonray_name": "use_correct_uv", 
                "order": 0, 
                "aliases": [
                    "use correct uv"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ImageNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "ImageNormalMap", 
        "folders_sorted": [
            "UVs"
        ], 
        "parms": {
            "default_value": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "default_value", 
                "help": "default value to be used for missing udims when 'use_default_value_when_missing' is enabled", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Default Value", 
                "moonray_name": "default_value", 
                "order": 2
            }, 
            "rotation_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "rotation_angle", 
                "help": "Rotation in degrees", 
                "moonray_type": "Float", 
                "houdini_label": "Rotation Angle", 
                "moonray_name": "rotation_angle", 
                "order": 9
            }, 
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "moonray_type": "Int", 
                "menu": [
                    "texture", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 5
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 8
            }, 
            "rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "rotation_center", 
                "help": "UV coordinate around which to rotate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Rotation Center", 
                "moonray_name": "rotation_center", 
                "order": 10
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 6
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 7
            }, 
            "udim_max_v": {
                "default_value": [
                    10
                ], 
                "houdini_name": "udim_max_v", 
                "help": "udim maximum v value", 
                "moonray_type": "Int", 
                "houdini_label": "Udim Max V", 
                "moonray_name": "udim_max_v", 
                "order": 13
            }, 
            "tangent_space_normal_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "tangent_space_normal_texture", 
                "help": "filename that points to a tangent space normal texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Tangent Space Normal Texture", 
                "moonray_name": "tangent_space_normal_texture", 
                "order": 0
            }, 
            "wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Wrap Around", 
                "moonray_name": "wrap_around", 
                "order": 3
            }, 
            "normal_encoding": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_encoding", 
                "help": "Most normal maps are encoded [0,1]. Only certain rare floating point normal maps are encoded [-1,1]", 
                "moonray_type": "Int", 
                "menu": [
                    "[0,1]", 
                    "[-1,1]"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Encoding", 
                "moonray_name": "normal_encoding", 
                "order": 4
            }, 
            "use_default_value_when_missing": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_default_value_when_missing", 
                "help": "Uses the 'default_value' for missing udims and does not report error", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Default Value When Missing", 
                "moonray_name": "use_default_value_when_missing", 
                "order": 1
            }, 
            "udim_values": {
                "default_value": [], 
                "houdini_name": "udim_values", 
                "moonray_type": "IntVector", 
                "houdini_label": "Udim Values", 
                "moonray_name": "udim_values", 
                "order": 11
            }, 
            "udim_files": {
                "default_value": [], 
                "houdini_name": "udim_files", 
                "moonray_type": "StringVector", 
                "houdini_label": "Udim Files", 
                "moonray_name": "udim_files", 
                "order": 12
            }
        }, 
        "folders_with_parms": {
            "UVs": [
                "offset", 
                "scale", 
                "rotation_angle", 
                "rotation_center", 
                "udim_values", 
                "udim_files", 
                "udim_max_v"
            ]
        }
    }, 
    "ColorCorrectTMIMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectTMIMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Rgb", 
                "display": "tmi", 
                "houdini_label": "TMI", 
                "bindable": true, 
                "moonray_name": "TMI", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "VectorDisplacement": {
        "moonray_type": "Displacement", 
        "moonray_name": "VectorDisplacement", 
        "folders_sorted": [], 
        "parms": {
            "factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "factor", 
                "order": 2
            }, 
            "vector": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "vector", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Vector", 
                "bindable": true, 
                "interface": "Map", 
                "moonray_name": "vector", 
                "order": 1
            }, 
            "source_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "source_space", 
                "help": "The space that the map bound to the vector parameter is in", 
                "moonray_type": "Int", 
                "menu": [
                    "tangent", 
                    "object"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Source Space", 
                "moonray_name": "source_space", 
                "order": 3, 
                "aliases": [
                    "source space"
                ]
            }, 
            "tangent_space_style": {
                "default_value": [
                    0
                ], 
                "houdini_name": "tangent_space_style", 
                "help": "Controls how RGB maps to Tangent, Normal, and Bi-Normal", 
                "moonray_type": "Int", 
                "menu": [
                    "tnb", 
                    "tbn"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Tangent Space Style", 
                "moonray_name": "tangent_space_style", 
                "order": 4, 
                "aliases": [
                    "tangent space style"
                ]
            }, 
            "bound_padding": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bound_padding", 
                "help": "bound padding defines how much to extend the bounding box of the object. Keep this value as low as possible unless the geometry skips tessellation because control cage bounding box is out of camera frustum but the displacement stretch out of the original object bounding box (pre-displacement). Setting the bound padding too large will consume more memory and tessellation time.", 
                "moonray_type": "Float", 
                "houdini_label": "Bound Padding", 
                "moonray_name": "bound_padding", 
                "order": 0, 
                "aliases": [
                    "bound padding"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ShadowSet": {
        "moonray_type": "ShadowSet", 
        "moonray_name": "ShadowSet", 
        "folders_sorted": [], 
        "parms": {
            "lights": {
                "default_value": [], 
                "houdini_name": "lights", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Lights", 
                "interface": "Light", 
                "moonray_name": "lights", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ImageMap": {
        "moonray_type": "Map", 
        "moonray_name": "ImageMap", 
        "folders_sorted": [
            "Blur", 
            "Color Correction"
        ], 
        "parms": {
            "gamma_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "gamma_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Gamma Enabled", 
                "moonray_name": "gamma_enabled", 
                "order": 22, 
                "aliases": [
                    "gamma enabled"
                ]
            }, 
            "contrast_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contrast_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Contrast Enabled", 
                "moonray_name": "contrast_enabled", 
                "order": 20, 
                "aliases": [
                    "contrast enabled"
                ]
            }, 
            "gain_offset_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "gain_offset_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Gain Offset Enabled", 
                "moonray_name": "gain_offset_enabled", 
                "order": 24, 
                "aliases": [
                    "gain offset enabled"
                ]
            }, 
            "udim_values": {
                "default_value": [], 
                "houdini_name": "udim_values", 
                "moonray_type": "IntVector", 
                "houdini_label": "Udim Values", 
                "moonray_name": "udim_values", 
                "order": 15, 
                "aliases": [
                    "udim values"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 19
            }, 
            "offset_adjust": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset_adjust", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset Adjust", 
                "moonray_name": "offset_adjust", 
                "order": 26, 
                "aliases": [
                    "offset adjust"
                ]
            }, 
            "mip_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mip_bias", 
                "help": "Amount to scale derivatives which controls mipmap selection", 
                "moonray_type": "Float", 
                "houdini_label": "Mip Bias", 
                "bindable": true, 
                "moonray_name": "mip_bias", 
                "order": 7
            }, 
            "saturation_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "saturation_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Saturation Enabled", 
                "moonray_name": "saturation_enabled", 
                "order": 18, 
                "aliases": [
                    "saturation enabled"
                ]
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Vec3f", 
                "display": "tmi", 
                "houdini_label": "TMI", 
                "moonray_name": "TMI", 
                "order": 28, 
                "aliases": [
                    "TME"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 12
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 6, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "TMI_control_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "TMI_control_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "TMI Control Enabled", 
                "moonray_name": "TMI_control_enabled", 
                "order": 27, 
                "aliases": [
                    "TME control enabled", 
                    "TMI control enabled"
                ]
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx). If filename contains '<UDIM>', udim index substitution is performed on filename.  In the UDIM case, 'scale', 'offset', and 'wrap around' are ignored.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 1
            }, 
            "udim_max_v": {
                "default_value": [
                    10
                ], 
                "houdini_name": "udim_max_v", 
                "help": "udim maximum v value", 
                "moonray_type": "Int", 
                "houdini_label": "Udim Max V", 
                "moonray_name": "udim_max_v", 
                "order": 17, 
                "aliases": [
                    "udim max v"
                ]
            }, 
            "blur": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur", 
                "help": "This parameter is deprecated, do not use!   Number of pixels to blur the image", 
                "moonray_type": "Float", 
                "houdini_label": "Blur", 
                "bindable": true, 
                "moonray_name": "blur", 
                "order": 8
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 21
            }, 
            "rotation_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "rotation_angle", 
                "help": "Rotation in degrees", 
                "moonray_type": "Float", 
                "houdini_label": "Rotation Angle", 
                "moonray_name": "rotation_angle", 
                "order": 13, 
                "aliases": [
                    "rotation angle"
                ]
            }, 
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "moonray_type": "Int", 
                "menu": [
                    "texture", 
                    "hair surface", 
                    "input texture coordinates", 
                    "hair closest surface"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 4, 
                "aliases": [
                    "texture coordinates"
                ]
            }, 
            "num_blur_samples": {
                "default_value": [
                    3
                ], 
                "houdini_name": "num_blur_samples", 
                "help": "This parameter is deprecated, do not use!  Number of internal samples for blur.   Higher values increase quality", 
                "moonray_type": "Int", 
                "houdini_label": "Num Blur Samples", 
                "moonray_name": "num_blur_samples", 
                "order": 9
            }, 
            "default_color": {
                "default_value": [
                    0.0, 
                    1.0, 
                    0.0
                ], 
                "houdini_name": "default_color", 
                "help": "default color to be used for missing udims when 'use default color when missing' is enabled", 
                "moonray_type": "Rgb", 
                "houdini_label": "Default Color", 
                "moonray_name": "default_color", 
                "order": 3, 
                "aliases": [
                    "default color"
                ]
            }, 
            "alpha_only": {
                "default_value": [
                    false
                ], 
                "houdini_name": "alpha_only", 
                "help": "If true, the alpha channel of the texture will be placed in the rgb channels.  If the texture has no alpha channel, 1.0 is used, and the resulting texture lookup is then always white.", 
                "moonray_type": "Bool", 
                "houdini_label": "Alpha Only", 
                "moonray_name": "alpha_only", 
                "order": 5, 
                "aliases": [
                    "alpha only"
                ]
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 25
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 11
            }, 
            "rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "rotation_center", 
                "help": "UV coordinate around which to rotate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Rotation Center", 
                "moonray_name": "rotation_center", 
                "order": 14, 
                "aliases": [
                    "rotation center"
                ]
            }, 
            "gamma_adjust": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma_adjust", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma Adjust", 
                "moonray_name": "gamma_adjust", 
                "order": 23, 
                "aliases": [
                    "gamma adjust"
                ]
            }, 
            "wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "wrap_around", 
                "moonray_type": "Bool", 
                "houdini_label": "Wrap Around", 
                "moonray_name": "wrap_around", 
                "order": 0, 
                "aliases": [
                    "wrap around"
                ]
            }, 
            "use_default_color_when_missing": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_default_color_when_missing", 
                "help": "Uses the 'default color' for missing udims and does not report error", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Default Color When Missing", 
                "moonray_name": "use_default_color_when_missing", 
                "order": 2, 
                "aliases": [
                    "use default color when missing"
                ]
            }, 
            "gamma": {
                "default_value": [
                    2
                ], 
                "houdini_name": "gamma", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "on", 
                    "auto"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 10
            }, 
            "udim_files": {
                "default_value": [], 
                "houdini_name": "udim_files", 
                "moonray_type": "StringVector", 
                "houdini_label": "Udim Files", 
                "moonray_name": "udim_files", 
                "order": 16, 
                "aliases": [
                    "udim files"
                ]
            }
        }, 
        "folders_with_parms": {
            "Color Correction": [
                "saturation_enabled", 
                "saturation", 
                "contrast_enabled", 
                "contrast", 
                "gamma_enabled", 
                "gamma_adjust", 
                "gain_offset_enabled", 
                "gain", 
                "offset_adjust", 
                "TMI_control_enabled", 
                "TMI"
            ], 
            "Blur": [
                "mip_bias", 
                "blur", 
                "num_blur_samples"
            ]
        }
    }, 
    "DecayLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "DecayLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "near_end": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "near_end", 
                "help": "distance from light to end of fade in", 
                "moonray_type": "Float", 
                "houdini_label": "Near End", 
                "moonray_name": "near_end", 
                "order": 4, 
                "aliases": [
                    "near end"
                ]
            }, 
            "near_start": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "near_start", 
                "help": "distance from light to start of fade in", 
                "moonray_type": "Float", 
                "houdini_label": "Near Start", 
                "moonray_name": "near_start", 
                "order": 3, 
                "aliases": [
                    "near start"
                ]
            }, 
            "falloff_near": {
                "default_value": [
                    false
                ], 
                "houdini_name": "falloff_near", 
                "help": "does the light fade in?", 
                "moonray_type": "Bool", 
                "houdini_label": "Falloff Near", 
                "moonray_name": "falloff_near", 
                "order": 1, 
                "aliases": [
                    "falloff near"
                ]
            }, 
            "falloff_far": {
                "default_value": [
                    false
                ], 
                "houdini_name": "falloff_far", 
                "help": "does the light fade out?", 
                "moonray_type": "Bool", 
                "houdini_label": "Falloff Far", 
                "moonray_name": "falloff_far", 
                "order": 2, 
                "aliases": [
                    "falloff far"
                ]
            }, 
            "far_end": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "far_end", 
                "help": "distance from light to end of fade out", 
                "moonray_type": "Float", 
                "houdini_label": "Far End", 
                "moonray_name": "far_end", 
                "order": 6, 
                "aliases": [
                    "far end"
                ]
            }, 
            "far_start": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "far_start", 
                "help": "distance from light to start of fade out", 
                "moonray_type": "Float", 
                "houdini_label": "Far Start", 
                "moonray_name": "far_start", 
                "order": 5, 
                "aliases": [
                    "far start"
                ]
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "falloff_near", 
                "falloff_far", 
                "near_start", 
                "near_end", 
                "far_start", 
                "far_end"
            ]
        }
    }, 
    "FloatToRgbMap": {
        "moonray_type": "Map", 
        "moonray_name": "FloatToRgbMap", 
        "folders_sorted": [], 
        "parms": {
            "B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "B", 
                "moonray_type": "Float", 
                "houdini_label": "B", 
                "bindable": true, 
                "moonray_name": "B", 
                "order": 2
            }, 
            "R": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "R", 
                "moonray_type": "Float", 
                "houdini_label": "R", 
                "bindable": true, 
                "moonray_name": "R", 
                "order": 0
            }, 
            "G": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "G", 
                "moonray_type": "Float", 
                "houdini_label": "G", 
                "bindable": true, 
                "moonray_name": "G", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RdlPointGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "RdlPointGeometry", 
        "folders_sorted": [], 
        "parms": {
            "velocity_list_1": {
                "default_value": [], 
                "houdini_name": "velocity_list_1", 
                "help": "Optionally declare second set ofvertex velocities together with second motion step for cubic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 1", 
                "moonray_name": "velocity_list_1", 
                "order": 24
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "velocity_list_0": {
                "default_value": [], 
                "houdini_name": "velocity_list_0", 
                "help": "Optionally declare vertex velocities instead of a second motion step'", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 0", 
                "moonray_name": "velocity_list_0", 
                "order": 23, 
                "aliases": [
                    "velocity_list", 
                    "velocity list"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "radius_list": {
                "default_value": [], 
                "houdini_name": "radius_list", 
                "help": "Stores all radii", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Radius List", 
                "moonray_name": "radius_list", 
                "order": 26, 
                "aliases": [
                    "radius list"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "accleration_list": {
                "default_value": [], 
                "houdini_name": "accleration_list", 
                "help": "Optionally declare vertex accelerations for quadratic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Accleration List", 
                "moonray_name": "accleration_list", 
                "order": 25
            }, 
            "use_rotation_motion_blur": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_rotation_motion_blur", 
                "help": "if \"xform\" is time varying and motion blur is turned on, Turning on this toggle can generate better rotation trail. Known limitation: turning on this toggle will disable adaptive tessellation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Rotation Motion Blur", 
                "moonray_name": "use_rotation_motion_blur", 
                "order": 31, 
                "aliases": [
                    "use_rotation_motion_blur"
                ]
            }, 
            "part_list": {
                "default_value": [], 
                "houdini_name": "part_list", 
                "help": "Ordered list of part names, used in conjunction with 'part_indices' to assign per-part materials", 
                "moonray_type": "StringVector", 
                "houdini_label": "Part List", 
                "moonray_name": "part_list", 
                "order": 27, 
                "aliases": [
                    "part list"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "primitive_attribute_frame": {
                "default_value": [
                    2
                ], 
                "houdini_name": "primitive_attribute_frame", 
                "help": "Which frame(s) do we take the primitive attributes from?\n\tO : first motion step\n\t1 : second motion step\n\t2 : both motion steps", 
                "moonray_type": "Int", 
                "menu": [
                    "first motion step", 
                    "second motion step", 
                    "both motion steps"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Primitive Attribute Frame", 
                "moonray_name": "primitive_attribute_frame", 
                "order": 34
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "part_indices": {
                "default_value": [], 
                "houdini_name": "part_indices", 
                "help": "Ordered list of part indices. ", 
                "moonray_type": "IntVector", 
                "houdini_label": "Part Indices", 
                "moonray_name": "part_indices", 
                "order": 28, 
                "aliases": [
                    "part indices"
                ]
            }, 
            "curved_motion_blur_sample_count": {
                "default_value": [
                    10
                ], 
                "houdini_name": "curved_motion_blur_sample_count", 
                "help": "Number of time samples generated along each curve when using curved motion blur", 
                "moonray_type": "Int", 
                "houdini_label": "Curved Motion Blur Sample Count", 
                "moonray_name": "curved_motion_blur_sample_count", 
                "order": 33, 
                "aliases": [
                    "curved motion blur sample count"
                ]
            }, 
            "vertex_list_1": {
                "default_value": [], 
                "houdini_name": "vertex_list_1", 
                "help": "If the points are in motion, the second motion step is stored in this attribute", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 1", 
                "moonray_name": "vertex_list_1", 
                "order": 22, 
                "aliases": [
                    "vertex_list_mb", 
                    "vertex list mb"
                ]
            }, 
            "vertex_list_0": {
                "default_value": [], 
                "houdini_name": "vertex_list_0", 
                "help": "Stores all vertices used by the points at motion step 0", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 0", 
                "moonray_name": "vertex_list_0", 
                "order": 21, 
                "aliases": [
                    "vertex_list", 
                    "vertex list"
                ]
            }, 
            "velocity_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "velocity_scale", 
                "help": "Adjust magnitude of velocity-based motion blur", 
                "moonray_type": "Float", 
                "houdini_label": "Velocity Scale", 
                "moonray_name": "velocity_scale", 
                "order": 29, 
                "aliases": [
                    "velocity scale"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "Vector of UserData.Each key/value pair will be added as a primitive attribute of the points.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "moonray_name": "primitive_attributes", 
                "order": 30, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "motion_blur_type": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "motion_blur_type", 
                "help": "Motion blur type for PolygonMesh/Points/Curves in alembic file.\n\"static\" will treat the mesh as static.\n\"velocity\" will blur using the supplied vertex positions and velocities.\n\"frame delta\" will interpolate between the two supplied vertex positions.\n\"acceleration\" will blur using the supplied vertex positions, velocities and accelerations.\n\"hermite\" will use supplied pair of positions and pair of velocities to interpolate along a cubic Hermite curve.\n\"best\" will use choose the method which provides the highest quality given the available data.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "best", 
                    "static", 
                    "velocity", 
                    "frame delta", 
                    "acceleration", 
                    "hermite"
                ], 
                "menu_values": [
                    "-1", 
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Motion Blur Type", 
                "moonray_name": "motion_blur_type", 
                "order": 32, 
                "aliases": [
                    "motion blur type"
                ]
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "LightSet": {
        "moonray_type": "LightSet", 
        "moonray_name": "LightSet", 
        "folders_sorted": [], 
        "parms": {
            "lights": {
                "default_value": [], 
                "houdini_name": "lights", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Lights", 
                "interface": "Light", 
                "moonray_name": "lights", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "MeshLight": {
        "moonray_type": "Light", 
        "moonray_name": "MeshLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 41
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 40
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "parts": {
                "default_value": [], 
                "houdini_name": "parts", 
                "help": "The parts list to use. If empty, all parts are used.", 
                "moonray_type": "StringVector", 
                "houdini_label": "Parts", 
                "moonray_name": "parts", 
                "order": 37
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 39
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "geometry": {
                "default_value": [], 
                "houdini_name": "geometry", 
                "help": "The SceneObject holding the mesh data to use as the MeshLight's surface.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Geometry", 
                "interface": "Geometry", 
                "moonray_name": "geometry", 
                "order": 36
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "map_shader": {
                "default_value": [], 
                "houdini_name": "map_shader", 
                "help": "A Map shader to sample for radiance values.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Map Shader", 
                "interface": "Map", 
                "moonray_name": "map_shader", 
                "order": 38
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "geometry", 
                "parts", 
                "map_shader", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "CookieLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "CookieLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "blur_near_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_near_distance", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Near Distance", 
                "moonray_name": "blur_near_distance", 
                "order": 8
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "projector_film_width_aperture": {
                "default_value": [
                    24.0
                ], 
                "houdini_name": "projector_film_width_aperture", 
                "help": "Size of the camera image plane", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Film Width Aperture", 
                "moonray_name": "projector_film_width_aperture", 
                "order": 5
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "If a projector is specified, it overrides the node_xform and projector_* attributes", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Camera", 
                "moonray_name": "projector", 
                "order": 1
            }, 
            "projector_focal": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "projector_focal", 
                "help": "Focal length of the lens when using perspective projection", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Focal", 
                "moonray_name": "projector_focal", 
                "order": 4
            }, 
            "blur_far_distance": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "blur_far_distance", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Far Distance", 
                "moonray_name": "blur_far_distance", 
                "order": 10
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Inverts the map", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 17
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "Controls how much of the cookie is added to the light", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 16
            }, 
            "blur_near_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_near_value", 
                "help": "Blur filter radius (in texture UV space) at the near distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Near Value", 
                "moonray_name": "blur_near_value", 
                "order": 11
            }, 
            "texture_map": {
                "default_value": [], 
                "houdini_name": "texture_map", 
                "help": "Moonray map. Any Moonray map generator, checkerboard, noise, image map.  You may also add any of the map modifiers, color correct for example.  The default is an image map.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Texture Map", 
                "interface": "Map", 
                "moonray_name": "texture_map", 
                "order": 7
            }, 
            "blur_far_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_far_value", 
                "help": "Blur filter radius (in texture UV space) at the far distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Far Value", 
                "moonray_name": "blur_far_value", 
                "order": 13
            }, 
            "blur_midpoint": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "blur_midpoint", 
                "help": "Distance from cookie filter", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Midpoint", 
                "moonray_name": "blur_midpoint", 
                "order": 9
            }, 
            "outside_projection": {
                "default_value": [
                    0
                ], 
                "houdini_name": "outside_projection", 
                "help": "What happens outside the frustum of the projection camera.  Black (default), White, or Default (This uses the mode set on the Moonray map shader)", 
                "moonray_type": "Int", 
                "menu": [
                    "black", 
                    "white", 
                    "default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Outside Projection", 
                "moonray_name": "outside_projection", 
                "order": 15
            }, 
            "projector_pixel_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "projector_pixel_aspect_ratio", 
                "help": "Aspect ratio of the projection", 
                "moonray_type": "Float", 
                "houdini_label": "Projector Pixel Aspect Ratio", 
                "moonray_name": "projector_pixel_aspect_ratio", 
                "order": 6
            }, 
            "projector_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projector_type", 
                "help": "Perspective or orthographic projection", 
                "moonray_type": "Int", 
                "menu": [
                    "perspective", 
                    "orthographic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Projector Type", 
                "moonray_name": "projector_type", 
                "order": 3
            }, 
            "blur_mid_value": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "blur_mid_value", 
                "help": "Blur filter radius (in texture UV space) at the mid distance", 
                "moonray_type": "Float", 
                "houdini_label": "Blur Mid Value", 
                "moonray_name": "blur_mid_value", 
                "order": 12
            }, 
            "blur_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blur_type", 
                "help": "Gaussian or circular blur", 
                "moonray_type": "Int", 
                "menu": [
                    "gaussian", 
                    "circular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Blur Type", 
                "moonray_name": "blur_type", 
                "order": 14
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "projector", 
                "texture_map", 
                "blur_near_distance", 
                "blur_midpoint", 
                "blur_far_distance", 
                "blur_near_value", 
                "blur_mid_value", 
                "blur_far_value", 
                "blur_type", 
                "outside_projection", 
                "density", 
                "invert"
            ]
        }
    }, 
    "DiscretizeDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "DiscretizeDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to discretize", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 2
            }, 
            "num_bins": {
                "default_value": [
                    8
                ], 
                "houdini_name": "num_bins", 
                "help": "Number of discrete color bins", 
                "moonray_type": "Int", 
                "houdini_label": "Num Bins", 
                "moonray_name": "num_bins", 
                "order": 1
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 4
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "OpenVdbMap_v2": {
        "moonray_type": "Map", 
        "moonray_name": "OpenVdbMap_v2", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "default_value": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "default_value", 
                "help": "A default value to use when A) the .vdb file is not found, B) the requested grid is not found, C) the grid is unspecified, but no grid is found", 
                "moonray_type": "Rgb", 
                "houdini_label": "Default Value", 
                "moonray_name": "default_value", 
                "order": 7
            }, 
            "show_warnings": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_warnings", 
                "help": "Enables a warning message when A) the .vdb file is not found, B) the requested grid is not found, C) the grid is unspecified, but no grid is found", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Warnings", 
                "moonray_name": "show_warnings", 
                "order": 8
            }, 
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "help": "Which coordinate source to use for the texture lookup", 
                "moonray_type": "Int", 
                "menu": [
                    "position", 
                    "reference position", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 4
            }, 
            "show_active_field": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_active_field", 
                "help": "When enabled active/inactive field locations will be white/black, respectively", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Active Field", 
                "moonray_name": "show_active_field", 
                "order": 9
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "help": "The world-space coordinate to use when 'texture coordinates' is set to 'input texture coordinates'", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 5
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 1
            }, 
            "grid_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "grid_name", 
                "help": "The name of the grid within the .vdb file from which to sample (hint: use openvdb_print to see contents of .vdb file). If no grid is specified, the first grid found in the .vdb will be used.  In cases where there are multiple grids with the same name, the grid name can be indexed (eg. density[1])", 
                "moonray_type": "String", 
                "houdini_label": "Grid Name", 
                "moonray_name": "grid_name", 
                "order": 3
            }, 
            "vdb_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "vdb_source", 
                "help": "Where to look for the vdb filename.  Choose 'from texture' to specify a .vdb filename directly via the 'texture' attribute.  Choose 'from OpenVdbGeometry' to use the .vdb filename and transform from an OpenVdbGeometry object in the scene using the 'openvdb geometry' attribute", 
                "moonray_type": "Int", 
                "menu": [
                    "from texture", 
                    "from OpenVdbGeometry"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Vdb Source", 
                "moonray_name": "vdb_source", 
                "order": 0
            }, 
            "openvdb_geometry": {
                "default_value": [], 
                "houdini_name": "openvdb_geometry", 
                "help": "The OpenVdbGeometry object(s) from which to retrieve the .vdb filename and transform when 'vdb source' is set to 'from OpenVdbGeometry'", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Openvdb Geometry", 
                "interface": "Geometry", 
                "moonray_name": "openvdb_geometry", 
                "order": 2
            }, 
            "interpolation": {
                "default_value": [
                    2
                ], 
                "houdini_name": "interpolation", 
                "help": "The type of interpolation to use when sampling the vdb", 
                "moonray_type": "Int", 
                "menu": [
                    "point", 
                    "box", 
                    "quadratic"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Interpolation", 
                "moonray_name": "interpolation", 
                "order": 6
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "show_active_field"
            ]
        }
    }, 
    "HalftoneDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "HalftoneDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 6
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 5
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Whether the dots should be black (normal) or white/color (inverted)", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 3
            }, 
            "grayscale": {
                "default_value": [
                    false
                ], 
                "houdini_name": "grayscale", 
                "help": "Ignore color information, render as grayscale", 
                "moonray_type": "Bool", 
                "houdini_label": "Grayscale", 
                "moonray_name": "grayscale", 
                "order": 4
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 7
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to be represented in halftone", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }, 
            "size": {
                "default_value": [
                    5
                ], 
                "houdini_name": "size", 
                "help": "The size in pixels of the halftone dots", 
                "moonray_type": "Int", 
                "houdini_label": "Size", 
                "moonray_name": "size", 
                "order": 1
            }, 
            "filter_width": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "filter_width", 
                "help": "The width in pixels of the antialiasing", 
                "moonray_type": "Float", 
                "houdini_label": "Filter Width", 
                "moonray_name": "filter_width", 
                "order": 2
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "MacroFlakeMaterial": {
        "moonray_type": "Material", 
        "moonray_name": "MacroFlakeMaterial", 
        "folders_sorted": [
            "Specular", 
            "Normal"
        ], 
        "parms": {
            "specular_background_mode": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_background_mode", 
                "help": "Whether to block the underlying specular lobe where the mask is applied", 
                "moonray_type": "Int", 
                "menu": [
                    "block", 
                    "add"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Specular Background Mode", 
                "moonray_name": "specular_background_mode", 
                "order": 11
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "background_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "background_material", 
                "help": "background material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Background Material", 
                "interface": "Material", 
                "moonray_name": "background_material", 
                "order": 6
            }, 
            "mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mask", 
                "help": "foreground (metal) material weight", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "mask", 
                "order": 7
            }, 
            "fuzz_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fuzz_mode", 
                "help": "Whether to block the fuzz lobe where the mask is applied", 
                "moonray_type": "Int", 
                "menu": [
                    "block", 
                    "add"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fuzz Mode", 
                "moonray_name": "fuzz_mode", 
                "order": 9
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 5
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 13, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 12, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "metallic_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_color", 
                "help": "the overall reflection color, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Color", 
                "bindable": true, 
                "moonray_name": "metallic_color", 
                "order": 3
            }, 
            "metallic_edge_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_edge_color", 
                "help": "the reflection color at grazing angles, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Edge Color", 
                "bindable": true, 
                "moonray_name": "metallic_edge_color", 
                "order": 4
            }, 
            "diffuse_mode": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_mode", 
                "help": "Whether to block the diffuse lobe where the mask is applied", 
                "moonray_type": "Int", 
                "menu": [
                    "block", 
                    "add"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Diffuse Mode", 
                "moonray_name": "diffuse_mode", 
                "order": 10
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "is_additive": {
                "default_value": [
                    false
                ], 
                "houdini_name": "is_additive", 
                "help": "When true, lobe does not block background material", 
                "moonray_type": "Bool", 
                "houdini_label": "Is Additive", 
                "moonray_name": "is_additive", 
                "order": 8
            }
        }, 
        "folders_with_parms": {
            "Specular": [
                "metallic_color", 
                "metallic_edge_color", 
                "roughness"
            ], 
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ]
        }
    }, 
    "IntensityLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "IntensityLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "Multiply the light radiance by this RGB color value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 3
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "Multiply the light radiance by this intensity value", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 1
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Invert the light radiance by 1/radiance", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 4
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "Multiply the light radiance by exposure = pow(2, exposure)", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 2
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "intensity", 
                "exposure", 
                "color", 
                "invert"
            ]
        }
    }, 
    "ColorCorrectSaturationMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectSaturationMap", 
        "folders_sorted": [], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "desaturates the input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "bindable": true, 
                "moonray_name": "saturation", 
                "order": 3
            }, 
            "saturation_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_r", 
                "help": "desaturates the red channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation R", 
                "bindable": true, 
                "moonray_name": "saturation_r", 
                "order": 5
            }, 
            "use_per_channel_saturation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_saturation", 
                "help": "enables separate RGB controls for saturation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Saturation", 
                "moonray_name": "use_per_channel_saturation", 
                "order": 4
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "saturation_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_b", 
                "help": "desaturates the blue channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation B", 
                "bindable": true, 
                "moonray_name": "saturation_b", 
                "order": 7
            }, 
            "saturation_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_g", 
                "help": "desaturates the green channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation G", 
                "bindable": true, 
                "moonray_name": "saturation_g", 
                "order": 6
            }
        }, 
        "folders_with_parms": {}
    }, 
    "PerspectiveCamera": {
        "moonray_type": "Camera", 
        "moonray_name": "PerspectiveCamera", 
        "folders_sorted": [
            "Frustum", 
            "Motion Blur", 
            "Render Masks", 
            "Medium", 
            "Stereo", 
            "Depth of Field"
        ], 
        "parms": {
            "vertical_film_offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "vertical_film_offset", 
                "help": "Vertical offset of the frustum.", 
                "moonray_type": "Float", 
                "houdini_label": "Vertical Film Offset", 
                "moonray_name": "vertical_film_offset", 
                "order": 14, 
                "aliases": [
                    "vertical film offset"
                ]
            }, 
            "pixel_sample_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "pixel_sample_map", 
                "help": "Map indicating the number of pixel samples that should be used per pixel (in uniform sampling mode). This is a multiplier on the global pixel sample count specified in SceneVariables. If the provided map has incompatible dimensions, it will be resized.", 
                "moonray_type": "String", 
                "houdini_label": "Pixel Sample Map", 
                "moonray_name": "pixel_sample_map", 
                "order": 6, 
                "aliases": [
                    "pixel sample map"
                ]
            }, 
            "dof_aperture": {
                "default_value": [
                    8.0
                ], 
                "houdini_name": "dof_aperture", 
                "help": "Depth of field focus distance", 
                "moonray_type": "Float", 
                "houdini_label": "Dof Aperture", 
                "moonray_name": "dof_aperture", 
                "order": 18, 
                "aliases": [
                    "dof aperture"
                ]
            }, 
            "bokeh_weight_location": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_weight_location", 
                "help": "Distance from the origin of Bokeh shape", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Weight Location", 
                "moonray_name": "bokeh_weight_location", 
                "order": 24, 
                "aliases": [
                    "bokeh weight location"
                ]
            }, 
            "horizontal_film_offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "horizontal_film_offset", 
                "help": "Horizontal offset of the frustum.", 
                "moonray_type": "Float", 
                "houdini_label": "Horizontal Film Offset", 
                "moonray_name": "horizontal_film_offset", 
                "order": 13, 
                "aliases": [
                    "horizontal film offset"
                ]
            }, 
            "film_width_aperture": {
                "default_value": [
                    24.0
                ], 
                "houdini_name": "film_width_aperture", 
                "help": "Scale the aperture of the camera (i.e., the frustum) by this value.", 
                "moonray_type": "Float", 
                "houdini_label": "Film Width Aperture", 
                "moonray_name": "film_width_aperture", 
                "order": 15, 
                "aliases": [
                    "film width aperture"
                ]
            }, 
            "medium_material": {
                "default_value": [], 
                "houdini_name": "medium_material", 
                "help": "The material the camera is 'inside'. If no medium_geometry is specified, ALL rays will have this initial index of refraction applied. ", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Material", 
                "moonray_name": "medium_material", 
                "order": 7, 
                "aliases": [
                    "medium material"
                ]
            }, 
            "stereo_convergence_distance": {
                "default_value": [
                    100.0
                ], 
                "houdini_name": "stereo_convergence_distance", 
                "help": "Distance at which all the stereo views converge.", 
                "moonray_type": "Float", 
                "houdini_label": "Stereo Convergence Distance", 
                "moonray_name": "stereo_convergence_distance", 
                "order": 12, 
                "aliases": [
                    "stereo convergence distance"
                ]
            }, 
            "mb_shutter_open": {
                "default_value": [
                    -0.25
                ], 
                "houdini_name": "mb_shutter_open", 
                "help": "Frame at which the shutter opens, i.e., the beginning of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Open", 
                "moonray_name": "mb_shutter_open", 
                "order": 3, 
                "aliases": [
                    "mb shutter open"
                ]
            }, 
            "bokeh_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_angle", 
                "help": "Angle of iris rotation", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Angle", 
                "moonray_name": "bokeh_angle", 
                "order": 23, 
                "aliases": [
                    "bokeh angle"
                ]
            }, 
            "pixel_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "pixel_aspect_ratio", 
                "help": "ratio of pixel size y / x", 
                "moonray_type": "Float", 
                "houdini_label": "Pixel Aspect Ratio", 
                "moonray_name": "pixel_aspect_ratio", 
                "order": 16, 
                "aliases": [
                    "pixel aspect ratio"
                ]
            }, 
            "bokeh": {
                "default_value": [
                    false
                ], 
                "houdini_name": "bokeh", 
                "help": "Enable Bokeh. Requires DOF to be enabled.", 
                "moonray_type": "Bool", 
                "houdini_label": "Bokeh", 
                "moonray_name": "bokeh", 
                "order": 20
            }, 
            "stereo_interocular_distance": {
                "default_value": [
                    6.3
                ], 
                "houdini_name": "stereo_interocular_distance", 
                "help": "Distance between the left and right 'eyes'", 
                "moonray_type": "Float", 
                "houdini_label": "Stereo Interocular Distance", 
                "moonray_name": "stereo_interocular_distance", 
                "order": 11, 
                "aliases": [
                    "stereo interocular distance"
                ]
            }, 
            "dof_focus_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "dof_focus_distance", 
                "moonray_type": "Float", 
                "houdini_label": "Dof Focus Distance", 
                "moonray_name": "dof_focus_distance", 
                "order": 19, 
                "aliases": [
                    "dof focus distance"
                ]
            }, 
            "bokeh_sides": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bokeh_sides", 
                "help": "Number of sides of the iris. Specifying less than 3 sides will default to a disk.", 
                "moonray_type": "Int", 
                "houdini_label": "Bokeh Sides", 
                "moonray_name": "bokeh_sides", 
                "order": 21, 
                "aliases": [
                    "bokeh sides"
                ]
            }, 
            "far": {
                "default_value": [
                    10000.0
                ], 
                "houdini_name": "far", 
                "help": "Far clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Far", 
                "moonray_name": "far", 
                "order": 2
            }, 
            "mb_shutter_close": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "mb_shutter_close", 
                "help": "Frame at which the shutter closes, i.e., the end of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Close", 
                "moonray_name": "mb_shutter_close", 
                "order": 4, 
                "aliases": [
                    "mb shutter close"
                ]
            }, 
            "bokeh_image": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "bokeh_image", 
                "help": "Path to image file to be used for the iris", 
                "moonray_type": "String", 
                "houdini_label": "Bokeh Image", 
                "moonray_name": "bokeh_image", 
                "order": 22, 
                "aliases": [
                    "bokeh image"
                ]
            }, 
            "focal": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "focal", 
                "help": "Focal length", 
                "moonray_type": "Float", 
                "houdini_label": "Focal", 
                "moonray_name": "focal", 
                "order": 9
            }, 
            "medium_geometry": {
                "default_value": [], 
                "houdini_name": "medium_geometry", 
                "help": "The geometry the camera is 'inside' to which you'd like the medium_material applied. (The use case for this is typically partially-submerged cameras)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Geometry", 
                "moonray_name": "medium_geometry", 
                "order": 8, 
                "aliases": [
                    "medium geometry"
                ]
            }, 
            "stereo_view": {
                "default_value": [
                    0
                ], 
                "houdini_name": "stereo_view", 
                "help": "Render from the center, left, or right stereo view.", 
                "moonray_type": "Int", 
                "menu": [
                    "center view", 
                    "left view", 
                    "right view"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Stereo View", 
                "moonray_name": "stereo_view", 
                "order": 10, 
                "aliases": [
                    "stereo view"
                ]
            }, 
            "dof": {
                "default_value": [
                    false
                ], 
                "houdini_name": "dof", 
                "help": "Whether to enable depth of field", 
                "moonray_type": "Bool", 
                "houdini_label": "Dof", 
                "moonray_name": "dof", 
                "order": 17
            }, 
            "near": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "near", 
                "help": "Near clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Near", 
                "moonray_name": "near", 
                "order": 1
            }, 
            "mb_shutter_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mb_shutter_bias", 
                "help": "Biases the motion blur samples toward one end of the shutter interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Bias", 
                "moonray_name": "mb_shutter_bias", 
                "order": 5, 
                "aliases": [
                    "mb shutter bias"
                ]
            }, 
            "bokeh_weight_strength": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bokeh_weight_strength", 
                "help": "Controls the strength of weights as samples approach the weight location", 
                "moonray_type": "Float", 
                "houdini_label": "Bokeh Weight Strength", 
                "moonray_name": "bokeh_weight_strength", 
                "order": 25, 
                "aliases": [
                    "bokeh weight strength"
                ]
            }
        }, 
        "folders_with_parms": {
            "Stereo": [
                "stereo_view", 
                "stereo_interocular_distance", 
                "stereo_convergence_distance"
            ], 
            "Medium": [
                "medium_material", 
                "medium_geometry"
            ], 
            "Frustum": [
                "near", 
                "far", 
                "focal", 
                "film_width_aperture", 
                "horizontal_film_offset", 
                "vertical_film_offset", 
                "pixel_aspect_ratio"
            ], 
            "Motion Blur": [
                "mb_shutter_open", 
                "mb_shutter_close", 
                "mb_shutter_bias"
            ], 
            "Render Masks": [
                "pixel_sample_map"
            ], 
            "Depth of Field": [
                "dof", 
                "dof_aperture", 
                "dof_focus_distance", 
                "bokeh", 
                "bokeh_sides", 
                "bokeh_image", 
                "bokeh_angle", 
                "bokeh_weight_location", 
                "bokeh_weight_strength"
            ]
        }
    }, 
    "LightFilterSet": {
        "moonray_type": "LightFilterSet", 
        "moonray_name": "LightFilterSet", 
        "folders_sorted": [], 
        "parms": {
            "lightfilters": {
                "default_value": [], 
                "houdini_name": "lightfilters", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Lightfilters", 
                "interface": "LightFilter", 
                "moonray_name": "lightfilters", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RampDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "RampDisplayFilter", 
        "folders_sorted": [
            "Ramp Knot", 
            "Ramp properties", 
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 6
            }, 
            "positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "positions", 
                "help": "List of ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "positions", 
                "order": 0, 
                "ramp_parm_name": "ramp"
            }, 
            "interpolations": {
                "default_value": [
                    0, 
                    0, 
                    0, 
                    0
                ], 
                "houdini_name": "interpolations", 
                "help": "List of ramp interpolations.", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "interpolations", 
                "order": 3, 
                "ramp_parm_name": "ramp"
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 5
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 7
            }, 
            "colors": {
                "default_value": [
                    [
                        0.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        0.25, 
                        0.25, 
                        0.25
                    ], 
                    [
                        0.75, 
                        0.75, 
                        0.75
                    ], 
                    [
                        1.0, 
                        1.0, 
                        1.0
                    ]
                ], 
                "houdini_name": "colors", 
                "help": "List of ramp colors", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "colors", 
                "order": 1, 
                "ramp_parm_name": "ramp"
            }, 
            "ramp_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "ramp_type", 
                "help": "Type of ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "v_ramp", 
                    "u_ramp", 
                    "diagonal_ramp", 
                    "radial_ramp", 
                    "circular_ramp", 
                    "box_ramp", 
                    "uxv_ramp", 
                    "four_corner_ramp", 
                    "input_ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8"
                ], 
                "houdini_label": "Ramp Type", 
                "moonray_name": "ramp_type", 
                "order": 2
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput fed into the ramp", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 4
            }
        }, 
        "folders_with_parms": {
            "Ramp properties": [
                "ramp_type", 
                "input"
            ], 
            "Ramp Knot": [
                "ramp"
            ], 
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "OverDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "OverDisplayFilter", 
        "folders_sorted": [], 
        "parms": {
            "input_top": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_top", 
                "help": "RenderOutput on top", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Top", 
                "interface": "RenderOutput", 
                "moonray_name": "input_top", 
                "order": 0
            }, 
            "invert_alpha": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_alpha", 
                "help": "Invert value of alpha", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Alpha", 
                "moonray_name": "invert_alpha", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend between input_top and input_bottom, using alpha as a mask.", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 4
            }, 
            "input_bottom": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_bottom", 
                "help": "RenderOutput on bottom", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Bottom", 
                "interface": "RenderOutput", 
                "moonray_name": "input_bottom", 
                "order": 1
            }, 
            "alpha": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "alpha", 
                "help": "Alpha for over operation", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Alpha", 
                "interface": "RenderOutput", 
                "moonray_name": "alpha", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "UsdInstanceGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "UsdInstanceGeometry", 
        "folders_sorted": [], 
        "parms": {
            "disable_indices": {
                "default_value": [], 
                "houdini_name": "disable_indices", 
                "help": "A list of index values to hide / disable. For example, with 4 instances you can supply a list of 0, 2 to disable those instances. If an index in this list is out of range, it is ignored.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Disable Indices", 
                "moonray_name": "disable_indices", 
                "order": 27
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "point_instancer_path": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "point_instancer_path", 
                "help": "The point instancer to load from the USD Stage\n", 
                "moonray_type": "String", 
                "houdini_label": "Point Instancer Path", 
                "moonray_name": "point_instancer_path", 
                "order": 22
            }, 
            "use_reference_xforms": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_reference_xforms", 
                "help": "Transform the reference (prototype) geometry by it's node_xform parameter before applying the instance transform", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Xforms", 
                "moonray_name": "use_reference_xforms", 
                "order": 28
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "use_rotation_motion_blur": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_rotation_motion_blur", 
                "help": "if \"xform\" is time varying and motion blur is turned on, Turning on this toggle can generate better rotation trail. Known limitation: turning on this toggle will disable adaptive tessellation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Rotation Motion Blur", 
                "moonray_name": "use_rotation_motion_blur", 
                "order": 31, 
                "aliases": [
                    "use_rotation_motion_blur"
                ]
            }, 
            "use_stage_cache": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_stage_cache", 
                "help": "Load the entire stage and use StageCache to share it among all UsdInstanceGeometry objects.\nIf this is false, load a stage masked to the prim path just for this UsdInstanceGeometry.\nFor large stages with thousands of unique assets, it is faster to enable the stage cache\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Stage Cache", 
                "moonray_name": "use_stage_cache", 
                "order": 23, 
                "aliases": [
                    "use stage cache"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "use_evaluation_frame": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_evaluation_frame", 
                "help": "uses \"evaluation frame\" instead of SceneVariables frame\n", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Evaluation Frame", 
                "moonray_name": "use_evaluation_frame", 
                "order": 24, 
                "aliases": [
                    "use evaluation frame"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "primitive_attribute_frame": {
                "default_value": [
                    2
                ], 
                "houdini_name": "primitive_attribute_frame", 
                "help": "Which frame(s) do we take the primitive attributes from?\n\tO : first motion step\n\t1 : second motion step\n\t2 : both motion steps", 
                "moonray_type": "Int", 
                "menu": [
                    "first motion step", 
                    "second motion step", 
                    "both motion steps"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Primitive Attribute Frame", 
                "moonray_name": "primitive_attribute_frame", 
                "order": 34
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "motion_blur_type": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "motion_blur_type", 
                "help": "Motion blur type for PolygonMesh/Points/Curves in alembic file.\n\"static\" will treat the mesh as static.\n\"velocity\" will blur using the supplied vertex positions and velocities.\n\"frame delta\" will interpolate between the two supplied vertex positions.\n\"acceleration\" will blur using the supplied vertex positions, velocities and accelerations.\n\"hermite\" will use supplied pair of positions and pair of velocities to interpolate along a cubic Hermite curve.\n\"best\" will use choose the method which provides the highest quality given the available data.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "best", 
                    "static", 
                    "velocity", 
                    "frame delta", 
                    "acceleration", 
                    "hermite"
                ], 
                "menu_values": [
                    "-1", 
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Motion Blur Type", 
                "moonray_name": "motion_blur_type", 
                "order": 32, 
                "aliases": [
                    "motion blur type"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "curved_motion_blur_sample_count": {
                "default_value": [
                    10
                ], 
                "houdini_name": "curved_motion_blur_sample_count", 
                "help": "Number of time samples generated along each curve when using curved motion blur", 
                "moonray_type": "Int", 
                "houdini_label": "Curved Motion Blur Sample Count", 
                "moonray_name": "curved_motion_blur_sample_count", 
                "order": 33, 
                "aliases": [
                    "curved motion blur sample count"
                ]
            }, 
            "evaluation_frame": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "evaluation_frame", 
                "help": "evaluate geometry at specified frame instead of SceneVariables frame\n", 
                "moonray_type": "Float", 
                "houdini_label": "Evaluation Frame", 
                "moonray_name": "evaluation_frame", 
                "order": 25, 
                "aliases": [
                    "evaluation frame"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "stage": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "stage", 
                "help": "USD Stage to load\n", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Stage", 
                "moonray_name": "stage", 
                "order": 21
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "A list of UserData to specify arbitrary primitive attributes(For example, color or roughness multiplier) per -instance", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "interface": "UserData", 
                "moonray_name": "primitive_attributes", 
                "order": 30, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "use_reference_attributes": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_reference_attributes", 
                "help": "Use the geometry attributes of the reference (prototype) instead of the ones on the InstanceGeometry.   Currently only works for shadow_ray_epsilon", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Attributes", 
                "moonray_name": "use_reference_attributes", 
                "order": 29
            }, 
            "instance_level": {
                "default_value": [
                    0
                ], 
                "houdini_name": "instance_level", 
                "help": "Level of this instance.  This level can be referenced in TransformSpaceMap to allow for transforming data to/from the local space of each instance this instancer produces.", 
                "moonray_type": "Int", 
                "menu": [
                    "instance level 0", 
                    "instance level 1", 
                    "instance level 2", 
                    "instance level 3", 
                    "instance level 4"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Instance Level", 
                "moonray_name": "instance_level", 
                "order": 26
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ToonDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ToonDisplayFilter", 
        "folders_sorted": [], 
        "parms": {
            "input_albedo": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_albedo", 
                "help": "RenderOutput that represents diffuse albedo material aov", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Albedo", 
                "interface": "RenderOutput", 
                "moonray_name": "input_albedo", 
                "order": 2
            }, 
            "ink_normal_scale": {
                "default_value": [
                    0.01
                ], 
                "houdini_name": "ink_normal_scale", 
                "help": "Increase for a more pronounced normal-based ink outline", 
                "moonray_type": "Float", 
                "houdini_label": "Ink Normal Scale", 
                "moonray_name": "ink_normal_scale", 
                "order": 9
            }, 
            "ink_normal_threshold": {
                "default_value": [
                    0.01
                ], 
                "houdini_name": "ink_normal_threshold", 
                "help": "The threshold for the normal-based ink outline", 
                "moonray_type": "Float", 
                "houdini_label": "Ink Normal Threshold", 
                "moonray_name": "ink_normal_threshold", 
                "order": 8
            }, 
            "ink_depth_threshold": {
                "default_value": [
                    0.01
                ], 
                "houdini_name": "ink_depth_threshold", 
                "help": "The threshold for the depth-based ink outline", 
                "moonray_type": "Float", 
                "houdini_label": "Ink Depth Threshold", 
                "moonray_name": "ink_depth_threshold", 
                "order": 7
            }, 
            "edge_detector": {
                "default_value": [
                    0
                ], 
                "houdini_name": "edge_detector", 
                "help": "Type of edge detector to use", 
                "moonray_type": "Int", 
                "menu": [
                    "None", 
                    "Sobel", 
                    "Laplacian", 
                    "Laplacian of Gaussian"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Edge Detector", 
                "moonray_name": "edge_detector", 
                "order": 10
            }, 
            "input_diffuse": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_diffuse", 
                "help": "RenderOutput that represents diffuse reflection LPE", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Diffuse", 
                "interface": "RenderOutput", 
                "moonray_name": "input_diffuse", 
                "order": 0
            }, 
            "input_glossy": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_glossy", 
                "help": "RenderOutput that represents glossy reflection LPE", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Glossy", 
                "interface": "RenderOutput", 
                "moonray_name": "input_glossy", 
                "order": 1
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "RenderOutput with 'normal' result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "RenderOutput", 
                "moonray_name": "input_normal", 
                "order": 4
            }, 
            "ambient": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "ambient", 
                "help": "Adds an ambient light to the cel shading", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ambient", 
                "moonray_name": "ambient", 
                "order": 6
            }, 
            "num_cels": {
                "default_value": [
                    2
                ], 
                "houdini_name": "num_cels", 
                "help": "Sets number of toon cels in diffuse shading", 
                "moonray_type": "Int", 
                "houdini_label": "Num Cels", 
                "moonray_name": "num_cels", 
                "order": 5
            }, 
            "input_depth": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_depth", 
                "help": "RenderOutput with 'depth' result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Depth", 
                "interface": "RenderOutput", 
                "moonray_name": "input_depth", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "OpenVdbMap": {
        "moonray_type": "Map", 
        "moonray_name": "OpenVdbMap", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "default_value": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "default_value", 
                "help": "A default value to use when A) the .vdb file is not found, B) the requested grid is not found, C) the grid is unspecified, but no grid is found", 
                "moonray_type": "Rgb", 
                "houdini_label": "Default Value", 
                "moonray_name": "default_value", 
                "order": 7
            }, 
            "show_warnings": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_warnings", 
                "help": "Enables a warning message when A) the .vdb file is not found, B) the requested grid is not found, C) the grid is unspecified, but no grid is found", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Warnings", 
                "moonray_name": "show_warnings", 
                "order": 8
            }, 
            "texture_coordinates": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_coordinates", 
                "help": "Which coordinate source to use for the texture lookup", 
                "moonray_type": "Int", 
                "menu": [
                    "position", 
                    "reference position", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Texture Coordinates", 
                "moonray_name": "texture_coordinates", 
                "order": 4
            }, 
            "show_active_field": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_active_field", 
                "help": "When enabled active/inactive field locations will be white/black, respectively", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Active Field", 
                "moonray_name": "show_active_field", 
                "order": 9
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "help": "The world-space coordinate to use when 'texture coordinates' is set to 'input texture coordinates'", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 5
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 1
            }, 
            "grid_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "grid_name", 
                "help": "The name of the grid within the .vdb file from which to sample (hint: use openvdb_print to see contents of .vdb file). If no grid is specified, the first grid found in the .vdb will be used.  In cases where there are multiple grids with the same name, the grid name can be indexed (eg. density[1])", 
                "moonray_type": "String", 
                "houdini_label": "Grid Name", 
                "moonray_name": "grid_name", 
                "order": 3
            }, 
            "vdb_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "vdb_source", 
                "help": "Where to look for the vdb filename.  Choose 'from texture' to specify a .vdb filename directly via the 'texture' attribute.  Choose 'from OpenVdbGeometry' to use the .vdb filename and transform from an OpenVdbGeometry object in the scene using the 'openvdb geometry' attribute", 
                "moonray_type": "Int", 
                "menu": [
                    "from texture", 
                    "from OpenVdbGeometry"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Vdb Source", 
                "moonray_name": "vdb_source", 
                "order": 0
            }, 
            "openvdb_geometry": {
                "default_value": [], 
                "houdini_name": "openvdb_geometry", 
                "help": "The OpenVdbGeometry object from which to retrieve the .vdb filename and transform when 'vdb source' is set to 'from OpenVdbGeometry'", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Openvdb Geometry", 
                "interface": "Geometry", 
                "moonray_name": "openvdb_geometry", 
                "order": 2
            }, 
            "interpolation": {
                "default_value": [
                    2
                ], 
                "houdini_name": "interpolation", 
                "help": "The type of interpolation to use when sampling the vdb", 
                "moonray_type": "Int", 
                "menu": [
                    "point", 
                    "box", 
                    "quadratic"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Interpolation", 
                "moonray_name": "interpolation", 
                "order": 6
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "show_active_field"
            ]
        }
    }, 
    "ColorCorrectNukeMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectNukeMap", 
        "folders_sorted": [], 
        "parms": {
            "gamma_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "gamma_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Gamma Enabled", 
                "moonray_name": "gamma_enabled", 
                "order": 5, 
                "aliases": [
                    "gamma enabled"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 2
            }, 
            "contrast_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contrast_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Contrast Enabled", 
                "moonray_name": "contrast_enabled", 
                "order": 3, 
                "aliases": [
                    "contrast enabled"
                ]
            }, 
            "gain_offset_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "gain_offset_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Gain Offset Enabled", 
                "moonray_name": "gain_offset_enabled", 
                "order": 7, 
                "aliases": [
                    "gain offset enabled"
                ]
            }, 
            "TMI_control_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "TMI_control_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "TMI Control Enabled", 
                "moonray_name": "TMI_control_enabled", 
                "order": 10, 
                "aliases": [
                    "TMI control enabled", 
                    "TMI_control_enabled", 
                    "TME control enabled", 
                    "TME_control_enabled"
                ]
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 6
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 9
            }, 
            "saturation_enabled": {
                "default_value": [
                    false
                ], 
                "houdini_name": "saturation_enabled", 
                "moonray_type": "Bool", 
                "houdini_label": "Saturation Enabled", 
                "moonray_name": "saturation_enabled", 
                "order": 1, 
                "aliases": [
                    "saturation enabled"
                ]
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Vec3f", 
                "houdini_label": "TMI", 
                "moonray_name": "TMI", 
                "order": 11, 
                "aliases": [
                    "TME"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 4
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 8
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DofDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "DofDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 7
            }, 
            "focus_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "focus_distance", 
                "help": "Focus distance", 
                "moonray_type": "Float", 
                "houdini_label": "Focus Distance", 
                "moonray_name": "focus_distance", 
                "order": 5
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 6
            }, 
            "use_camera_attributes": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_camera_attributes", 
                "help": "Read dof attributes from the active scene camera", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Camera Attributes", 
                "moonray_name": "use_camera_attributes", 
                "order": 2
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 8
            }, 
            "depth": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "depth", 
                "help": "The 'depth' RenderOutput to sample z-depth values from", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Depth", 
                "interface": "RenderOutput", 
                "moonray_name": "depth", 
                "order": 1
            }, 
            "focal_length": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "focal_length", 
                "help": "Focal length in millimeters", 
                "moonray_type": "Float", 
                "houdini_label": "Focal Length", 
                "moonray_name": "focal_length", 
                "order": 4
            }, 
            "aperture": {
                "default_value": [
                    8.0
                ], 
                "houdini_name": "aperture", 
                "help": "Aperture in millimeters", 
                "moonray_type": "Float", 
                "houdini_label": "Aperture", 
                "moonray_name": "aperture", 
                "order": 3
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to which to apply depth of field", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "SwitchMaterial": {
        "moonray_type": "Material", 
        "moonray_name": "SwitchMaterial", 
        "folders_sorted": [], 
        "parms": {
            "material32": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material32", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material32", 
                "interface": "Material", 
                "moonray_name": "material32", 
                "order": 36
            }, 
            "material58": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material58", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material58", 
                "interface": "Material", 
                "moonray_name": "material58", 
                "order": 62
            }, 
            "material59": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material59", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material59", 
                "interface": "Material", 
                "moonray_name": "material59", 
                "order": 63
            }, 
            "material56": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material56", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material56", 
                "interface": "Material", 
                "moonray_name": "material56", 
                "order": 60
            }, 
            "material57": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material57", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material57", 
                "interface": "Material", 
                "moonray_name": "material57", 
                "order": 61
            }, 
            "material54": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material54", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material54", 
                "interface": "Material", 
                "moonray_name": "material54", 
                "order": 58
            }, 
            "material33": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material33", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material33", 
                "interface": "Material", 
                "moonray_name": "material33", 
                "order": 37
            }, 
            "material52": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material52", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material52", 
                "interface": "Material", 
                "moonray_name": "material52", 
                "order": 56
            }, 
            "material53": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material53", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material53", 
                "interface": "Material", 
                "moonray_name": "material53", 
                "order": 57
            }, 
            "material50": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material50", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material50", 
                "interface": "Material", 
                "moonray_name": "material50", 
                "order": 54
            }, 
            "material51": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material51", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material51", 
                "interface": "Material", 
                "moonray_name": "material51", 
                "order": 55
            }, 
            "material12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material12", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material12", 
                "interface": "Material", 
                "moonray_name": "material12", 
                "order": 16
            }, 
            "material13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material13", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material13", 
                "interface": "Material", 
                "moonray_name": "material13", 
                "order": 17
            }, 
            "material10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material10", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material10", 
                "interface": "Material", 
                "moonray_name": "material10", 
                "order": 14
            }, 
            "material11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material11", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material11", 
                "interface": "Material", 
                "moonray_name": "material11", 
                "order": 15
            }, 
            "material16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material16", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material16", 
                "interface": "Material", 
                "moonray_name": "material16", 
                "order": 20
            }, 
            "material17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material17", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material17", 
                "interface": "Material", 
                "moonray_name": "material17", 
                "order": 21
            }, 
            "material14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material14", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material14", 
                "interface": "Material", 
                "moonray_name": "material14", 
                "order": 18
            }, 
            "material15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material15", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material15", 
                "interface": "Material", 
                "moonray_name": "material15", 
                "order": 19
            }, 
            "material63": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material63", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material63", 
                "interface": "Material", 
                "moonray_name": "material63", 
                "order": 67
            }, 
            "material18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material18", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material18", 
                "interface": "Material", 
                "moonray_name": "material18", 
                "order": 22
            }, 
            "material19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material19", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material19", 
                "interface": "Material", 
                "moonray_name": "material19", 
                "order": 23
            }, 
            "material38": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material38", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material38", 
                "interface": "Material", 
                "moonray_name": "material38", 
                "order": 42
            }, 
            "material39": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material39", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material39", 
                "interface": "Material", 
                "moonray_name": "material39", 
                "order": 43
            }, 
            "material48": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material48", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material48", 
                "interface": "Material", 
                "moonray_name": "material48", 
                "order": 52
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "material46": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material46", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material46", 
                "interface": "Material", 
                "moonray_name": "material46", 
                "order": 50
            }, 
            "material45": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material45", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material45", 
                "interface": "Material", 
                "moonray_name": "material45", 
                "order": 49
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "material0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material0", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material0", 
                "interface": "Material", 
                "moonray_name": "material0", 
                "order": 4
            }, 
            "material1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material1", 
                "interface": "Material", 
                "moonray_name": "material1", 
                "order": 5
            }, 
            "material2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material2", 
                "interface": "Material", 
                "moonray_name": "material2", 
                "order": 6
            }, 
            "material3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material3", 
                "interface": "Material", 
                "moonray_name": "material3", 
                "order": 7
            }, 
            "material4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material4", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material4", 
                "interface": "Material", 
                "moonray_name": "material4", 
                "order": 8
            }, 
            "material5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material5", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material5", 
                "interface": "Material", 
                "moonray_name": "material5", 
                "order": 9
            }, 
            "material6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material6", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material6", 
                "interface": "Material", 
                "moonray_name": "material6", 
                "order": 10
            }, 
            "material7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material7", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material7", 
                "interface": "Material", 
                "moonray_name": "material7", 
                "order": 11
            }, 
            "material8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material8", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material8", 
                "interface": "Material", 
                "moonray_name": "material8", 
                "order": 12
            }, 
            "material9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material9", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material9", 
                "interface": "Material", 
                "moonray_name": "material9", 
                "order": 13
            }, 
            "material62": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material62", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material62", 
                "interface": "Material", 
                "moonray_name": "material62", 
                "order": 66
            }, 
            "material47": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material47", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material47", 
                "interface": "Material", 
                "moonray_name": "material47", 
                "order": 51
            }, 
            "material55": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material55", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material55", 
                "interface": "Material", 
                "moonray_name": "material55", 
                "order": 59
            }, 
            "material41": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material41", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material41", 
                "interface": "Material", 
                "moonray_name": "material41", 
                "order": 45
            }, 
            "material42": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material42", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material42", 
                "interface": "Material", 
                "moonray_name": "material42", 
                "order": 46
            }, 
            "material29": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material29", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material29", 
                "interface": "Material", 
                "moonray_name": "material29", 
                "order": 33
            }, 
            "material28": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material28", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material28", 
                "interface": "Material", 
                "moonray_name": "material28", 
                "order": 32
            }, 
            "material49": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material49", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material49", 
                "interface": "Material", 
                "moonray_name": "material49", 
                "order": 53
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "material61": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material61", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material61", 
                "interface": "Material", 
                "moonray_name": "material61", 
                "order": 65
            }, 
            "material60": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material60", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material60", 
                "interface": "Material", 
                "moonray_name": "material60", 
                "order": 64
            }, 
            "material23": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material23", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material23", 
                "interface": "Material", 
                "moonray_name": "material23", 
                "order": 27
            }, 
            "material22": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material22", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material22", 
                "interface": "Material", 
                "moonray_name": "material22", 
                "order": 26
            }, 
            "material21": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material21", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material21", 
                "interface": "Material", 
                "moonray_name": "material21", 
                "order": 25
            }, 
            "material20": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material20", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material20", 
                "interface": "Material", 
                "moonray_name": "material20", 
                "order": 24
            }, 
            "material27": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material27", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material27", 
                "interface": "Material", 
                "moonray_name": "material27", 
                "order": 31
            }, 
            "material26": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material26", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material26", 
                "interface": "Material", 
                "moonray_name": "material26", 
                "order": 30
            }, 
            "material25": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material25", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material25", 
                "interface": "Material", 
                "moonray_name": "material25", 
                "order": 29
            }, 
            "choice": {
                "default_value": [
                    0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use", 
                "moonray_type": "Int", 
                "houdini_label": "Choice", 
                "moonray_name": "choice", 
                "order": 3
            }, 
            "material43": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material43", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material43", 
                "interface": "Material", 
                "moonray_name": "material43", 
                "order": 47
            }, 
            "material24": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material24", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material24", 
                "interface": "Material", 
                "moonray_name": "material24", 
                "order": 28
            }, 
            "material40": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material40", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material40", 
                "interface": "Material", 
                "moonray_name": "material40", 
                "order": 44
            }, 
            "material34": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material34", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material34", 
                "interface": "Material", 
                "moonray_name": "material34", 
                "order": 38
            }, 
            "material44": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material44", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material44", 
                "interface": "Material", 
                "moonray_name": "material44", 
                "order": 48
            }, 
            "material35": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material35", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material35", 
                "interface": "Material", 
                "moonray_name": "material35", 
                "order": 39
            }, 
            "material36": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material36", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material36", 
                "interface": "Material", 
                "moonray_name": "material36", 
                "order": 40
            }, 
            "material37": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material37", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material37", 
                "interface": "Material", 
                "moonray_name": "material37", 
                "order": 41
            }, 
            "material30": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material30", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material30", 
                "interface": "Material", 
                "moonray_name": "material30", 
                "order": 34
            }, 
            "material31": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material31", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material31", 
                "interface": "Material", 
                "moonray_name": "material31", 
                "order": 35
            }
        }, 
        "folders_with_parms": {}
    }, 
    "SwitchColorMap": {
        "moonray_type": "Map", 
        "moonray_name": "SwitchColorMap", 
        "folders_sorted": [], 
        "parms": {
            "input2": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input2", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input2", 
                "bindable": true, 
                "moonray_name": "input2", 
                "order": 3
            }, 
            "input3": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input3", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input3", 
                "bindable": true, 
                "moonray_name": "input3", 
                "order": 4
            }, 
            "input0": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input0", 
                "bindable": true, 
                "moonray_name": "input0", 
                "order": 1
            }, 
            "input1": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input1", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input1", 
                "bindable": true, 
                "moonray_name": "input1", 
                "order": 2
            }, 
            "input6": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input6", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input6", 
                "bindable": true, 
                "moonray_name": "input6", 
                "order": 7
            }, 
            "input7": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input7", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input7", 
                "bindable": true, 
                "moonray_name": "input7", 
                "order": 8
            }, 
            "input4": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input4", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input4", 
                "bindable": true, 
                "moonray_name": "input4", 
                "order": 5
            }, 
            "input5": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input5", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input5", 
                "bindable": true, 
                "moonray_name": "input5", 
                "order": 6
            }, 
            "input62": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input62", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input62", 
                "bindable": true, 
                "moonray_name": "input62", 
                "order": 63
            }, 
            "input8": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input8", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input8", 
                "bindable": true, 
                "moonray_name": "input8", 
                "order": 9
            }, 
            "input9": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input9", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input9", 
                "bindable": true, 
                "moonray_name": "input9", 
                "order": 10
            }, 
            "input54": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input54", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input54", 
                "bindable": true, 
                "moonray_name": "input54", 
                "order": 55
            }, 
            "input25": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input25", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input25", 
                "bindable": true, 
                "moonray_name": "input25", 
                "order": 26
            }, 
            "input24": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input24", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input24", 
                "bindable": true, 
                "moonray_name": "input24", 
                "order": 25
            }, 
            "input27": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input27", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input27", 
                "bindable": true, 
                "moonray_name": "input27", 
                "order": 28
            }, 
            "input26": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input26", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input26", 
                "bindable": true, 
                "moonray_name": "input26", 
                "order": 27
            }, 
            "input21": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input21", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input21", 
                "bindable": true, 
                "moonray_name": "input21", 
                "order": 22
            }, 
            "input20": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input20", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input20", 
                "bindable": true, 
                "moonray_name": "input20", 
                "order": 21
            }, 
            "input23": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input23", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input23", 
                "bindable": true, 
                "moonray_name": "input23", 
                "order": 24
            }, 
            "input22": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input22", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input22", 
                "bindable": true, 
                "moonray_name": "input22", 
                "order": 23
            }, 
            "input29": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input29", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input29", 
                "bindable": true, 
                "moonray_name": "input29", 
                "order": 30
            }, 
            "input28": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input28", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input28", 
                "bindable": true, 
                "moonray_name": "input28", 
                "order": 29
            }, 
            "input61": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input61", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input61", 
                "bindable": true, 
                "moonray_name": "input61", 
                "order": 62
            }, 
            "input47": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input47", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input47", 
                "bindable": true, 
                "moonray_name": "input47", 
                "order": 48
            }, 
            "input46": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input46", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input46", 
                "bindable": true, 
                "moonray_name": "input46", 
                "order": 47
            }, 
            "input45": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input45", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input45", 
                "bindable": true, 
                "moonray_name": "input45", 
                "order": 46
            }, 
            "input44": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input44", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input44", 
                "bindable": true, 
                "moonray_name": "input44", 
                "order": 45
            }, 
            "input43": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input43", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input43", 
                "bindable": true, 
                "moonray_name": "input43", 
                "order": 44
            }, 
            "input42": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input42", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input42", 
                "bindable": true, 
                "moonray_name": "input42", 
                "order": 43
            }, 
            "input41": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input41", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input41", 
                "bindable": true, 
                "moonray_name": "input41", 
                "order": 42
            }, 
            "input40": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input40", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input40", 
                "bindable": true, 
                "moonray_name": "input40", 
                "order": 41
            }, 
            "input55": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input55", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input55", 
                "bindable": true, 
                "moonray_name": "input55", 
                "order": 56
            }, 
            "input49": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input49", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input49", 
                "bindable": true, 
                "moonray_name": "input49", 
                "order": 50
            }, 
            "input48": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input48", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input48", 
                "bindable": true, 
                "moonray_name": "input48", 
                "order": 49
            }, 
            "input60": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input60", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input60", 
                "bindable": true, 
                "moonray_name": "input60", 
                "order": 61
            }, 
            "choice": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use", 
                "moonray_type": "Float", 
                "houdini_label": "Choice", 
                "bindable": true, 
                "moonray_name": "choice", 
                "order": 0
            }, 
            "input32": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input32", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input32", 
                "bindable": true, 
                "moonray_name": "input32", 
                "order": 33
            }, 
            "input33": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input33", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input33", 
                "bindable": true, 
                "moonray_name": "input33", 
                "order": 34
            }, 
            "input30": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input30", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input30", 
                "bindable": true, 
                "moonray_name": "input30", 
                "order": 31
            }, 
            "input31": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input31", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input31", 
                "bindable": true, 
                "moonray_name": "input31", 
                "order": 32
            }, 
            "input36": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input36", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input36", 
                "bindable": true, 
                "moonray_name": "input36", 
                "order": 37
            }, 
            "input37": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input37", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input37", 
                "bindable": true, 
                "moonray_name": "input37", 
                "order": 38
            }, 
            "input34": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input34", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input34", 
                "bindable": true, 
                "moonray_name": "input34", 
                "order": 35
            }, 
            "input35": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input35", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input35", 
                "bindable": true, 
                "moonray_name": "input35", 
                "order": 36
            }, 
            "input63": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input63", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input63", 
                "bindable": true, 
                "moonray_name": "input63", 
                "order": 64
            }, 
            "input58": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input58", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input58", 
                "bindable": true, 
                "moonray_name": "input58", 
                "order": 59
            }, 
            "input38": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input38", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input38", 
                "bindable": true, 
                "moonray_name": "input38", 
                "order": 39
            }, 
            "input39": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input39", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input39", 
                "bindable": true, 
                "moonray_name": "input39", 
                "order": 40
            }, 
            "input59": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input59", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input59", 
                "bindable": true, 
                "moonray_name": "input59", 
                "order": 60
            }, 
            "input18": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input18", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input18", 
                "bindable": true, 
                "moonray_name": "input18", 
                "order": 19
            }, 
            "input19": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input19", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input19", 
                "bindable": true, 
                "moonray_name": "input19", 
                "order": 20
            }, 
            "input56": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input56", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input56", 
                "bindable": true, 
                "moonray_name": "input56", 
                "order": 57
            }, 
            "input57": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input57", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input57", 
                "bindable": true, 
                "moonray_name": "input57", 
                "order": 58
            }, 
            "input50": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input50", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input50", 
                "bindable": true, 
                "moonray_name": "input50", 
                "order": 51
            }, 
            "input51": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input51", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input51", 
                "bindable": true, 
                "moonray_name": "input51", 
                "order": 52
            }, 
            "input52": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input52", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input52", 
                "bindable": true, 
                "moonray_name": "input52", 
                "order": 53
            }, 
            "input53": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input53", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input53", 
                "bindable": true, 
                "moonray_name": "input53", 
                "order": 54
            }, 
            "input10": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input10", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input10", 
                "bindable": true, 
                "moonray_name": "input10", 
                "order": 11
            }, 
            "input11": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input11", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input11", 
                "bindable": true, 
                "moonray_name": "input11", 
                "order": 12
            }, 
            "input12": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input12", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input12", 
                "bindable": true, 
                "moonray_name": "input12", 
                "order": 13
            }, 
            "input13": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input13", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input13", 
                "bindable": true, 
                "moonray_name": "input13", 
                "order": 14
            }, 
            "input14": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input14", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input14", 
                "bindable": true, 
                "moonray_name": "input14", 
                "order": 15
            }, 
            "input15": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input15", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input15", 
                "bindable": true, 
                "moonray_name": "input15", 
                "order": 16
            }, 
            "input16": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input16", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input16", 
                "bindable": true, 
                "moonray_name": "input16", 
                "order": 17
            }, 
            "input17": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input17", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input17", 
                "bindable": true, 
                "moonray_name": "input17", 
                "order": 18
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ShadowReceiverSet": {
        "moonray_type": "ShadowReceiverSet", 
        "moonray_name": "ShadowReceiverSet", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "complement": {
                "default_value": [
                    false
                ], 
                "houdini_name": "complement", 
                "moonray_type": "Bool", 
                "houdini_label": "Complement", 
                "moonray_name": "complement", 
                "order": 1
            }, 
            "geometries": {
                "default_value": [], 
                "houdini_name": "geometries", 
                "moonray_type": "SceneObjectIndexable", 
                "houdini_label": "Geometries", 
                "interface": "Geometry", 
                "moonray_name": "geometries", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "complement"
            ]
        }
    }, 
    "ProjectPlanarNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "ProjectPlanarNormalMap", 
        "folders_sorted": [], 
        "parms": {
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 6
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 10
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 5
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 1
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 4
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 8
            }, 
            "wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Wrap Around", 
                "moonray_name": "wrap_around", 
                "order": 2, 
                "aliases": [
                    "wrap around"
                ]
            }, 
            "normal_encoding": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_encoding", 
                "help": "Most normal maps are encoded [0,1].   Only certain rare floating point normal maps are encoded [-1,1]", 
                "moonray_type": "Int", 
                "menu": [
                    "[0,1]", 
                    "[-1,1]"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Encoding", 
                "moonray_name": "normal_encoding", 
                "order": 3, 
                "aliases": [
                    "normal encoding"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 11
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 0, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 9
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 7
            }
        }, 
        "folders_with_parms": {}
    }, 
    "packages": {
        "moonshine_folio": "moonshine-9.48", 
        "moonshine_usd_folio": "moonshine_usd-9.48", 
        "mcrt_dataio_folio": "mcrt_dataio-11.6", 
        "moonray_folio": "moonray-12.48", 
        "mcrt_denoise_folio": "mcrt_denoise-1.28", 
        "mcrt_messages_folio": "mcrt_messages-10.4", 
        "scene_rdl2_folio": "scene_rdl2-10.42", 
        "moonbase_proxies_folio": "moonbase_proxies-10.6"
    }, 
    "BakeCamera": {
        "moonray_type": "Camera", 
        "moonray_name": "BakeCamera", 
        "folders_sorted": [
            "Frustum", 
            "Motion Blur", 
            "Render Masks", 
            "Medium"
        ], 
        "parms": {
            "udim": {
                "default_value": [
                    1001
                ], 
                "houdini_name": "udim", 
                "help": "Udim tile to bake", 
                "moonray_type": "Int", 
                "houdini_label": "Udim", 
                "moonray_name": "udim", 
                "order": 10
            }, 
            "normal_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "normal_map", 
                "help": "Use this option to supply your own normals that are used when computing ray directions.  Without this option, normals are computed from the geometry and do not take into account any material applied normal mapping.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Normal Map", 
                "moonray_name": "normal_map", 
                "order": 16, 
                "aliases": [
                    "normal map"
                ]
            }, 
            "mb_shutter_open": {
                "default_value": [
                    -0.25
                ], 
                "houdini_name": "mb_shutter_open", 
                "help": "Frame at which the shutter opens, i.e., the beginning of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Open", 
                "moonray_name": "mb_shutter_open", 
                "order": 3, 
                "aliases": [
                    "mb shutter open"
                ]
            }, 
            "use_relative_bias": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_relative_bias", 
                "help": "If true, bias is scaled based on position magnitude", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Relative Bias", 
                "moonray_name": "use_relative_bias", 
                "order": 14, 
                "aliases": [
                    "use relative bias"
                ]
            }, 
            "far": {
                "default_value": [
                    10000.0
                ], 
                "houdini_name": "far", 
                "help": "Far clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Far", 
                "moonray_name": "far", 
                "order": 2
            }, 
            "normal_map_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_map_space", 
                "help": "Use camera space if you generated per frame normal maps in a pre-pass using the normal material aov.  You probably want to use tangent space if you are using a normal map that is also used in the surfacing setup.", 
                "moonray_type": "Int", 
                "menu": [
                    "camera space", 
                    "tangent space"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Map Space", 
                "moonray_name": "normal_map_space", 
                "order": 17, 
                "aliases": [
                    "normal map space"
                ]
            }, 
            "pixel_sample_map": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "pixel_sample_map", 
                "help": "Map indicating the number of pixel samples that should be used per pixel (in uniform sampling mode). This is a multiplier on the global pixel sample count specified in SceneVariables. If the provided map has incompatible dimensions, it will be resized.", 
                "moonray_type": "String", 
                "houdini_label": "Pixel Sample Map", 
                "moonray_name": "pixel_sample_map", 
                "order": 6, 
                "aliases": [
                    "pixel sample map"
                ]
            }, 
            "mb_shutter_close": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "mb_shutter_close", 
                "help": "Frame at which the shutter closes, i.e., the end of the motion blur interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Close", 
                "moonray_name": "mb_shutter_close", 
                "order": 4, 
                "aliases": [
                    "mb shutter close"
                ]
            }, 
            "geometry": {
                "default_value": [], 
                "houdini_name": "geometry", 
                "help": "The geometry object to bake", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Geometry", 
                "interface": "Geometry", 
                "moonray_name": "geometry", 
                "order": 9
            }, 
            "near": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "near", 
                "help": "Near clipping plane", 
                "moonray_type": "Float", 
                "houdini_label": "Near", 
                "moonray_name": "near", 
                "order": 1
            }, 
            "bias": {
                "default_value": [
                    0.003
                ], 
                "houdini_name": "bias", 
                "help": "Ray-tracing offset for primary ray origin", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "moonray_name": "bias", 
                "order": 13
            }, 
            "mode": {
                "default_value": [
                    3
                ], 
                "houdini_name": "mode", 
                "help": "How to generate primary rays", 
                "moonray_type": "Int", 
                "menu": [
                    "from camera to surface", 
                    "from surface along normal", 
                    "from surface along reflection vector", 
                    "above surface reverse normal"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 12
            }, 
            "map_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "map_factor", 
                "help": "Increase or decrease the internal position map buffer resolution", 
                "moonray_type": "Float", 
                "houdini_label": "Map Factor", 
                "moonray_name": "map_factor", 
                "order": 15, 
                "aliases": [
                    "map factor"
                ]
            }, 
            "uv_attribute": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "uv_attribute", 
                "help": "Specifies a Vec2f primitive attribute to use as the uv coordinates.  If empty, the default uv for the mesh is used.  The uvs must provide a unique parameterization of the mesh, i.e. a given (u, v) can appear only once on the mesh being baked.", 
                "moonray_type": "String", 
                "houdini_label": "Uv Attribute", 
                "moonray_name": "uv_attribute", 
                "order": 11, 
                "aliases": [
                    "uv attribute"
                ]
            }, 
            "medium_material": {
                "default_value": [], 
                "houdini_name": "medium_material", 
                "help": "The material the camera is 'inside'. If no medium_geometry is specified, ALL rays will have this initial index of refraction applied. ", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Material", 
                "moonray_name": "medium_material", 
                "order": 7, 
                "aliases": [
                    "medium material"
                ]
            }, 
            "mb_shutter_bias": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mb_shutter_bias", 
                "help": "Biases the motion blur samples toward one end of the shutter interval.", 
                "moonray_type": "Float", 
                "houdini_label": "Mb Shutter Bias", 
                "moonray_name": "mb_shutter_bias", 
                "order": 5, 
                "aliases": [
                    "mb shutter bias"
                ]
            }, 
            "medium_geometry": {
                "default_value": [], 
                "houdini_name": "medium_geometry", 
                "help": "The geometry the camera is 'inside' to which you'd like the medium_material applied. (The use case for this is typically partially-submerged cameras)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Medium Geometry", 
                "moonray_name": "medium_geometry", 
                "order": 8, 
                "aliases": [
                    "medium geometry"
                ]
            }
        }, 
        "folders_with_parms": {
            "Medium": [
                "medium_material", 
                "medium_geometry"
            ], 
            "Frustum": [
                "near", 
                "far"
            ], 
            "Motion Blur": [
                "mb_shutter_open", 
                "mb_shutter_close", 
                "mb_shutter_bias"
            ], 
            "Render Masks": [
                "pixel_sample_map"
            ]
        }
    }, 
    "GradientMap": {
        "moonray_type": "Map", 
        "moonray_name": "GradientMap", 
        "folders_sorted": [
            "Gradient properties", 
            "Falloff properties", 
            "Additional properties"
        ], 
        "parms": {
            "symmetric": {
                "default_value": [
                    false
                ], 
                "houdini_name": "symmetric", 
                "help": "Color A blends into Color B and then back into Color A from the start to the end point", 
                "moonray_type": "Bool", 
                "houdini_label": "Symmetric", 
                "moonray_name": "symmetric", 
                "order": 12
            }, 
            "falloff_bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "falloff_bias", 
                "help": "Compresses the blending towards the start or end color", 
                "moonray_type": "Float", 
                "houdini_label": "Falloff Bias", 
                "moonray_name": "falloff_bias", 
                "order": 9, 
                "aliases": [
                    "falloff bias"
                ]
            }, 
            "end": {
                "default_value": [
                    0.0, 
                    1.0, 
                    0.0
                ], 
                "houdini_name": "end", 
                "help": "End position in the chosen space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "End", 
                "moonray_name": "end", 
                "order": 3
            }, 
            "falloff_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "falloff_type", 
                "help": "Falloff blend mode", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "natural", 
                    "linear", 
                    "squared", 
                    "gaussian", 
                    "ease out"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Falloff Type", 
                "moonray_name": "falloff_type", 
                "order": 4, 
                "aliases": [
                    "falloff type"
                ]
            }, 
            "falloff_start": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "falloff_start", 
                "help": "Shifts where the falloff starts", 
                "moonray_type": "Float", 
                "houdini_label": "Falloff Start", 
                "moonray_name": "falloff_start", 
                "order": 6, 
                "aliases": [
                    "falloff start"
                ]
            }, 
            "space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "space", 
                "help": "The transformation space in which to perform the blending", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 10
            }, 
            "object": {
                "default_value": [], 
                "houdini_name": "object", 
                "help": "Use the provided object's transformation space (only used if object space is also specified)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object", 
                "interface": "Geometry", 
                "moonray_name": "object", 
                "order": 11
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "End color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 1, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "help": "Start color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 0, 
                "aliases": [
                    "color A"
                ]
            }, 
            "falloff_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "falloff_exponent", 
                "help": "Adjusts rate of blending", 
                "moonray_type": "Float", 
                "houdini_label": "Falloff Exponent", 
                "moonray_name": "falloff_exponent", 
                "order": 5, 
                "aliases": [
                    "falloff exponent"
                ]
            }, 
            "start": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "start", 
                "help": "Start position in the chosen space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Start", 
                "moonray_name": "start", 
                "order": 2
            }, 
            "falloff_end_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "falloff_end_intensity", 
                "help": "Adjust the intensity of the end color", 
                "moonray_type": "Float", 
                "houdini_label": "Falloff End Intensity", 
                "moonray_name": "falloff_end_intensity", 
                "order": 8, 
                "aliases": [
                    "falloff end intensity"
                ]
            }, 
            "falloff_end": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "falloff_end", 
                "help": "Shifts where the falloff ends", 
                "moonray_type": "Float", 
                "houdini_label": "Falloff End", 
                "moonray_name": "falloff_end", 
                "order": 7, 
                "aliases": [
                    "falloff end"
                ]
            }, 
            "symmetric_center": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "symmetric_center", 
                "help": "Shifts the center of the symmetric falloff", 
                "moonray_type": "Float", 
                "houdini_label": "Symmetric Center", 
                "moonray_name": "symmetric_center", 
                "order": 13, 
                "aliases": [
                    "symmetric center"
                ]
            }
        }, 
        "folders_with_parms": {
            "Falloff properties": [
                "falloff_type", 
                "falloff_exponent", 
                "falloff_start", 
                "falloff_end", 
                "falloff_end_intensity", 
                "falloff_bias"
            ], 
            "Gradient properties": [
                "color_A", 
                "color_B", 
                "start", 
                "end", 
                "space", 
                "object"
            ], 
            "Additional properties": [
                "symmetric", 
                "symmetric_center"
            ]
        }
    }, 
    "ClampMap": {
        "moonray_type": "Map", 
        "moonray_name": "ClampMap", 
        "folders_sorted": [], 
        "parms": {
            "clamp": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp", 
                "help": "enables/disables clamping of the output values.  This useful prevent out-of-range values when expanding the input values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 1
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "the input values to be remapped", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "clamp_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clamp_max", 
                "help": "the maximum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Max", 
                "moonray_name": "clamp_max", 
                "order": 3
            }, 
            "clamp_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clamp_min", 
                "help": "the minimum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Min", 
                "moonray_name": "clamp_min", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RemapDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "RemapDisplayFilter", 
        "folders_sorted": [
            "Channel", 
            "Advanced"
        ], 
        "parms": {
            "input_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "input_min", 
                "help": "The input float that will be remapped to the 'output min' value", 
                "moonray_type": "Float", 
                "houdini_label": "Input Min", 
                "moonray_name": "input_min", 
                "order": 2, 
                "aliases": [
                    "input min"
                ]
            }, 
            "clamp": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp", 
                "help": "Enables/disables clamping of the output values.  This is useful to prevent out-of-range values when expanding the input values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 7
            }, 
            "clamp_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "clamp_max_RGB", 
                "help": "The maximum RGB value output by this map when 'clamp' is enabled", 
                "moonray_type": "Rgb", 
                "houdini_label": "Clamp Max RGB", 
                "moonray_name": "clamp_max_RGB", 
                "order": 17
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 19
            }, 
            "midpoint_bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "midpoint_bias", 
                "help": "Biases the in-between values toward 'output min' or 'output max'. Default = 0.5", 
                "moonray_type": "Float", 
                "houdini_label": "Midpoint Bias", 
                "moonray_name": "midpoint_bias", 
                "order": 6, 
                "aliases": [
                    "midpoint bias"
                ]
            }, 
            "clamp_RGB": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp_RGB", 
                "help": "Enables/disables clamping of the RGB output values.  This useful prevent out-of-range values when expanding the input values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp RGB", 
                "moonray_name": "clamp_RGB", 
                "order": 15
            }, 
            "output_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "output_max_RGB", 
                "help": "The RGB value that 'input max RGB' is remapped to", 
                "moonray_type": "Rgb", 
                "houdini_label": "Output Max RGB", 
                "moonray_name": "output_max_RGB", 
                "order": 13
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 18
            }, 
            "remap_method": {
                "default_value": [
                    0
                ], 
                "houdini_name": "remap_method", 
                "help": "Choose whether you are remapping using single values (uniform) or with separate RGB channels", 
                "moonray_type": "Int", 
                "menu": [
                    "uniform", 
                    "RGB"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Remap Method", 
                "moonray_name": "remap_method", 
                "order": 0
            }, 
            "clamp_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "clamp_min_RGB", 
                "help": "The minimum RGB value output by this map when 'clamp' is enabled", 
                "moonray_type": "Rgb", 
                "houdini_label": "Clamp Min RGB", 
                "moonray_name": "clamp_min_RGB", 
                "order": 16
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 20
            }, 
            "output_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "output_max", 
                "help": "The value that 'input max' will be remapped to", 
                "moonray_type": "Float", 
                "houdini_label": "Output Max", 
                "moonray_name": "output_max", 
                "order": 5, 
                "aliases": [
                    "output max"
                ]
            }, 
            "clamp_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clamp_max", 
                "help": "The maximum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Max", 
                "moonray_name": "clamp_max", 
                "order": 9, 
                "aliases": [
                    "clamp max"
                ]
            }, 
            "output_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "output_min_RGB", 
                "help": "The RGB value that 'input min RGB' is remapped to", 
                "moonray_type": "Rgb", 
                "houdini_label": "Output Min RGB", 
                "moonray_name": "output_min_RGB", 
                "order": 12
            }, 
            "input_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input_max_RGB", 
                "help": "The input RGB value that will be remapped to the 'output max RGB' value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input Max RGB", 
                "moonray_name": "input_max_RGB", 
                "order": 11
            }, 
            "input_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_min_RGB", 
                "help": "The input RGB value that will be remapped to the 'output min RGB' value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input Min RGB", 
                "moonray_name": "input_min_RGB", 
                "order": 10
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to remap", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 1
            }, 
            "output_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "output_min", 
                "help": "The float that 'input min' will be remapped to", 
                "moonray_type": "Float", 
                "houdini_label": "Output Min", 
                "moonray_name": "output_min", 
                "order": 4, 
                "aliases": [
                    "output min"
                ]
            }, 
            "clamp_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clamp_min", 
                "help": "The minimum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Min", 
                "moonray_name": "clamp_min", 
                "order": 8, 
                "aliases": [
                    "clamp min"
                ]
            }, 
            "input_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_max", 
                "help": "The input float that will be remapped to the 'output max' value", 
                "moonray_type": "Float", 
                "houdini_label": "Input Max", 
                "moonray_name": "input_max", 
                "order": 3, 
                "aliases": [
                    "input max"
                ]
            }, 
            "midpoint_bias_RGB": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "midpoint_bias_RGB", 
                "help": "Biases the in-between values toward 'output min RGB' or 'output max RGB'. Default = 0.5", 
                "moonray_type": "Rgb", 
                "houdini_label": "Midpoint Bias RGB", 
                "moonray_name": "midpoint_bias_RGB", 
                "order": 14
            }
        }, 
        "folders_with_parms": {
            "Channel": [
                "input_min_RGB", 
                "input_max_RGB", 
                "output_min_RGB", 
                "output_max_RGB", 
                "midpoint_bias_RGB", 
                "clamp_min_RGB", 
                "clamp_max_RGB"
            ], 
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "DwaSolidDielectricMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaSolidDielectricMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Clearcoat", 
            "Glitter", 
            "Specular", 
            "Iridescence", 
            "Diffuse", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 86, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole, 2 for random walk", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 70
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 65, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "show_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_clearcoat", 
                "help": "enables/disables clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Clearcoat", 
                "moonray_name": "show_clearcoat", 
                "order": 10, 
                "aliases": [
                    "show clearcoat"
                ]
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 23
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 63, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 21
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 78, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 55
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 25
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 31
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 36
            }, 
            "clearcoat_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clearcoat_bending", 
                "help": "(advanced, recommended ON) bends rays based on the clearcoat-refractive-index before evaluating the lobes under clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Bending", 
                "moonray_name": "clearcoat_bending", 
                "order": 17, 
                "aliases": [
                    "clearcoat bending"
                ]
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 88, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 85, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 51
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 75
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 71, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 44
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 35
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 30
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 58, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 54
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "use_independent_clearcoat_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_clearcoat_normal", 
                "help": "specifies whether the clearcoat lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Clearcoat Normal", 
                "moonray_name": "use_independent_clearcoat_normal", 
                "order": 18, 
                "aliases": [
                    "use independent clearcoat normal"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 81, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 57, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 62, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 64, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "clearcoat_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "clearcoat_model", 
                "help": "sets the normal distribution function for clearcoat.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "clearcoat_model", 
                "order": 12, 
                "aliases": [
                    "clearcoat model"
                ]
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 46
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 66, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 48, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 42
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 67, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 43
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 40, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "clearcoat_thickness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clearcoat_thickness", 
                "help": "the thickness of the virtual clearcoat layer. Values > 0 enable absorption", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "clearcoat_thickness", 
                "order": 15, 
                "aliases": [
                    "clearcoat thickness"
                ]
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 52, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 61, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 84
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 83
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 27
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 39, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 37
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 32
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 22
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 34
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 59
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 29
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "clearcoat_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat_normal_dial", 
                "help": "controls the amount of infuence of the alternate clearcoat normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "clearcoat_normal_dial", 
                "order": 20, 
                "aliases": [
                    "clearcoat normal dial"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 60, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "clearcoat_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "clearcoat_roughness", 
                "help": "the roughness of the clearcoat lobe", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "clearcoat_roughness", 
                "order": 14, 
                "aliases": [
                    "clearcoat roughness"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 45, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 79, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 80, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "clearcoat_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "clearcoat_refractive_index", 
                "help": "defines the Fresnel behavior", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "clearcoat_refractive_index", 
                "order": 13, 
                "aliases": [
                    "clearcoat refractive index"
                ]
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 69
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 73, 
                "aliases": [
                    "enable sss input normal"
                ]
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 33
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 56, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 24
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 41
            }, 
            "clearcoat": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat", 
                "help": "enables/disables clearcoat (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Clearcoat", 
                "bindable": true, 
                "moonray_name": "clearcoat", 
                "order": 11
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 68
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 28
            }, 
            "clearcoat_attenuation_color": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "clearcoat_attenuation_color", 
                "help": "the attenuation color of the clearcoat when 'cleacoat thickness' > 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "clearcoat_attenuation_color", 
                "order": 16, 
                "aliases": [
                    "clearcoat attenuation color"
                ]
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 77, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 50
            }, 
            "independent_clearcoat_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_clearcoat_normal", 
                "help": "specifies an independent shading normal (normal map) for the clearcoat lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Clearcoat Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_clearcoat_normal", 
                "order": 19, 
                "aliases": [
                    "independent clearcoat normal"
                ]
            }, 
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 87
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 38
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 53
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface. When 0 surface diffuse (lambertian or toon) is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 72, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "resolve_self_intersections": {
                "default_value": [
                    true
                ], 
                "houdini_name": "resolve_self_intersections", 
                "help": "tries to resolve self-intersecting geometry automatically by only evaluating 'exiting' intersections for subsurface evaluations", 
                "moonray_type": "Bool", 
                "houdini_label": "Resolve Self Intersections", 
                "moonray_name": "resolve_self_intersections", 
                "order": 74
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 82
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 76, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 26
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 47, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "refractive_index", 
                "help": "defines the Fresnel behavior, (affects reflection and refraction)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 49, 
                "aliases": [
                    "refractive index"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "show_specular", 
                "specular_model", 
                "refractive_index", 
                "roughness", 
                "anisotropy", 
                "shading_tangent"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Clearcoat": [
                "show_clearcoat", 
                "clearcoat", 
                "clearcoat_model", 
                "clearcoat_refractive_index", 
                "clearcoat_roughness", 
                "clearcoat_thickness", 
                "clearcoat_attenuation_color", 
                "clearcoat_bending", 
                "use_independent_clearcoat_normal", 
                "independent_clearcoat_normal", 
                "clearcoat_normal_dial"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "show_diffuse", 
                "albedo", 
                "diffuse_roughness", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "resolve_self_intersections", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ], 
            "Advanced": [
                "specular", 
                "sss_trace_set"
            ]
        }
    }, 
    "DwaSkinMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaSkinMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Moisture", 
            "Glitter", 
            "Specular", 
            "Iridescence", 
            "Diffuse", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 83, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole, 2 for random walk", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 67
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 62, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 20
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "show_moisture": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_moisture", 
                "help": "enables/disables moisture reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Moisture", 
                "moonray_name": "show_moisture", 
                "order": 10, 
                "aliases": [
                    "show moisture"
                ]
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 60, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 18
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 75, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 52
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 22
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 28
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 33
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 85, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 82, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 48
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 72
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 68, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 41
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 32
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 27
            }, 
            "moisture_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "moisture_refractive_index", 
                "help": "defines the Fresnel behavior of moisture, and all underlying skin layers", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "moisture_refractive_index", 
                "order": 13, 
                "aliases": [
                    "moisture refractive index"
                ]
            }, 
            "independent_moisture_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_moisture_normal", 
                "help": "specifies an independent shading normal (normal map) for the Moisture lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Moisture Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_moisture_normal", 
                "order": 16, 
                "aliases": [
                    "independent moisture normal"
                ]
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 55, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 51
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 78, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 54, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 59, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 61, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 43
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 63, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 45, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 39
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 64, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 40
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 37, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 84
            }, 
            "moisture_mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "moisture_mask", 
                "help": "bind map here, higher values for oily zones", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "moisture_mask", 
                "order": 12, 
                "aliases": [
                    "moisture mask"
                ]
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 58, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 81
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 80
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 24
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 36, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 34
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 29
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 19
            }, 
            "moisture_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "moisture_roughness", 
                "help": "roughness of moisture; binding a map here should rarely be necessary", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "moisture_roughness", 
                "order": 14, 
                "aliases": [
                    "moisture roughness"
                ]
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 31
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 56
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 26
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 57, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "moisture_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "moisture_model", 
                "help": "sets the normal distribution function for the moisture specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "moisture_model", 
                "order": 11, 
                "aliases": [
                    "moisture model"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 42, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 76, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 77, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 66
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 70, 
                "aliases": [
                    "enable sss input normal"
                ]
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 30
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 53, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "use_independent_moisture_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_moisture_normal", 
                "help": "specifies whether the moisture lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Moisture Normal", 
                "moonray_name": "use_independent_moisture_normal", 
                "order": 15, 
                "aliases": [
                    "use independent moisture normal"
                ]
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 21
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 38
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 65
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 25
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 79
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 74, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface (currently only affects reflection)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 47
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 49, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 35
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 50
            }, 
            "moisture_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "moisture_normal_dial", 
                "help": "controls the amount of influence of the alternate Moisture normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "moisture_normal_dial", 
                "order": 17, 
                "aliases": [
                    "moisture normal dial"
                ]
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface. When 0 surface diffuse (lambertian or toon) is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 69, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "resolve_self_intersections": {
                "default_value": [
                    true
                ], 
                "houdini_name": "resolve_self_intersections", 
                "help": "tries to resolve self-intersecting geometry automatically by only evaluating 'exiting' intersections for subsurface evaluations", 
                "moonray_type": "Bool", 
                "houdini_label": "Resolve Self Intersections", 
                "moonray_name": "resolve_self_intersections", 
                "order": 71
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 73, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 23
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 44, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "refractive_index", 
                "help": "defines the Fresnel behavior, (affects reflection and refraction)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 46, 
                "aliases": [
                    "refractive index"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "show_specular", 
                "specular_model", 
                "refractive_index", 
                "roughness", 
                "anisotropy", 
                "shading_tangent"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Moisture": [
                "show_moisture", 
                "moisture_model", 
                "moisture_mask", 
                "moisture_refractive_index", 
                "moisture_roughness", 
                "use_independent_moisture_normal", 
                "independent_moisture_normal", 
                "moisture_normal_dial"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "show_diffuse", 
                "albedo", 
                "diffuse_roughness", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "resolve_self_intersections", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ], 
            "Advanced": [
                "specular", 
                "sss_trace_set"
            ]
        }
    }, 
    "ImageDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ImageDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 4
            }, 
            "image_path": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "image_path", 
                "help": "File path to the .exr we want to fit to the image plane", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Image Path", 
                "moonray_name": "image_path", 
                "order": 1
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "display_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "display_type", 
                "help": "Method used to fit the input image to the image plane.", 
                "moonray_type": "Int", 
                "menu": [
                    "stretch", 
                    "fit_horizontal", 
                    "fit_vertical", 
                    "fit_by_smallest_dimension", 
                    "fit_by_largest_dimension", 
                    "no_scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Display Type", 
                "moonray_name": "display_type", 
                "order": 2
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to use in the ImageDisplayFilter", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "RgbToFloatDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "RgbToFloatDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to use in the RgbToFloat operation", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 2
            }, 
            "mode": {
                "default_value": [
                    5
                ], 
                "houdini_name": "mode", 
                "help": "The method used to convert RGB Color to float", 
                "moonray_type": "Int", 
                "menu": [
                    "r", 
                    "g", 
                    "b", 
                    "min", 
                    "max", 
                    "average", 
                    "sum", 
                    "luminance"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 1
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 4
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "ColorCorrectMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectMap", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "clamp": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp", 
                "help": "enables/disables clamping of the output values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 3
            }, 
            "offset_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_g", 
                "help": "adds the specified values to the green channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset G", 
                "bindable": true, 
                "moonray_name": "offset_g", 
                "order": 36
            }, 
            "contrast_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "contrast_enabled", 
                "help": "enables the contrast parameter", 
                "moonray_type": "Bool", 
                "houdini_label": "Contrast Enabled", 
                "moonray_name": "contrast_enabled", 
                "order": 10
            }, 
            "gain_offset_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "gain_offset_enabled", 
                "help": "enables the gain and offset parameters", 
                "moonray_type": "Bool", 
                "houdini_label": "Gain Offset Enabled", 
                "moonray_name": "gain_offset_enabled", 
                "order": 14
            }, 
            "use_per_channel_saturation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_saturation", 
                "help": "enables separate RGB controls for saturation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Saturation", 
                "moonray_name": "use_per_channel_saturation", 
                "order": 19
            }, 
            "offset_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_b", 
                "help": "adds the specified values to the blue channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset B", 
                "bindable": true, 
                "moonray_name": "offset_b", 
                "order": 37
            }, 
            "saturation_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "saturation_enabled", 
                "help": "enables the saturation parameter", 
                "moonray_type": "Bool", 
                "houdini_label": "Saturation Enabled", 
                "moonray_name": "saturation_enabled", 
                "order": 8
            }, 
            "TMI": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "TMI", 
                "help": "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy ", 
                "moonray_type": "Rgb", 
                "display": "tmi", 
                "houdini_label": "TMI", 
                "bindable": true, 
                "moonray_name": "TMI", 
                "order": 18
            }, 
            "gain_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_b", 
                "help": "multiplies the blue channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain B", 
                "bindable": true, 
                "moonray_name": "gain_b", 
                "order": 34
            }, 
            "gain_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_g", 
                "help": "multiplies the green channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain G", 
                "bindable": true, 
                "moonray_name": "gain_g", 
                "order": 33
            }, 
            "offset_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_r", 
                "help": "adds the specified values to the red channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset R", 
                "bindable": true, 
                "moonray_name": "offset_r", 
                "order": 35
            }, 
            "gamma_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_g", 
                "help": "raises the green channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma G", 
                "bindable": true, 
                "moonray_name": "gamma_g", 
                "order": 29
            }, 
            "saturation_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_r", 
                "help": "desaturates the red channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation R", 
                "bindable": true, 
                "moonray_name": "saturation_r", 
                "order": 20
            }, 
            "use_per_channel_gain_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_gain_offset", 
                "help": "enables separate RGB controls for gain and offset", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Gain Offset", 
                "moonray_name": "use_per_channel_gain_offset", 
                "order": 31
            }, 
            "gamma_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_b", 
                "help": "raises the blue channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma B", 
                "bindable": true, 
                "moonray_name": "gamma_b", 
                "order": 30
            }, 
            "gain_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_r", 
                "help": "multiplies the red channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain R", 
                "bindable": true, 
                "moonray_name": "gain_r", 
                "order": 32
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "use_per_channel_contrast": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_contrast", 
                "help": "enables separate RGB controls for contrast", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Contrast", 
                "moonray_name": "use_per_channel_contrast", 
                "order": 23
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "saturation_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_b", 
                "help": "desaturates the blue channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation B", 
                "bindable": true, 
                "moonray_name": "saturation_b", 
                "order": 22
            }, 
            "saturation_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation_g", 
                "help": "desaturates the green channel input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation G", 
                "bindable": true, 
                "moonray_name": "saturation_g", 
                "order": 21
            }, 
            "gamma_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_r", 
                "help": "raises the red channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma R", 
                "bindable": true, 
                "moonray_name": "gamma_r", 
                "order": 28
            }, 
            "gamma_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "gamma_enabled", 
                "help": "enables the gamma parameter", 
                "moonray_type": "Bool", 
                "houdini_label": "Gamma Enabled", 
                "moonray_name": "gamma_enabled", 
                "order": 12
            }, 
            "saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "desaturates the input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "bindable": true, 
                "moonray_name": "saturation", 
                "order": 9
            }, 
            "contrast_r": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_r", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the red channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast R", 
                "bindable": true, 
                "moonray_name": "contrast_r", 
                "order": 24
            }, 
            "clamp_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clamp_max", 
                "help": "the maximum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Max", 
                "moonray_name": "clamp_max", 
                "order": 5
            }, 
            "gain": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "multiplies the input channels by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 15
            }, 
            "offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "adds the specified values to the input", 
                "moonray_type": "Float", 
                "houdini_label": "Offset", 
                "bindable": true, 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "contrast_g": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_g", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the green channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast G", 
                "bindable": true, 
                "moonray_name": "contrast_g", 
                "order": 25
            }, 
            "clamp_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clamp_min", 
                "help": "the minimum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Min", 
                "moonray_name": "clamp_min", 
                "order": 4
            }, 
            "use_per_channel_gamma": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_gamma", 
                "help": "enables separate RGB controls for gamma", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Gamma", 
                "moonray_name": "use_per_channel_gamma", 
                "order": 27
            }, 
            "contrast_b": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast_b", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the blue channel", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast B", 
                "bindable": true, 
                "moonray_name": "contrast_b", 
                "order": 26
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "TMI_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "TMI_enabled", 
                "help": "enables the TMI parameters", 
                "moonray_type": "Bool", 
                "houdini_label": "TMI Enabled", 
                "moonray_name": "TMI_enabled", 
                "order": 17
            }, 
            "hue_shift": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "hue_shift", 
                "help": "shifts the hue of the input (spectrum range is 0-1)", 
                "moonray_type": "Float", 
                "houdini_label": "Hue Shift", 
                "bindable": true, 
                "moonray_name": "hue_shift", 
                "order": 7
            }, 
            "hue_shift_enabled": {
                "default_value": [
                    true
                ], 
                "houdini_name": "hue_shift_enabled", 
                "help": "enables the hue_shift parameter", 
                "moonray_type": "Bool", 
                "houdini_label": "Hue Shift Enabled", 
                "moonray_name": "hue_shift_enabled", 
                "order": 6
            }, 
            "contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast", 
                "help": "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast", 
                "bindable": true, 
                "moonray_name": "contrast", 
                "order": 11
            }, 
            "gamma": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "raises the input to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma", 
                "bindable": true, 
                "moonray_name": "gamma", 
                "order": 13
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "use_per_channel_saturation", 
                "saturation_r", 
                "saturation_g", 
                "saturation_b", 
                "use_per_channel_contrast", 
                "contrast_r", 
                "contrast_g", 
                "contrast_b", 
                "use_per_channel_gamma", 
                "gamma_r", 
                "gamma_g", 
                "gamma_b", 
                "use_per_channel_gain_offset", 
                "gain_r", 
                "gain_g", 
                "gain_b", 
                "offset_r", 
                "offset_g", 
                "offset_b"
            ]
        }
    }, 
    "DwaLayerMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaLayerMaterial", 
        "folders_sorted": [
            "Advanced", 
            "Glitter Fallback"
        ], 
        "parms": {
            "fallback_glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "fallback_glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "String", 
                "houdini_label": "Fallback Glitter Texture B", 
                "moonray_name": "fallback_glitter_texture_B", 
                "order": 20
            }, 
            "fallback_glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "fallback_glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).  This parameter will only be used when layering two distinct glitter materials.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Fallback Glitter Texture A", 
                "moonray_name": "fallback_glitter_texture_A", 
                "order": 18
            }, 
            "fallback_glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_seed", 
                "help": "The seed for the glitter random number generator.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "houdini_label": "Fallback Glitter Seed", 
                "moonray_name": "fallback_glitter_seed", 
                "order": 14
            }, 
            "fallback_toon_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_toon_specular_model", 
                "help": "If child materials disagree on the type of toon specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX", 
                    "Toon"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Toon Specular Model", 
                "moonray_name": "fallback_toon_specular_model", 
                "order": 8
            }, 
            "fallback_glitter_style_B_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fallback_glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Style B Frequency", 
                "bindable": true, 
                "moonray_name": "fallback_glitter_style_B_frequency", 
                "order": 19
            }, 
            "fallback_bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_bssrdf", 
                "help": "If child materials disagree on the type of bssrdf, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Bssrdf", 
                "moonray_name": "fallback_bssrdf", 
                "order": 6
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "fallback_glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "fallback_glitter_randomness", 
                "help": "randomness of flake orientation.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Randomness", 
                "moonray_name": "fallback_glitter_randomness", 
                "order": 16
            }, 
            "fallback_clearcoat_use_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "fallback_clearcoat_use_bending", 
                "help": "If child materials disagree on the type of clearcoat use bending, this type will be used instead.", 
                "moonray_type": "Bool", 
                "houdini_label": "Fallback Clearcoat Use Bending", 
                "moonray_name": "fallback_clearcoat_use_bending", 
                "order": 10
            }, 
            "fallback_glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_debug_mode", 
                "help": "developer debug visualization modes.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Fallback Glitter Debug Mode", 
                "moonray_name": "fallback_glitter_debug_mode", 
                "order": 23
            }, 
            "material_A": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material_A", 
                "help": "foreground material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material A", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material_A", 
                "order": 3, 
                "aliases": [
                    "material A"
                ]
            }, 
            "material_B": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material_B", 
                "help": "background material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material B", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material_B", 
                "order": 4, 
                "aliases": [
                    "material B"
                ]
            }, 
            "fallback_glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow).  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Glitter Layering Mode", 
                "moonray_name": "fallback_glitter_layering_mode", 
                "order": 22
            }, 
            "fallback_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_specular_model", 
                "help": "If child materials disagree on the type of specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Specular Model", 
                "moonray_name": "fallback_specular_model", 
                "order": 7
            }, 
            "fallback_thin_geometry": {
                "default_value": [
                    true
                ], 
                "houdini_name": "fallback_thin_geometry", 
                "help": "If child materials disagree on the type of thin geometry, this type will be used instead.", 
                "moonray_type": "Bool", 
                "houdini_label": "Fallback Thin Geometry", 
                "moonray_name": "fallback_thin_geometry", 
                "order": 11
            }, 
            "blend_color_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blend_color_space", 
                "help": "Color space used when blending the two material's color parameters", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV", 
                    "HSL"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Blend Color Space", 
                "moonray_name": "blend_color_space", 
                "order": 12
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "By default, only the geometry associated with this material contributes to subsurface. The DwaLayerMaterial ignores the sss trace sets of the submaterials. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 13, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "fallback_glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "fallback_glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter LOD Quality", 
                "moonray_name": "fallback_glitter_LOD_quality", 
                "order": 21, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "fallback_glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "fallback_glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Fallback Glitter Space", 
                "moonray_name": "fallback_glitter_space", 
                "order": 15
            }, 
            "mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mask", 
                "help": "foreground material weight", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "mask", 
                "order": 5
            }, 
            "fallback_outer_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_outer_specular_model", 
                "help": "If child materials disagree on the type of outer specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Outer Specular Model", 
                "moonray_name": "fallback_outer_specular_model", 
                "order": 9
            }, 
            "fallback_glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fallback_glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Style A Frequency", 
                "moonray_name": "fallback_glitter_style_A_frequency", 
                "order": 17
            }
        }, 
        "folders_with_parms": {
            "Glitter Fallback": [
                "fallback_glitter_seed", 
                "fallback_glitter_space", 
                "fallback_glitter_randomness", 
                "fallback_glitter_style_A_frequency", 
                "fallback_glitter_texture_A", 
                "fallback_glitter_style_B_frequency", 
                "fallback_glitter_texture_B", 
                "fallback_glitter_LOD_quality", 
                "fallback_glitter_layering_mode", 
                "fallback_glitter_debug_mode"
            ], 
            "Advanced": [
                "fallback_bssrdf", 
                "fallback_specular_model", 
                "fallback_toon_specular_model", 
                "fallback_outer_specular_model", 
                "fallback_clearcoat_use_bending", 
                "fallback_thin_geometry", 
                "blend_color_space", 
                "sss_trace_set"
            ]
        }
    }, 
    "ProjectTriplanarMap_v2": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectTriplanarMap_v2", 
        "folders_sorted": [
            "Positive X Modifiers", 
            "Positive Y Modifiers", 
            "Positive Z Modifiers", 
            "Negative X Modifiers", 
            "Negative Y Modifiers", 
            "Negative Z Modifiers"
        ], 
        "parms": {
            "positive_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert S", 
                "moonray_name": "positive_z_invert_s", 
                "order": 37, 
                "aliases": [
                    "positive z invert s"
                ]
            }, 
            "negative_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Scale", 
                "moonray_name": "negative_y_scale", 
                "order": 51, 
                "aliases": [
                    "negative y scale"
                ]
            }, 
            "negative_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Rotation Center", 
                "moonray_name": "negative_z_rotation_center", 
                "order": 65, 
                "aliases": [
                    "negative z rotation center"
                ]
            }, 
            "negative_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Swap St", 
                "moonray_name": "negative_y_swap_st", 
                "order": 55, 
                "aliases": [
                    "negative y swap st"
                ]
            }, 
            "input_normal": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_normal", 
                "help": "Bind normal data here", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Normal", 
                "bindable": true, 
                "moonray_name": "input_normal", 
                "order": 77
            }, 
            "negative_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative X Rotation", 
                "moonray_name": "negative_x_rotation", 
                "order": 48, 
                "aliases": [
                    "negative x rotation"
                ]
            }, 
            "randomize_flip": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_flip", 
                "help": "Rnd flipping in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Flip", 
                "moonray_name": "randomize_flip", 
                "order": 5, 
                "aliases": [
                    "randomize flip"
                ]
            }, 
            "positive_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Offset", 
                "moonray_name": "positive_y_offset", 
                "order": 28, 
                "aliases": [
                    "positive y offset"
                ]
            }, 
            "positive_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Wrap Around", 
                "moonray_name": "positive_x_wrap_around", 
                "order": 26, 
                "aliases": [
                    "positive x wrap around"
                ]
            }, 
            "negative_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert S", 
                "moonray_name": "negative_z_invert_s", 
                "order": 61, 
                "aliases": [
                    "negative z invert s"
                ]
            }, 
            "negative_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative X Texture", 
                "moonray_name": "negative_x_texture", 
                "order": 14, 
                "aliases": [
                    "negative x texture"
                ]
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 67
            }, 
            "positive_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert T", 
                "moonray_name": "positive_x_invert_t", 
                "order": 22, 
                "aliases": [
                    "positive x invert t"
                ]
            }, 
            "positive_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive X Rotation", 
                "moonray_name": "positive_x_rotation", 
                "order": 24, 
                "aliases": [
                    "positive x rotation"
                ]
            }, 
            "positive_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Y Texture", 
                "moonray_name": "positive_y_texture", 
                "order": 10, 
                "aliases": [
                    "positive y texture"
                ]
            }, 
            "positive_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Scale", 
                "moonray_name": "positive_y_scale", 
                "order": 27, 
                "aliases": [
                    "positive y scale"
                ]
            }, 
            "positive_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert S", 
                "moonray_name": "positive_x_invert_s", 
                "order": 21, 
                "aliases": [
                    "positive x invert s"
                ]
            }, 
            "negative_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Rotation Center", 
                "moonray_name": "negative_x_rotation_center", 
                "order": 49, 
                "aliases": [
                    "negative x rotation center"
                ]
            }, 
            "negative_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Wrap Around", 
                "moonray_name": "negative_z_wrap_around", 
                "order": 66, 
                "aliases": [
                    "negative z wrap around"
                ]
            }, 
            "positive_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert S", 
                "moonray_name": "positive_y_invert_s", 
                "order": 29, 
                "aliases": [
                    "positive y invert s"
                ]
            }, 
            "negative_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Scale", 
                "moonray_name": "negative_x_scale", 
                "order": 43, 
                "aliases": [
                    "negative x scale"
                ]
            }, 
            "negative_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Z Rotation", 
                "moonray_name": "negative_z_rotation", 
                "order": 64, 
                "aliases": [
                    "negative z rotation"
                ]
            }, 
            "positive_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert T", 
                "moonray_name": "positive_y_invert_t", 
                "order": 30, 
                "aliases": [
                    "positive y invert t"
                ]
            }, 
            "positive_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Rotation Center", 
                "moonray_name": "positive_z_rotation_center", 
                "order": 41, 
                "aliases": [
                    "positive z rotation center"
                ]
            }, 
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 69
            }, 
            "positive_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Swap St", 
                "moonray_name": "positive_y_swap_st", 
                "order": 31, 
                "aliases": [
                    "positive y swap st"
                ]
            }, 
            "positive_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Swap St", 
                "moonray_name": "positive_z_swap_st", 
                "order": 39, 
                "aliases": [
                    "positive z swap st"
                ]
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 68
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 71
            }, 
            "input_position": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_position", 
                "help": "Bind position data here", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Position", 
                "bindable": true, 
                "moonray_name": "input_position", 
                "order": 76
            }, 
            "positive_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert T", 
                "moonray_name": "positive_z_invert_t", 
                "order": 38, 
                "aliases": [
                    "positive z invert t"
                ]
            }, 
            "positive_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Offset", 
                "moonray_name": "positive_z_offset", 
                "order": 36, 
                "aliases": [
                    "positive z offset"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 70
            }, 
            "positive_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Rotation Center", 
                "moonray_name": "positive_y_rotation_center", 
                "order": 33, 
                "aliases": [
                    "positive y rotation center"
                ]
            }, 
            "negative_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Active", 
                "moonray_name": "negative_x_active", 
                "order": 13, 
                "aliases": [
                    "negative x active"
                ]
            }, 
            "positive_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Rotation Center", 
                "moonray_name": "positive_x_rotation_center", 
                "order": 25, 
                "aliases": [
                    "positive x rotation center"
                ]
            }, 
            "positive_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Active", 
                "moonray_name": "positive_y_active", 
                "order": 9, 
                "aliases": [
                    "positive y active"
                ]
            }, 
            "positive_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Swap St", 
                "moonray_name": "positive_x_swap_st", 
                "order": 23, 
                "aliases": [
                    "positive x swap st"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 72
            }, 
            "negative_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Offset", 
                "moonray_name": "negative_y_offset", 
                "order": 52, 
                "aliases": [
                    "negative y offset"
                ]
            }, 
            "negative_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert T", 
                "moonray_name": "negative_x_invert_t", 
                "order": 46, 
                "aliases": [
                    "negative x invert t"
                ]
            }, 
            "negative_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Offset", 
                "moonray_name": "negative_x_offset", 
                "order": 44, 
                "aliases": [
                    "negative x offset"
                ]
            }, 
            "negative_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Swap St", 
                "moonray_name": "negative_z_swap_st", 
                "order": 63, 
                "aliases": [
                    "negative z swap st"
                ]
            }, 
            "positive_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Active", 
                "moonray_name": "positive_x_active", 
                "order": 7, 
                "aliases": [
                    "positive x active"
                ]
            }, 
            "positive_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive X Texture", 
                "moonray_name": "positive_x_texture", 
                "order": 8, 
                "aliases": [
                    "positive x texture"
                ]
            }, 
            "random_seed": {
                "default_value": [
                    8241
                ], 
                "houdini_name": "random_seed", 
                "help": "Seed for randomizing orientation, offset, and flip", 
                "moonray_type": "Int", 
                "houdini_label": "Random Seed", 
                "moonray_name": "random_seed", 
                "order": 3, 
                "aliases": [
                    "random seed"
                ]
            }, 
            "positive_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Scale", 
                "moonray_name": "positive_z_scale", 
                "order": 35, 
                "aliases": [
                    "positive z scale"
                ]
            }, 
            "positive_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Z Rotation", 
                "moonray_name": "positive_z_rotation", 
                "order": 40, 
                "aliases": [
                    "positive z rotation"
                ]
            }, 
            "negative_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Scale", 
                "moonray_name": "negative_z_scale", 
                "order": 59, 
                "aliases": [
                    "negative z scale"
                ]
            }, 
            "negative_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Y Rotation", 
                "moonray_name": "negative_y_rotation", 
                "order": 56, 
                "aliases": [
                    "negative y rotation"
                ]
            }, 
            "transition_width": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "transition_width", 
                "help": "Controls blending of per-axis projections.   Valid range is 0.0 (no blending) to 1.0 (max blending)", 
                "moonray_type": "Float", 
                "houdini_label": "Transition Width", 
                "moonray_name": "transition_width", 
                "order": 2, 
                "aliases": [
                    "transition width"
                ]
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 73
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 74
            }, 
            "number_of_textures": {
                "default_value": [
                    3
                ], 
                "houdini_name": "number_of_textures", 
                "help": "Controls the number of active textures.   If set to 'one', only the 'pos x' texture settings will be used for all sides.   If set to 'three' the pos x, pos y, and pos z settings will be used for their respective negative sides.   If set to 'six', each side has independent controls and texture.", 
                "moonray_type": "Int", 
                "menu": [
                    "one", 
                    "three", 
                    "six"
                ], 
                "menu_values": [
                    "1", 
                    "3", 
                    "6"
                ], 
                "houdini_label": "Number Of Textures", 
                "moonray_name": "number_of_textures", 
                "order": 1, 
                "aliases": [
                    "number of textures"
                ]
            }, 
            "negative_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Wrap Around", 
                "moonray_name": "negative_x_wrap_around", 
                "order": 50, 
                "aliases": [
                    "negative x wrap around"
                ]
            }, 
            "positive_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Y Rotation", 
                "moonray_name": "positive_y_rotation", 
                "order": 32, 
                "aliases": [
                    "positive y rotation"
                ]
            }, 
            "positive_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Offset", 
                "moonray_name": "positive_x_offset", 
                "order": 20, 
                "aliases": [
                    "positive x offset"
                ]
            }, 
            "negative_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert S", 
                "moonray_name": "negative_x_invert_s", 
                "order": 45, 
                "aliases": [
                    "negative x invert s"
                ]
            }, 
            "negative_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Y Texture", 
                "moonray_name": "negative_y_texture", 
                "order": 16, 
                "aliases": [
                    "negative y texture"
                ]
            }, 
            "randomize_rotation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_rotation", 
                "help": "Rnd 2d rotation of each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Rotation", 
                "moonray_name": "randomize_rotation", 
                "order": 4, 
                "aliases": [
                    "randomize rotation"
                ]
            }, 
            "randomize_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_offset", 
                "help": "Rnd offset in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Offset", 
                "moonray_name": "randomize_offset", 
                "order": 6, 
                "aliases": [
                    "randomize offset"
                ]
            }, 
            "negative_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert T", 
                "moonray_name": "negative_z_invert_t", 
                "order": 62, 
                "aliases": [
                    "negative z invert t"
                ]
            }, 
            "negative_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Z Texture", 
                "moonray_name": "negative_z_texture", 
                "order": 18, 
                "aliases": [
                    "negative z texture"
                ]
            }, 
            "negative_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Swap St", 
                "moonray_name": "negative_x_swap_st", 
                "order": 47, 
                "aliases": [
                    "negative x swap st"
                ]
            }, 
            "positive_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Wrap Around", 
                "moonray_name": "positive_y_wrap_around", 
                "order": 34, 
                "aliases": [
                    "positive y wrap around"
                ]
            }, 
            "positive_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Scale", 
                "moonray_name": "positive_x_scale", 
                "order": 19, 
                "aliases": [
                    "positive x scale"
                ]
            }, 
            "positive_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Z Texture", 
                "moonray_name": "positive_z_texture", 
                "order": 12, 
                "aliases": [
                    "positive z texture"
                ]
            }, 
            "positive_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Active", 
                "moonray_name": "positive_z_active", 
                "order": 11, 
                "aliases": [
                    "positive z active"
                ]
            }, 
            "negative_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Active", 
                "moonray_name": "negative_y_active", 
                "order": 15, 
                "aliases": [
                    "negative y active"
                ]
            }, 
            "positive_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Wrap Around", 
                "moonray_name": "positive_z_wrap_around", 
                "order": 42, 
                "aliases": [
                    "positive z wrap around"
                ]
            }, 
            "negative_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Active", 
                "moonray_name": "negative_z_active", 
                "order": 17, 
                "aliases": [
                    "negative z active"
                ]
            }, 
            "negative_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Offset", 
                "moonray_name": "negative_z_offset", 
                "order": 60, 
                "aliases": [
                    "negative z offset"
                ]
            }, 
            "negative_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Wrap Around", 
                "moonray_name": "negative_y_wrap_around", 
                "order": 58, 
                "aliases": [
                    "negative y wrap around"
                ]
            }, 
            "negative_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert T", 
                "moonray_name": "negative_y_invert_t", 
                "order": 54, 
                "aliases": [
                    "negative y invert t"
                ]
            }, 
            "input_position_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "input_position_source", 
                "help": "Input position to use", 
                "moonray_type": "Int", 
                "menu": [
                    "P/N", 
                    "ref_P/ref_N", 
                    "input_position/input_normal"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Input Position Source", 
                "moonray_name": "input_position_source", 
                "order": 75
            }, 
            "negative_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Rotation Center", 
                "moonray_name": "negative_y_rotation_center", 
                "order": 57, 
                "aliases": [
                    "negative y rotation center"
                ]
            }, 
            "negative_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert S", 
                "moonray_name": "negative_y_invert_s", 
                "order": 53, 
                "aliases": [
                    "negative y invert s"
                ]
            }, 
            "gamma": {
                "default_value": [
                    2
                ], 
                "houdini_name": "gamma", 
                "help": "Controls application of gamma to images (off -0, on - 1, auto - 2).   Auto will apply gamma decoding to 8-bit images", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "on", 
                    "auto"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Negative Z Modifiers": [
                "negative_z_scale", 
                "negative_z_offset", 
                "negative_z_invert_s", 
                "negative_z_invert_t", 
                "negative_z_swap_st", 
                "negative_z_rotation", 
                "negative_z_rotation_center", 
                "negative_z_wrap_around"
            ], 
            "Positive X Modifiers": [
                "positive_x_scale", 
                "positive_x_offset", 
                "positive_x_invert_s", 
                "positive_x_invert_t", 
                "positive_x_swap_st", 
                "positive_x_rotation", 
                "positive_x_rotation_center", 
                "positive_x_wrap_around"
            ], 
            "Positive Y Modifiers": [
                "positive_y_scale", 
                "positive_y_offset", 
                "positive_y_invert_s", 
                "positive_y_invert_t", 
                "positive_y_swap_st", 
                "positive_y_rotation", 
                "positive_y_rotation_center", 
                "positive_y_wrap_around"
            ], 
            "Negative Y Modifiers": [
                "negative_y_scale", 
                "negative_y_offset", 
                "negative_y_invert_s", 
                "negative_y_invert_t", 
                "negative_y_swap_st", 
                "negative_y_rotation", 
                "negative_y_rotation_center", 
                "negative_y_wrap_around"
            ], 
            "Positive Z Modifiers": [
                "positive_z_scale", 
                "positive_z_offset", 
                "positive_z_invert_s", 
                "positive_z_invert_t", 
                "positive_z_swap_st", 
                "positive_z_rotation", 
                "positive_z_rotation_center", 
                "positive_z_wrap_around"
            ], 
            "Negative X Modifiers": [
                "negative_x_scale", 
                "negative_x_offset", 
                "negative_x_invert_s", 
                "negative_x_invert_t", 
                "negative_x_swap_st", 
                "negative_x_rotation", 
                "negative_x_rotation_center", 
                "negative_x_wrap_around"
            ]
        }
    }, 
    "HairColumnMap": {
        "moonray_type": "Map", 
        "moonray_name": "HairColumnMap", 
        "folders_sorted": [], 
        "parms": {}, 
        "folders_with_parms": {}
    }, 
    "DistortNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "DistortNormalMap", 
        "folders_sorted": [
            "Space"
        ], 
        "parms": {
            "input_V": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_V", 
                "help": "input V / bitangent for distortion", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input V", 
                "bindable": true, 
                "moonray_name": "input_V", 
                "order": 4
            }, 
            "input_normals": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normals", 
                "help": "optional input to distort. if not connected, use geom normals", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normals", 
                "interface": "NormalMap", 
                "moonray_name": "input_normals", 
                "order": 10
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 1, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "noise_space": {
                "default_value": [
                    4
                ], 
                "houdini_name": "noise_space", 
                "help": "The space to calculate the noise in", 
                "moonray_type": "Int", 
                "menu": [
                    "world", 
                    "object", 
                    "reference", 
                    "texture", 
                    "input texture coordinates", 
                    "hair_surface_uv", 
                    "hair_closest_surface_uv"
                ], 
                "menu_values": [
                    "2", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9"
                ], 
                "houdini_label": "Noise Space", 
                "moonray_name": "noise_space", 
                "order": 0
            }, 
            "frequency_U": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "frequency_U", 
                "help": "controls noise frequency for U distortion", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Frequency U", 
                "moonray_name": "frequency_U", 
                "order": 6
            }, 
            "frequency_V": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "frequency_V", 
                "help": "controls noise frequency for V distortion", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Frequency V", 
                "moonray_name": "frequency_V", 
                "order": 7
            }, 
            "use_input_vectors": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_input_vectors", 
                "help": "when checked, use input_U and V. otherwise use geometry dPds/t", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Input Vectors", 
                "moonray_name": "use_input_vectors", 
                "order": 2
            }, 
            "input_U": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_U", 
                "help": "input U / tangent for distortion", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input U", 
                "bindable": true, 
                "moonray_name": "input_U", 
                "order": 3
            }, 
            "amplitude_U": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "amplitude_U", 
                "help": "controls amplitude of U distortion", 
                "moonray_type": "Float", 
                "houdini_label": "Amplitude U", 
                "moonray_name": "amplitude_U", 
                "order": 8
            }, 
            "amplitude_V": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "amplitude_V", 
                "help": "controls amplitude of V distortion", 
                "moonray_type": "Float", 
                "houdini_label": "Amplitude V", 
                "moonray_name": "amplitude_V", 
                "order": 9
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "the seed for the noise generation", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 5
            }
        }, 
        "folders_with_parms": {
            "Space": [
                "noise_space", 
                "input_texture_coordinates"
            ]
        }
    }, 
    "ExtraAovMap": {
        "moonray_type": "Map", 
        "moonray_name": "ExtraAovMap", 
        "folders_sorted": [], 
        "parms": {
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "Bind the root of a map shader network that you want evaluated as an extra aov", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "color", 
                "order": 0
            }, 
            "post_scatter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "post_scatter", 
                "help": "If true, accumulate this aov when scattering off the surface as an indirect ray (after the LPE scatter transition event, after path throughput multiplication), rather than when the surface is first intersected.  The purpose of this setting is to efficiently capture information from all rays that leave a surface that could potentially intersect and trigger aov evaluation on other surfaces.", 
                "moonray_type": "Bool", 
                "houdini_label": "Post Scatter", 
                "moonray_name": "post_scatter", 
                "order": 2
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Sets the LPE label that is used for the extra aov", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaSwitchMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaSwitchMaterial", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "material32": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material32", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material32", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material32", 
                "order": 36
            }, 
            "material58": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material58", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material58", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material58", 
                "order": 62
            }, 
            "material59": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material59", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material59", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material59", 
                "order": 63
            }, 
            "material56": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material56", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material56", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material56", 
                "order": 60
            }, 
            "material57": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material57", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material57", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material57", 
                "order": 61
            }, 
            "material54": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material54", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material54", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material54", 
                "order": 58
            }, 
            "material33": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material33", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material33", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material33", 
                "order": 37
            }, 
            "material52": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material52", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material52", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material52", 
                "order": 56
            }, 
            "material53": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material53", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material53", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material53", 
                "order": 57
            }, 
            "material50": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material50", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material50", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material50", 
                "order": 54
            }, 
            "material51": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material51", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material51", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material51", 
                "order": 55
            }, 
            "material12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material12", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material12", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material12", 
                "order": 16
            }, 
            "material13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material13", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material13", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material13", 
                "order": 17
            }, 
            "material10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material10", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material10", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material10", 
                "order": 14
            }, 
            "material11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material11", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material11", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material11", 
                "order": 15
            }, 
            "material16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material16", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material16", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material16", 
                "order": 20
            }, 
            "material17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material17", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material17", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material17", 
                "order": 21
            }, 
            "material14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material14", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material14", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material14", 
                "order": 18
            }, 
            "material15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material15", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material15", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material15", 
                "order": 19
            }, 
            "material63": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material63", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material63", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material63", 
                "order": 67
            }, 
            "material18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material18", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material18", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material18", 
                "order": 22
            }, 
            "material19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material19", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material19", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material19", 
                "order": 23
            }, 
            "material38": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material38", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material38", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material38", 
                "order": 42
            }, 
            "material39": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material39", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material39", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material39", 
                "order": 43
            }, 
            "material48": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material48", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material48", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material48", 
                "order": 52
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "material46": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material46", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material46", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material46", 
                "order": 50
            }, 
            "material45": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material45", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material45", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material45", 
                "order": 49
            }, 
            "fallback_bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_bssrdf", 
                "help": "If the two materials disagree on the type of bssrdf, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Bssrdf", 
                "moonray_name": "fallback_bssrdf", 
                "order": 68
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "material0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material0", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material0", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material0", 
                "order": 4
            }, 
            "material1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material1", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material1", 
                "order": 5
            }, 
            "material2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material2", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material2", 
                "order": 6
            }, 
            "material3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material3", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material3", 
                "order": 7
            }, 
            "material4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material4", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material4", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material4", 
                "order": 8
            }, 
            "material5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material5", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material5", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material5", 
                "order": 9
            }, 
            "material6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material6", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material6", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material6", 
                "order": 10
            }, 
            "material7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material7", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material7", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material7", 
                "order": 11
            }, 
            "material8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material8", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material8", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material8", 
                "order": 12
            }, 
            "material9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material9", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material9", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material9", 
                "order": 13
            }, 
            "material62": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material62", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material62", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material62", 
                "order": 66
            }, 
            "material47": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material47", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material47", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material47", 
                "order": 51
            }, 
            "material55": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material55", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material55", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material55", 
                "order": 59
            }, 
            "material41": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material41", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material41", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material41", 
                "order": 45
            }, 
            "material42": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material42", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material42", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material42", 
                "order": 46
            }, 
            "material29": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material29", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material29", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material29", 
                "order": 33
            }, 
            "material28": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material28", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material28", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material28", 
                "order": 32
            }, 
            "material49": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material49", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material49", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material49", 
                "order": 53
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "material61": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material61", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material61", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material61", 
                "order": 65
            }, 
            "material60": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material60", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material60", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material60", 
                "order": 64
            }, 
            "material23": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material23", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material23", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material23", 
                "order": 27
            }, 
            "material22": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material22", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material22", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material22", 
                "order": 26
            }, 
            "material21": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material21", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material21", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material21", 
                "order": 25
            }, 
            "material20": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material20", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material20", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material20", 
                "order": 24
            }, 
            "material27": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material27", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material27", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material27", 
                "order": 31
            }, 
            "material26": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material26", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material26", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material26", 
                "order": 30
            }, 
            "material25": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material25", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material25", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material25", 
                "order": 29
            }, 
            "choice": {
                "default_value": [
                    0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use", 
                "moonray_type": "Int", 
                "houdini_label": "Choice", 
                "moonray_name": "choice", 
                "order": 3
            }, 
            "material43": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material43", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material43", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material43", 
                "order": 47
            }, 
            "material24": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material24", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material24", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material24", 
                "order": 28
            }, 
            "material40": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material40", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material40", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material40", 
                "order": 44
            }, 
            "material34": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material34", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material34", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material34", 
                "order": 38
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "By default, only the geometry associated with this material contributes to subsurface. The DwaSwitchMaterial ignores the sss trace sets of the submaterials. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 69, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "material44": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material44", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material44", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material44", 
                "order": 48
            }, 
            "material35": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material35", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material35", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material35", 
                "order": 39
            }, 
            "material36": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material36", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material36", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material36", 
                "order": 40
            }, 
            "material37": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material37", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material37", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material37", 
                "order": 41
            }, 
            "material30": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material30", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material30", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material30", 
                "order": 34
            }, 
            "material31": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material31", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material31", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material31", 
                "order": 35
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "fallback_bssrdf", 
                "sss_trace_set"
            ]
        }
    }, 
    "DeformationMap": {
        "moonray_type": "Map", 
        "moonray_name": "DeformationMap", 
        "folders_sorted": [], 
        "parms": {
            "use_warning_color": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_warning_color", 
                "help": "If derivatives are missing or zero output the warning color erroring out", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Warning Color", 
                "moonray_name": "use_warning_color", 
                "order": 1
            }, 
            "output_mode": {
                "default_value": [
                    3
                ], 
                "houdini_name": "output_mode", 
                "help": "Controls output: \n\t\t    RGB - R = deformation along S, G = deformation along T, B = average deformation from ref space \n\t\t    deformation_S - deformation along S \n\t\t    deformation_T - deformation along T \n\t\t    deformation_avg - average deformation from ref space", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "deformation_S", 
                    "deformation_T", 
                    "deformation_avg"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Output Mode", 
                "moonray_name": "output_mode", 
                "order": 0
            }, 
            "warning_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "warning_color", 
                "help": "Warning color to output when derivatives are missing or zero", 
                "moonray_type": "Rgb", 
                "houdini_label": "Warning Color", 
                "bindable": true, 
                "moonray_name": "warning_color", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "EnvLight": {
        "moonray_type": "Light", 
        "moonray_name": "EnvLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "sample_upper_hemisphere_only": {
                "default_value": [
                    false
                ], 
                "houdini_name": "sample_upper_hemisphere_only", 
                "help": "Set this to true if you want the EnvLight to illuminate from only the \"upper\" hemisphere, defined as the hemisphere centered around the light's positive local z-axis direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Sample Upper Hemisphere Only", 
                "moonray_name": "sample_upper_hemisphere_only", 
                "order": 34, 
                "aliases": [
                    "sample upper hemisphere only"
                ]
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color", 
                "sample_upper_hemisphere_only"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "RectLight": {
        "moonray_type": "Light", 
        "moonray_name": "RectLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 42
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "height": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "height", 
                "help": "The height of the rectangle, i.e. the size measured in the light's local y-direction.", 
                "moonray_type": "Float", 
                "houdini_label": "Height", 
                "moonray_name": "height", 
                "order": 37
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 41
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "sidedness": {
                "default_value": [
                    0
                ], 
                "houdini_name": "sidedness", 
                "help": "When set to 0 (regular), light is emitted from the front-facing surface of the disk. When set to 1 (reverse), light is emitted from the back-facing surface of the disk. When set to 2 (2-sided), light is emitted from both surfaces of the disk.", 
                "moonray_type": "Int", 
                "menu": [
                    "regular", 
                    "reverse", 
                    "2-sided"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Sidedness", 
                "moonray_name": "sidedness", 
                "order": 39
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "width": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "width", 
                "help": "The width of the rectangle, i.e. the size measured in the light's local x-direction.", 
                "moonray_type": "Float", 
                "houdini_label": "Width", 
                "moonray_name": "width", 
                "order": 36
            }, 
            "spread": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "spread", 
                "help": "The directionality of light emission. 1 is completely diffuse hemisphere. 0 is parallel to normal of light.", 
                "moonray_type": "Float", 
                "houdini_label": "Spread", 
                "moonray_name": "spread", 
                "order": 38
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 40
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "width", 
                "height", 
                "spread", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "DwaToonMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaToonMaterial", 
        "folders_sorted": [
            "Fuzz", 
            "Clearcoat", 
            "Glitter", 
            "Specular", 
            "Iridescence", 
            "Diffuse", 
            "Transmission", 
            "Emission", 
            "Normal", 
            "Normal Anti-aliasing", 
            "Common", 
            "Advanced"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 142, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "colors": {
                "default_value": [
                    [
                        1.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.75, 
                        0.75, 
                        0.75
                    ], 
                    [
                        0.25, 
                        0.25, 
                        0.25
                    ], 
                    [
                        0.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "colors", 
                "order": 95, 
                "ramp_parm_name": "ramp"
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 84, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "show_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_clearcoat", 
                "help": "enables/disables clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Clearcoat", 
                "moonray_name": "show_clearcoat", 
                "order": 10, 
                "aliases": [
                    "show clearcoat"
                ]
            }, 
            "positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "positions", 
                "help": "ramp positions, maximum 10 allowed", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "positions", 
                "order": 94, 
                "ramp_parm_name": "ramp"
            }, 
            "metallic": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "metallic", 
                "help": "enables/disables metallic model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Metallic", 
                "bindable": true, 
                "moonray_name": "metallic", 
                "order": 53
            }, 
            "diffuse_model": {
                "default_value": [
                    0
                ], 
                "houdini_name": "diffuse_model", 
                "help": "The method used to render the diffuse response.", 
                "moonray_type": "Int", 
                "menu": [
                    "oren-nayar", 
                    "ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "diffuse_model", 
                "order": 87
            }, 
            "specular": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "specular", 
                "help": "enables/disables specular reflections (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Specular", 
                "bindable": true, 
                "moonray_name": "specular", 
                "order": 143
            }, 
            "transmission_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "transmission_color", 
                "help": "the desired color of transmitted light", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "transmission_color", 
                "order": 127, 
                "aliases": [
                    "transmission color"
                ]
            }, 
            "prevent_light_culling": {
                "default_value": [
                    false
                ], 
                "houdini_name": "prevent_light_culling", 
                "help": "WARNING: Experimental and must be used with max_depth: 0 and only for non-photoreal looks. Prevents culling of lights so surfaces can be lit purely with respect to the shading normal irrespective of geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Prevent Light Culling", 
                "moonray_name": "prevent_light_culling", 
                "order": 144
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 23
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "toon_specular_indirect_reflections_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "toon_specular_indirect_reflections_roughness", 
                "help": "the roughness for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Indirect Reflections Roughness", 
                "bindable": true, 
                "moonray_name": "toon_specular_indirect_reflections_roughness", 
                "order": 71
            }, 
            "independent_transmission_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "independent_transmission_roughness", 
                "help": "separate roughness for transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Roughness", 
                "bindable": true, 
                "moonray_name": "independent_transmission_roughness", 
                "order": 131
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 82, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 21
            }, 
            "ramp_color_multiplier2": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier2", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier2", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier2", 
                "order": 99
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 134, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "iridescence_color_control": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_color_control", 
                "help": "use hue interpolation: automatically cycles through hue wheel, use ramp: user specified color ramp", 
                "moonray_type": "Int", 
                "menu": [
                    "use hue interpolation", 
                    "use ramp"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Color Control", 
                "moonray_name": "iridescence_color_control", 
                "order": 74
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 25
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 31
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 36
            }, 
            "clearcoat_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clearcoat_bending", 
                "help": "(advanced, recommended ON) bends rays based on the clearcoat-refractive-index before evaluating the lobes under clearcoat", 
                "moonray_type": "Bool", 
                "houdini_label": "Bending", 
                "moonray_name": "clearcoat_bending", 
                "order": 17, 
                "aliases": [
                    "clearcoat bending"
                ]
            }, 
            "enable_sss_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_sss_input_normal", 
                "help": "enables sampling the normal map for sss samples. More accurate but potentially expensive", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Sss Input Normal", 
                "moonray_name": "enable_sss_input_normal", 
                "order": 120, 
                "aliases": [
                    "enable sss input normal"
                ]
            }, 
            "ramp_color_multiplier0": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier0", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier0", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier0", 
                "order": 97
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "Set of geometries that contribute neighboring subsurface points. By default, only the geometry associated with this material contributes to subsurface. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 145, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 141, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "transmission": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "transmission", 
                "help": "enables/disables refractive solid model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "transmission", 
                "order": 125
            }, 
            "toon_specular_values": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "toon_specular_values", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Toon Specular Values", 
                "moonray_name": "toon_specular_values", 
                "order": 64, 
                "ramp_parm_name": "toon_specular_ramp"
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "help": "controls the shape of the primary reflection", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 51
            }, 
            "ramp_color_multiplier7": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier7", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier7", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier7", 
                "order": 104
            }, 
            "bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bssrdf", 
                "help": "0 for NormalizedDiffuse, 1 for Dipole, 2 for random walk", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bssrdf", 
                "moonray_name": "bssrdf", 
                "order": 117
            }, 
            "ramp_position_offset1": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset1", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset1", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset1", 
                "order": 108
            }, 
            "ramp_color_multiplier8": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier8", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier8", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier8", 
                "order": 105
            }, 
            "ramp_position_offset3": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset3", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset3", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset3", 
                "order": 110
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 44
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 35
            }, 
            "ramp_position_offset4": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset4", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset4", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset4", 
                "order": 111
            }, 
            "ramp_position_offset7": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset7", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset7", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset7", 
                "order": 114
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 30
            }, 
            "ramp_position_offset9": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset9", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset9", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset9", 
                "order": 116
            }, 
            "ramp_position_offset8": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset8", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset8", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset8", 
                "order": 115
            }, 
            "toon_specular_indirect_reflections_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "toon_specular_indirect_reflections_intensity", 
                "help": "the intensity for the indirect reflections of the toon specular model", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Indirect Reflections Intensity", 
                "bindable": true, 
                "moonray_name": "toon_specular_indirect_reflections_intensity", 
                "order": 70
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 32
            }, 
            "iridescence_apply_to": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_apply_to", 
                "help": "Apply iridescence to primary specular lobe or clearcoat/moisture lobe", 
                "moonray_type": "Int", 
                "menu": [
                    "primary specular", 
                    "clearcoat/moisture specular"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Apply To", 
                "moonray_name": "iridescence_apply_to", 
                "order": 73
            }, 
            "fuzz_roughness": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_roughness", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "fuzz_roughness", 
                "order": 5, 
                "aliases": [
                    "fuzz_coverage"
                ]
            }, 
            "use_independent_clearcoat_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_clearcoat_normal", 
                "help": "specifies whether the clearcoat lobe should use an independent normal", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Clearcoat Normal", 
                "moonray_name": "use_independent_clearcoat_normal", 
                "order": 18, 
                "aliases": [
                    "use independent clearcoat normal"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 137, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "toon_specular_input_U": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "toon_specular_input_U", 
                "help": "input U / tangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Toon Specular Input U", 
                "bindable": true, 
                "moonray_name": "toon_specular_input_U", 
                "order": 61
            }, 
            "toon_specular_input_V": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "toon_specular_input_V", 
                "help": "input V / bitangent for specular stretch", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Toon Specular Input V", 
                "bindable": true, 
                "moonray_name": "toon_specular_input_V", 
                "order": 62
            }, 
            "iridescence_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "iridescence_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_interpolations", 
                "order": 81, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "ramp_position_offset0": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset0", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset0", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset0", 
                "order": 107
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 83, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "clearcoat_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "clearcoat_model", 
                "help": "sets the normal distribution function for clearcoat.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "clearcoat_model", 
                "order": 12, 
                "aliases": [
                    "clearcoat model"
                ]
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 46
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "iridescence_at_90_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_90_incidence", 
                "help": "Iridescence effect at 90 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 90 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_90_incidence", 
                "order": 85, 
                "aliases": [
                    "iridescence at 90 incidence"
                ]
            }, 
            "specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "specular_model", 
                "help": "sets the normal distribution function for specular.  GGX is currently isotropic only", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX", 
                    "Toon"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Model", 
                "moonray_name": "specular_model", 
                "order": 48, 
                "aliases": [
                    "specular model"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 42
            }, 
            "ramp_position_offset5": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset5", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset5", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset5", 
                "order": 112
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 86, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "scattering_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scattering_color", 
                "help": "the subsurface scattering 'falloff' color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Scattering Color", 
                "bindable": true, 
                "moonray_name": "scattering_color", 
                "order": 118, 
                "aliases": [
                    "scattering color"
                ]
            }, 
            "ramp_position_offset6": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset6", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset6", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset6", 
                "order": 113
            }, 
            "use_independent_transmission_refractive_index": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_refractive_index", 
                "help": "use a separate IOR for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Refractive Index", 
                "moonray_name": "use_independent_transmission_refractive_index", 
                "order": 128, 
                "aliases": [
                    "use independent transmission refractive index"
                ]
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 43
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 40, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "toon_specular_use_input_vectors_for_stretch": {
                "default_value": [
                    false
                ], 
                "houdini_name": "toon_specular_use_input_vectors_for_stretch", 
                "help": "when checked, use input_U and V. otherwise use geometry dPds/t", 
                "moonray_type": "Bool", 
                "houdini_label": "Toon Specular Use Input Vectors For Stretch", 
                "moonray_name": "toon_specular_use_input_vectors_for_stretch", 
                "order": 60
            }, 
            "clearcoat_thickness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clearcoat_thickness", 
                "help": "the thickness of the virtual clearcoat layer. Values > 0 enable absorption", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "clearcoat_thickness", 
                "order": 15, 
                "aliases": [
                    "clearcoat thickness"
                ]
            }, 
            "toon_specular_input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "toon_specular_input_normal", 
                "help": "specifies an alternate shading normal for toon toon specular", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Toon Specular Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "toon_specular_input_normal", 
                "order": 67
            }, 
            "iridescence_colors": {
                "default_value": [
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ], 
                    [
                        1.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        0.0
                    ], 
                    [
                        0.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        1.0
                    ], 
                    [
                        1.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "iridescence_colors", 
                "help": "List of colors on the ramp", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_colors", 
                "order": 80, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "toon_specular_interpolations": {
                "default_value": [
                    4, 
                    4, 
                    4, 
                    4
                ], 
                "houdini_name": "toon_specular_interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Toon Specular Interpolations", 
                "moonray_name": "toon_specular_interpolations", 
                "order": 65, 
                "ramp_parm_name": "toon_specular_ramp"
            }, 
            "diffuse_flatness_falloff": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_flatness_falloff", 
                "help": "Fades out flatness with respect to light direction", 
                "moonray_type": "Float", 
                "houdini_label": "Flatness Falloff", 
                "bindable": true, 
                "moonray_name": "diffuse_flatness_falloff", 
                "order": 92
            }, 
            "toon_specular_intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "toon_specular_intensity", 
                "help": "The overall intensity of the toon specular response", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Intensity", 
                "bindable": true, 
                "moonray_name": "toon_specular_intensity", 
                "order": 56
            }, 
            "toon_specular_enable_input_normal": {
                "default_value": [
                    false
                ], 
                "houdini_name": "toon_specular_enable_input_normal", 
                "help": "enables sampling the normal map for toon toon specular", 
                "moonray_type": "Bool", 
                "houdini_label": "Toon Specular Enable Input Normal", 
                "moonray_name": "toon_specular_enable_input_normal", 
                "order": 66
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 140
            }, 
            "normal_AA_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_AA_dial", 
                "help": "Controls the amount roughness compensation from the normal map AA strategy.", 
                "moonray_type": "Float", 
                "houdini_label": "Normal AA Dial", 
                "moonray_name": "normal_AA_dial", 
                "order": 139
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 27
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 39, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "toon_specular_positions": {
                "default_value": [
                    0.0, 
                    0.25, 
                    0.75, 
                    1.0
                ], 
                "houdini_name": "toon_specular_positions", 
                "help": "ramp positions, maximum 10 allowed", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Toon Specular Positions", 
                "moonray_name": "toon_specular_positions", 
                "order": 63, 
                "ramp_parm_name": "toon_specular_ramp"
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 37
            }, 
            "metallic_edge_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_edge_color", 
                "help": "the reflection color at grazing angles, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Edge Color", 
                "bindable": true, 
                "moonray_name": "metallic_edge_color", 
                "order": 55, 
                "aliases": [
                    "metallic edge color"
                ]
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 22
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "help": "flip interpolation around the hue wheel to counter-clockwise direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 77, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "terminator_shift": {
                "default_value": [
                    0.05
                ], 
                "houdini_name": "terminator_shift", 
                "help": "Controls how the diffuse ligthing falls off.  Values greater than 0.0 shift the falloff point closer to the light source and values less than 0.0 shift the falloff point further away", 
                "moonray_type": "Float", 
                "houdini_label": "Terminator Shift", 
                "bindable": true, 
                "moonray_name": "terminator_shift", 
                "order": 90
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 34
            }, 
            "iridescence_ramp_interpolation_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "iridescence_ramp_interpolation_mode", 
                "help": "RGB: lerp in RGB space which matches UI preview but can lose saturation, HSV: lerp in HSV space which preserves saturation", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Ramp Interpolation Mode", 
                "moonray_name": "iridescence_ramp_interpolation_mode", 
                "order": 78
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 29
            }, 
            "use_independent_transmission_roughness": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_roughness", 
                "help": "use a separate roughness for transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Roughness", 
                "moonray_name": "use_independent_transmission_roughness", 
                "order": 130
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "clearcoat_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat_normal_dial", 
                "help": "controls the amount of infuence of the alternate clearcoat normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "clearcoat_normal_dial", 
                "order": 20, 
                "aliases": [
                    "clearcoat normal dial"
                ]
            }, 
            "iridescence_positions": {
                "default_value": [
                    0.0, 
                    0.167, 
                    0.333, 
                    0.5, 
                    0.667, 
                    0.833, 
                    1.0
                ], 
                "houdini_name": "iridescence_positions", 
                "help": "ramp positions", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Positions", 
                "ramp_is_color": true, 
                "moonray_name": "iridescence_positions", 
                "order": 79, 
                "ramp_parm_name": "iridescence_ramp"
            }, 
            "toon_specular_stretch_u": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "toon_specular_stretch_u", 
                "help": "Amount to stretch or compress the specular in the u direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Stretch U", 
                "bindable": true, 
                "moonray_name": "toon_specular_stretch_u", 
                "order": 58
            }, 
            "toon_specular_stretch_v": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "toon_specular_stretch_v", 
                "help": "Amount to stretch or compress the specular in the v direction ", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Stretch V", 
                "bindable": true, 
                "moonray_name": "toon_specular_stretch_v", 
                "order": 59
            }, 
            "clearcoat_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "clearcoat_roughness", 
                "help": "the roughness of the clearcoat lobe", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "clearcoat_roughness", 
                "order": 14, 
                "aliases": [
                    "clearcoat roughness"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 45, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 135, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "metallic_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "metallic_color", 
                "help": "the overall reflection color, defines Fresnel behavior", 
                "moonray_type": "Rgb", 
                "houdini_label": "Metallic Color", 
                "bindable": true, 
                "moonray_name": "metallic_color", 
                "order": 54, 
                "aliases": [
                    "metallic color"
                ]
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 136, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 122
            }, 
            "clearcoat_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "clearcoat_refractive_index", 
                "help": "defines the Fresnel behavior", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "clearcoat_refractive_index", 
                "order": 13, 
                "aliases": [
                    "clearcoat refractive index"
                ]
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 89
            }, 
            "show_fuzz": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "ramp_color_multiplier1": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier1", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier1", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier1", 
                "order": 98
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "ramp_color_multiplier3": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier3", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier3", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier3", 
                "order": 100
            }, 
            "ramp_color_multiplier4": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier4", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier4", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier4", 
                "order": 101
            }, 
            "ramp_color_multiplier5": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier5", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier5", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier5", 
                "order": 102
            }, 
            "ramp_color_multiplier6": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier6", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier6", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier6", 
                "order": 103
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 24
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 33
            }, 
            "ramp_color_multiplier9": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "ramp_color_multiplier9", 
                "help": "Bindable multiplier on the ramp color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Ramp Color Multiplier9", 
                "bindable": true, 
                "moonray_name": "ramp_color_multiplier9", 
                "order": 106
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_primary_color", 
                "order": 75, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "toon_specular_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "toon_specular_tint", 
                "moonray_type": "Rgb", 
                "houdini_label": "Toon Specular Tint", 
                "bindable": true, 
                "moonray_name": "toon_specular_tint", 
                "order": 57
            }, 
            "independent_transmission_refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "independent_transmission_refractive_index", 
                "help": "defines a separate IOR for the bending of light with transmission", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Refractive Index", 
                "moonray_name": "independent_transmission_refractive_index", 
                "order": 129, 
                "aliases": [
                    "independent transmission refractive index"
                ]
            }, 
            "dispersion_abbe_number": {
                "default_value": [
                    34.0
                ], 
                "houdini_name": "dispersion_abbe_number", 
                "help": "The amount of dispersion/chromatic-aberration via refractions. Lower this number to increase the effect. A value of 0 turns off dispersion. Around [25-80] makes sense for realistic glass. Lower values may look better on gemstones.", 
                "moonray_type": "Float", 
                "houdini_label": "Dispersion Abbe Number", 
                "moonray_name": "dispersion_abbe_number", 
                "order": 133
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "bindable": true, 
                "moonray_name": "iridescence_secondary_color", 
                "order": 76, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 41
            }, 
            "toon_specular_enable_indirect_reflections": {
                "default_value": [
                    false
                ], 
                "houdini_name": "toon_specular_enable_indirect_reflections", 
                "help": "enables indirect GGX reflections for toon specular model", 
                "moonray_type": "Bool", 
                "houdini_label": "Toon Specular Enable Indirect Reflections", 
                "moonray_name": "toon_specular_enable_indirect_reflections", 
                "order": 69
            }, 
            "clearcoat": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clearcoat", 
                "help": "enables/disables clearcoat (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Clearcoat", 
                "bindable": true, 
                "moonray_name": "clearcoat", 
                "order": 11
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 88
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 28
            }, 
            "clearcoat_attenuation_color": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "clearcoat_attenuation_color", 
                "help": "the attenuation color of the clearcoat when 'cleacoat thickness' > 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Attenuation Color", 
                "bindable": true, 
                "moonray_name": "clearcoat_attenuation_color", 
                "order": 16, 
                "aliases": [
                    "clearcoat attenuation color"
                ]
            }, 
            "toon_specular_input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "toon_specular_input_normal_dial", 
                "help": "controls influence of input normal versus hair normal for toon toon specular", 
                "moonray_type": "Float", 
                "houdini_label": "Toon Specular Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "toon_specular_input_normal_dial", 
                "order": 68
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 124, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "roughness", 
                "help": "the roughness of the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "roughness", 
                "order": 49
            }, 
            "independent_clearcoat_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "independent_clearcoat_normal", 
                "help": "specifies an independent shading normal (normal map) for the clearcoat lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Independent Clearcoat Normal", 
                "interface": "NormalMap", 
                "moonray_name": "independent_clearcoat_normal", 
                "order": 19, 
                "aliases": [
                    "independent clearcoat normal"
                ]
            }, 
            "shading_tangent": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "shading_tangent", 
                "help": "controls the orientation of anistropy", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Shading Tangent", 
                "bindable": true, 
                "moonray_name": "shading_tangent", 
                "order": 52, 
                "aliases": [
                    "shading tangent"
                ]
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 38
            }, 
            "extend_ramp": {
                "default_value": [
                    false
                ], 
                "houdini_name": "extend_ramp", 
                "help": "Extends the last ramp color to unlit portions. IMPORTANT: Only works in conjuction with prevent_light_culling ON and visible_shadows OFF", 
                "moonray_type": "Bool", 
                "houdini_label": "Extend Ramp", 
                "moonray_name": "extend_ramp", 
                "order": 93
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "iridescence": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "iridescence", 
                "help": "controls the strength of the iridescence effect", 
                "moonray_type": "Float", 
                "houdini_label": "Iridescence", 
                "bindable": true, 
                "moonray_name": "iridescence", 
                "order": 72
            }, 
            "scattering_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "scattering_radius", 
                "help": "the distance the light scatters beneath the surface. When 0 surface diffuse (lambertian or toon) is used", 
                "moonray_type": "Float", 
                "houdini_label": "Scattering Radius", 
                "bindable": true, 
                "moonray_name": "scattering_radius", 
                "order": 119, 
                "aliases": [
                    "scattering radius"
                ]
            }, 
            "resolve_self_intersections": {
                "default_value": [
                    true
                ], 
                "houdini_name": "resolve_self_intersections", 
                "help": "tries to resolve self-intersecting geometry automatically by only evaluating 'exiting' intersections for subsurface evaluations", 
                "moonray_type": "Bool", 
                "houdini_label": "Resolve Self Intersections", 
                "moonray_name": "resolve_self_intersections", 
                "order": 121
            }, 
            "normal_AA_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_AA_strategy", 
                "help": "Normal map anti-aliasing strategy to use - 'none' uses regular mip-mapping, 'toksvig' increases specular roughness corresponding to the geometric details filtered out because of mip-mapping.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "toksvig"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal AA Strategy", 
                "moonray_name": "normal_AA_strategy", 
                "order": 138
            }, 
            "show_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_transmission", 
                "help": "enables/disables refractive solid model", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Transmission", 
                "moonray_name": "show_transmission", 
                "order": 126, 
                "aliases": [
                    "show transmission"
                ]
            }, 
            "ramp_position_offset2": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ramp_position_offset2", 
                "help": "Bindable offset to the ramp-position, add a small variation using noise etc for art-directable ramp thresholds", 
                "moonray_type": "Float", 
                "houdini_label": "Ramp Position Offset2", 
                "bindable": true, 
                "moonray_name": "ramp_position_offset2", 
                "order": 109
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 123, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 26
            }, 
            "use_dispersion": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_dispersion", 
                "help": "use dispersion effects in transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Dispersion", 
                "moonray_name": "use_dispersion", 
                "order": 132
            }, 
            "interpolations": {
                "default_value": [
                    0, 
                    0, 
                    0, 
                    0
                ], 
                "houdini_name": "interpolations", 
                "help": "None: 0 | Linear: 1 | Exponential Up: 2 | Exponential Down: 3 |\n\t\t\tSmooth: 4 | Catmull Rom: 5 | Monotone Cubic: 6", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolations", 
                "ramp_is_color": true, 
                "moonray_name": "interpolations", 
                "order": 96, 
                "ramp_parm_name": "ramp"
            }, 
            "show_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_specular", 
                "help": "enables/disables specular reflections", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Specular", 
                "moonray_name": "show_specular", 
                "order": 47, 
                "aliases": [
                    "show specular"
                ]
            }, 
            "diffuse_flatness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_flatness", 
                "help": "Flattens out the diffuse response by bending the normal towards the light direction", 
                "moonray_type": "Float", 
                "houdini_label": "Flatness", 
                "bindable": true, 
                "moonray_name": "diffuse_flatness", 
                "order": 91
            }, 
            "refractive_index": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "refractive_index", 
                "help": "defines the Fresnel behavior (affects only refraction when model is Toon)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 50, 
                "aliases": [
                    "refractive index"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Transmission": [
                "transmission", 
                "show_transmission", 
                "transmission_color", 
                "use_independent_transmission_refractive_index", 
                "independent_transmission_refractive_index", 
                "use_independent_transmission_roughness", 
                "independent_transmission_roughness", 
                "use_dispersion", 
                "dispersion_abbe_number"
            ], 
            "Normal Anti-aliasing": [
                "normal_AA_strategy", 
                "normal_AA_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_apply_to", 
                "iridescence_color_control", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_ramp_interpolation_mode", 
                "iridescence_ramp", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence", 
                "iridescence_at_90_incidence"
            ], 
            "Specular": [
                "show_specular", 
                "specular_model", 
                "roughness", 
                "refractive_index", 
                "anisotropy", 
                "shading_tangent", 
                "metallic", 
                "metallic_color", 
                "metallic_edge_color", 
                "toon_specular_intensity", 
                "toon_specular_tint", 
                "toon_specular_stretch_u", 
                "toon_specular_stretch_v", 
                "toon_specular_use_input_vectors_for_stretch", 
                "toon_specular_input_U", 
                "toon_specular_input_V", 
                "toon_specular_ramp", 
                "toon_specular_enable_input_normal", 
                "toon_specular_input_normal", 
                "toon_specular_input_normal_dial", 
                "toon_specular_enable_indirect_reflections", 
                "toon_specular_indirect_reflections_intensity", 
                "toon_specular_indirect_reflections_roughness"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_roughness", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Clearcoat": [
                "show_clearcoat", 
                "clearcoat", 
                "clearcoat_model", 
                "clearcoat_refractive_index", 
                "clearcoat_roughness", 
                "clearcoat_thickness", 
                "clearcoat_attenuation_color", 
                "clearcoat_bending", 
                "use_independent_clearcoat_normal", 
                "independent_clearcoat_normal", 
                "clearcoat_normal_dial"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "show_diffuse", 
                "diffuse_model", 
                "albedo", 
                "diffuse_roughness", 
                "terminator_shift", 
                "diffuse_flatness", 
                "diffuse_flatness_falloff", 
                "extend_ramp", 
                "ramp", 
                "ramp_color_multiplier0", 
                "ramp_color_multiplier1", 
                "ramp_color_multiplier2", 
                "ramp_color_multiplier3", 
                "ramp_color_multiplier4", 
                "ramp_color_multiplier5", 
                "ramp_color_multiplier6", 
                "ramp_color_multiplier7", 
                "ramp_color_multiplier8", 
                "ramp_color_multiplier9", 
                "ramp_position_offset0", 
                "ramp_position_offset1", 
                "ramp_position_offset2", 
                "ramp_position_offset3", 
                "ramp_position_offset4", 
                "ramp_position_offset5", 
                "ramp_position_offset6", 
                "ramp_position_offset7", 
                "ramp_position_offset8", 
                "ramp_position_offset9", 
                "bssrdf", 
                "scattering_color", 
                "scattering_radius", 
                "enable_sss_input_normal", 
                "resolve_self_intersections", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ], 
            "Advanced": [
                "specular", 
                "prevent_light_culling", 
                "sss_trace_set"
            ]
        }
    }, 
    "BlendMap": {
        "moonray_type": "Map", 
        "moonray_name": "BlendMap", 
        "folders_sorted": [], 
        "parms": {
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "The color you get if blend amount is 1", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 1, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_A", 
                "help": "The color you get if blend amount is 0", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 0, 
                "aliases": [
                    "color A"
                ]
            }, 
            "threshold_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "threshold_min", 
                "help": "If the blend amount is less than or equal to this amount, it will choose color A (0)", 
                "moonray_type": "Float", 
                "houdini_label": "Threshold Min", 
                "bindable": true, 
                "moonray_name": "threshold_min", 
                "order": 4, 
                "aliases": [
                    "threshold min"
                ]
            }, 
            "blend_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blend_type", 
                "help": "The type of blending algorithm", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "cubic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Blend Type", 
                "moonray_name": "blend_type", 
                "order": 2, 
                "aliases": [
                    "blend type"
                ]
            }, 
            "threshold_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "threshold_max", 
                "help": "If the blend amount is greater than this amount, it will choose color B (1)", 
                "moonray_type": "Float", 
                "houdini_label": "Threshold Max", 
                "bindable": true, 
                "moonray_name": "threshold_max", 
                "order": 5, 
                "aliases": [
                    "threshold max"
                ]
            }, 
            "blend_amount": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "blend_amount", 
                "help": "The amount to blend between color A (0) and color B (1)", 
                "moonray_type": "Float", 
                "houdini_label": "Blend Amount", 
                "bindable": true, 
                "moonray_name": "blend_amount", 
                "order": 3, 
                "aliases": [
                    "blend amount"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "LayerMap": {
        "moonray_type": "Map", 
        "moonray_name": "LayerMap", 
        "folders_sorted": [], 
        "parms": {
            "mask": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mask", 
                "moonray_type": "Float", 
                "houdini_label": "Mask", 
                "bindable": true, 
                "moonray_name": "mask", 
                "order": 2
            }, 
            "input_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input_B", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input B", 
                "bindable": true, 
                "moonray_name": "input_B", 
                "order": 1, 
                "aliases": [
                    "input B"
                ]
            }, 
            "mode": {
                "default_value": [
                    1
                ], 
                "houdini_name": "mode", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "over", 
                    "add", 
                    "subtract", 
                    "multiply", 
                    "screen", 
                    "overlay", 
                    "overlay contrast", 
                    "darken", 
                    "lighten", 
                    "color dodge", 
                    "color burn", 
                    "hard light", 
                    "soft light", 
                    "difference", 
                    "exclusion"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12", 
                    "13", 
                    "14", 
                    "15"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 3
            }, 
            "input_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input_A", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input A", 
                "bindable": true, 
                "moonray_name": "input_A", 
                "order": 0, 
                "aliases": [
                    "input A"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "NoiseWorleyMap": {
        "moonray_type": "Map", 
        "moonray_name": "NoiseWorleyMap", 
        "folders_sorted": [], 
        "parms": {
            "jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "jitter", 
                "help": "Controls the distortion of the cells", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "jitter", 
                "order": 7
            }, 
            "object_space": {
                "default_value": [], 
                "houdini_name": "object_space", 
                "help": "Directly connect object to use that object's space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object Space", 
                "interface": "Geometry", 
                "moonray_name": "object_space", 
                "order": 13, 
                "aliases": [
                    "object space"
                ]
            }, 
            "frequency_multiplier": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "frequency_multiplier", 
                "help": "Scalar multiplier for the frequency vector", 
                "moonray_type": "Float", 
                "houdini_label": "Frequency Multiplier", 
                "bindable": true, 
                "moonray_name": "frequency_multiplier", 
                "order": 23, 
                "aliases": [
                    "frequency multiplier"
                ]
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply the euler rotations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 26, 
                "aliases": [
                    "rotation order"
                ]
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "help": "Bias of interpolation from color A to color B", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 14
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "help": "The interpolated color value at distance equals zero", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 19, 
                "aliases": [
                    "color A"
                ]
            }, 
            "rotation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotation", 
                "help": "Rotates the noise in space based on the specified rotation order", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation", 
                "bindable": true, 
                "moonray_name": "rotation", 
                "order": 25
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Vector to scale the noise non-proportionally", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Scale", 
                "bindable": true, 
                "moonray_name": "scale", 
                "order": 24
            }, 
            "space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "space", 
                "help": "The space to calculate the noise in", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture", 
                    "input texture coordinates"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 11
            }, 
            "distance_method": {
                "default_value": [
                    0
                ], 
                "houdini_name": "distance_method", 
                "help": "Metric for calculating distance to feature points which controls the shape of the falloff when output mode is distance", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "linear squared", 
                    "manhattan", 
                    "chebyshev", 
                    "quadratic", 
                    "minkowski"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Distance Method", 
                "moonray_name": "distance_method", 
                "order": 1, 
                "aliases": [
                    "distance method"
                ]
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 12, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Invert the final pattern", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 16
            }, 
            "max_level": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "max_level", 
                "help": "Number of octaves of noise to add together for the final result", 
                "moonray_type": "Float", 
                "houdini_label": "Max Level", 
                "bindable": true, 
                "moonray_name": "max_level", 
                "order": 10, 
                "aliases": [
                    "max level"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "camera used to define camera and screen space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 28
            }, 
            "remap": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "remap", 
                "help": "Allows mapping the distances from the specified min/max range into the 0..1 range", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Remap", 
                "bindable": true, 
                "moonray_name": "remap", 
                "order": 9
            }, 
            "cell_id": {
                "default_value": [
                    0
                ], 
                "houdini_name": "cell_id", 
                "help": "Which of the distances determines the cell id", 
                "moonray_type": "Int", 
                "menu": [
                    "f1", 
                    "f2", 
                    "f3", 
                    "f4"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Cell Id", 
                "moonray_name": "cell_id", 
                "order": 8, 
                "aliases": [
                    "cell id"
                ]
            }, 
            "output_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "output_mode", 
                "help": "Method by which the shader outputs a color.  Distance uses F1..F4 interpolated between color A and color B, gradient outputs the gradient of the noise, and cell ID outputs a random color for each cell", 
                "moonray_type": "Int", 
                "menu": [
                    "distance", 
                    "gradient", 
                    "cell id"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Output Mode", 
                "moonray_name": "output_mode", 
                "order": 0, 
                "aliases": [
                    "output mode"
                ]
            }, 
            "minkowski_number": {
                "default_value": [
                    3.0
                ], 
                "houdini_name": "minkowski_number", 
                "help": "Exponent on distances when distance method is set to Minkowski", 
                "moonray_type": "Float", 
                "houdini_label": "Minkowski Number", 
                "bindable": true, 
                "moonray_name": "minkowski_number", 
                "order": 2, 
                "aliases": [
                    "minkowski number"
                ]
            }, 
            "transformation_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "transformation_order", 
                "help": "Order in which to apply the translation, rotation, and frequency", 
                "moonray_type": "Int", 
                "menu": [
                    "srt", 
                    "str", 
                    "rst", 
                    "rts", 
                    "tsr", 
                    "trs"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Transformation Order", 
                "moonray_name": "transformation_order", 
                "order": 27, 
                "aliases": [
                    "transformation order"
                ]
            }, 
            "gain": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "gain", 
                "help": "Gain of interpolation from color A to color B", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 15
            }, 
            "translation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translation", 
                "help": "Translation of the noise in space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Translation", 
                "bindable": true, 
                "moonray_name": "translation", 
                "order": 22
            }, 
            "F1": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "F1", 
                "help": "Influence of F1 (the closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F1", 
                "bindable": true, 
                "moonray_name": "F1", 
                "order": 3
            }, 
            "F2": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F2", 
                "help": "Influence of F2 (the second closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F2", 
                "bindable": true, 
                "moonray_name": "F2", 
                "order": 4
            }, 
            "F3": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F3", 
                "help": "Influence of F3 (the third closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F3", 
                "bindable": true, 
                "moonray_name": "F3", 
                "order": 5
            }, 
            "F4": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F4", 
                "help": "Influence of F4 (the fourth closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F4", 
                "bindable": true, 
                "moonray_name": "F4", 
                "order": 6
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "The interpolated color value at distance equals one", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 20, 
                "aliases": [
                    "color B"
                ]
            }, 
            "smoothstep": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "smoothstep", 
                "help": "min/max values between which the smoothstep will interpolate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Smoothstep", 
                "bindable": true, 
                "moonray_name": "smoothstep", 
                "order": 18
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "The seed for the random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 21
            }, 
            "use_smoothstep": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_smoothstep", 
                "help": "Put the noise value through a smoothstep function defined by min/max", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Smoothstep", 
                "moonray_name": "use_smoothstep", 
                "order": 17, 
                "aliases": [
                    "use smoothstep"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "TransformNormalMap": {
        "moonray_type": "Map", 
        "moonray_name": "TransformNormalMap", 
        "folders_sorted": [
            "Normal"
        ], 
        "parms": {
            "decode_input_normal": {
                "default_value": [
                    true
                ], 
                "houdini_name": "decode_input_normal", 
                "help": "decode the input normal if it's in tangent space [0,1] -> [-1,1]", 
                "moonray_type": "Bool", 
                "houdini_label": "Decode Input Normal", 
                "moonray_name": "decode_input_normal", 
                "order": 2, 
                "aliases": [
                    "decode input normal"
                ]
            }, 
            "transform": {
                "default_value": [
                    0
                ], 
                "houdini_name": "transform", 
                "help": "transform to apply to the normals", 
                "moonray_type": "Int", 
                "menu": [
                    "tangent to render", 
                    "render to tangent"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transform", 
                "moonray_name": "transform", 
                "order": 1, 
                "aliases": [
                    "transform"
                ]
            }, 
            "input_normal": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "input_normal", 
                "help": "input normal in either tangent or render space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Normal", 
                "bindable": true, 
                "moonray_name": "input_normal", 
                "order": 0, 
                "aliases": [
                    "input normal"
                ]
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal"
            ]
        }
    }, 
    "ProjectSphericalMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectSphericalMap", 
        "folders_sorted": [], 
        "parms": {
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 3
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 7
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 2
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 1
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 5
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 8
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 0, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 6
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 4
            }
        }, 
        "folders_with_parms": {}
    }, 
    "BaseMaterial": {
        "moonray_type": "Material", 
        "moonray_name": "BaseMaterial", 
        "folders_sorted": [
            "Diffuse", 
            "Specular", 
            "Directional Diffuse", 
            "Translucency", 
            "Transmission", 
            "Translucent Diffuse", 
            "Opacity", 
            "Emission", 
            "Normal", 
            "Iridescence"
        ], 
        "parms": {
            "opacity": {
                "default_value": [
                    true
                ], 
                "houdini_name": "opacity", 
                "moonray_type": "Bool", 
                "houdini_label": "Opacity", 
                "moonray_name": "opacity", 
                "order": 26
            }, 
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 39, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "transmission_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "transmission_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "transmission_color", 
                "order": 21, 
                "aliases": [
                    "transmission color"
                ]
            }, 
            "diffuse_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "diffuse_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "diffuse_color", 
                "order": 4, 
                "aliases": [
                    "diffuse color"
                ]
            }, 
            "directional_diffuse_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "directional_diffuse_roughness", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "directional_diffuse_roughness", 
                "order": 14, 
                "aliases": [
                    "directional diffuse roughness"
                ]
            }, 
            "emission_factor": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "emission_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "emission_factor", 
                "order": 30, 
                "aliases": [
                    "emission factor"
                ]
            }, 
            "translucency_radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "translucency_radius", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "bindable": true, 
                "moonray_name": "translucency_radius", 
                "order": 19, 
                "aliases": [
                    "translucency radius"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "moonray_name": "input_normal_dial", 
                "order": 33, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "emission_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "emission_color", 
                "order": 29, 
                "aliases": [
                    "emission color"
                ]
            }, 
            "iridescence_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_factor", 
                "help": "overall multiplier on effect of iridescence", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "bindable": true, 
                "moonray_name": "iridescence_factor", 
                "order": 41, 
                "aliases": [
                    "iridescence factor"
                ]
            }, 
            "fresnel_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fresnel_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Fresnel Factor", 
                "bindable": true, 
                "moonray_name": "fresnel_factor", 
                "order": 35, 
                "aliases": [
                    "fresnel factor"
                ]
            }, 
            "iridescence_secondary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_secondary_color", 
                "help": "Second color to interpolate to around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Secondary Color", 
                "moonray_name": "iridescence_secondary_color", 
                "order": 43, 
                "aliases": [
                    "iridescence secondary color"
                ]
            }, 
            "iridescence_primary_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "iridescence_primary_color", 
                "help": "First color to interpolate from around the hue wheel", 
                "moonray_type": "Rgb", 
                "houdini_label": "Primary Color", 
                "moonray_name": "iridescence_primary_color", 
                "order": 42, 
                "aliases": [
                    "iridescence primary color"
                ]
            }, 
            "translucent_diffuse_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "translucent_diffuse_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "translucent_diffuse_factor", 
                "order": 25, 
                "aliases": [
                    "translucent diffuse factor"
                ]
            }, 
            "iridescence_flip_hue_direction": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence_flip_hue_direction", 
                "moonray_type": "Bool", 
                "houdini_label": "Flip Hue Direction", 
                "moonray_name": "iridescence_flip_hue_direction", 
                "order": 44, 
                "aliases": [
                    "iridescence flip hue direction"
                ]
            }, 
            "specular_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "specular_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "specular_color", 
                "order": 7, 
                "aliases": [
                    "specular color"
                ]
            }, 
            "input_normal_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "input_normal_space", 
                "help": "Specifies what space the input normal is in.  Usually this is tangent space for texture maps and render space for projections", 
                "moonray_type": "Int", 
                "menu": [
                    "tangent", 
                    "render"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Input Normal Space", 
                "moonray_name": "input_normal_space", 
                "order": 32, 
                "aliases": [
                    "input normal space"
                ]
            }, 
            "translucent_diffuse": {
                "default_value": [
                    false
                ], 
                "houdini_name": "translucent_diffuse", 
                "moonray_type": "Bool", 
                "houdini_label": "Translucent Diffuse", 
                "moonray_name": "translucent_diffuse", 
                "order": 23, 
                "aliases": [
                    "translucent diffuse"
                ]
            }, 
            "iridescence_exponent": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_exponent", 
                "help": "Tightens or broadens the distribution of colors", 
                "moonray_type": "Float", 
                "houdini_label": "Exponent", 
                "bindable": true, 
                "moonray_name": "iridescence_exponent", 
                "order": 46, 
                "aliases": [
                    "iridescence exponent"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "translucency": {
                "default_value": [
                    true
                ], 
                "houdini_name": "translucency", 
                "moonray_type": "Bool", 
                "houdini_label": "Translucency", 
                "moonray_name": "translucency", 
                "order": 15
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "translucency_factor": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "translucency_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "translucency_factor", 
                "order": 17, 
                "aliases": [
                    "translucency factor"
                ]
            }, 
            "directional_diffuse_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "directional_diffuse_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "directional_diffuse_color", 
                "order": 12, 
                "aliases": [
                    "directional diffuse color"
                ]
            }, 
            "translucent_diffuse_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "translucent_diffuse_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "translucent_diffuse_color", 
                "order": 24, 
                "aliases": [
                    "translucent diffuse color"
                ]
            }, 
            "directional_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "directional_diffuse", 
                "moonray_type": "Bool", 
                "houdini_label": "Directional Diffuse", 
                "moonray_name": "directional_diffuse", 
                "order": 11, 
                "aliases": [
                    "directional diffuse"
                ]
            }, 
            "translucency_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "translucency_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "bindable": true, 
                "moonray_name": "translucency_color", 
                "order": 16, 
                "aliases": [
                    "translucency color"
                ]
            }, 
            "iridescence_thickness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_thickness", 
                "help": "Controls how much the color spectrum is repeated", 
                "moonray_type": "Float", 
                "houdini_label": "Thickness", 
                "bindable": true, 
                "moonray_name": "iridescence_thickness", 
                "order": 45, 
                "aliases": [
                    "iridescence thickness"
                ]
            }, 
            "specular_roughness": {
                "default_value": [
                    0.3
                ], 
                "houdini_name": "specular_roughness", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "specular_roughness", 
                "order": 10, 
                "aliases": [
                    "specular roughness"
                ]
            }, 
            "emission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Emission", 
                "moonray_name": "emission", 
                "order": 28
            }, 
            "opacity_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "opacity_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "bindable": true, 
                "moonray_name": "opacity_factor", 
                "order": 27, 
                "aliases": [
                    "opacity factor"
                ]
            }, 
            "translucency_falloff": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "translucency_falloff", 
                "moonray_type": "Rgb", 
                "houdini_label": "Falloff", 
                "bindable": true, 
                "moonray_name": "translucency_falloff", 
                "order": 18, 
                "aliases": [
                    "translucency falloff"
                ]
            }, 
            "input_normal": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "input_normal", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Normal", 
                "bindable": true, 
                "moonray_name": "input_normal", 
                "order": 31, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "anisotropic_direction": {
                "default_value": [
                    1.0, 
                    0.0
                ], 
                "houdini_name": "anisotropic_direction", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Anisotropic Direction", 
                "bindable": true, 
                "moonray_name": "anisotropic_direction", 
                "order": 37, 
                "aliases": [
                    "anisotropic direction"
                ]
            }, 
            "iridescence": {
                "default_value": [
                    false
                ], 
                "houdini_name": "iridescence", 
                "moonray_type": "Bool", 
                "houdini_label": "Iridescence", 
                "moonray_name": "iridescence", 
                "order": 40
            }, 
            "diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "diffuse", 
                "moonray_type": "Bool", 
                "houdini_label": "Diffuse", 
                "moonray_name": "diffuse", 
                "order": 3
            }, 
            "specular_factor": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "specular_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "specular_factor", 
                "order": 8, 
                "aliases": [
                    "specular factor"
                ]
            }, 
            "retroreflectivity": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "retroreflectivity", 
                "moonray_type": "Float", 
                "houdini_label": "Retroreflectivity", 
                "bindable": true, 
                "moonray_name": "retroreflectivity", 
                "order": 9
            }, 
            "transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Transmission", 
                "moonray_name": "transmission", 
                "order": 20
            }, 
            "diffuse_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "diffuse_factor", 
                "order": 5, 
                "aliases": [
                    "diffuse factor"
                ]
            }, 
            "directional_diffuse_factor": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "directional_diffuse_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "directional_diffuse_factor", 
                "order": 13, 
                "aliases": [
                    "directional diffuse factor"
                ]
            }, 
            "index_of_refraction": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "index_of_refraction", 
                "help": "affects transmission and translucency", 
                "moonray_type": "Float", 
                "houdini_label": "Index Of Refraction", 
                "moonray_name": "index_of_refraction", 
                "order": 38, 
                "aliases": [
                    "index of refraction"
                ]
            }, 
            "use_fresnel": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_fresnel", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Fresnel", 
                "moonray_name": "use_fresnel", 
                "order": 34, 
                "aliases": [
                    "use fresnel"
                ]
            }, 
            "specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "specular", 
                "moonray_type": "Bool", 
                "houdini_label": "Specular", 
                "moonray_name": "specular", 
                "order": 6
            }, 
            "transmission_factor": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "transmission_factor", 
                "moonray_type": "Float", 
                "houdini_label": "Factor", 
                "moonray_name": "transmission_factor", 
                "order": 22, 
                "aliases": [
                    "transmission factor"
                ]
            }, 
            "iridescence_at_0_incidence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "iridescence_at_0_incidence", 
                "help": "Iridescence effect at 0 degree viewing angle", 
                "moonray_type": "Float", 
                "houdini_label": "At 0 Incidence", 
                "bindable": true, 
                "moonray_name": "iridescence_at_0_incidence", 
                "order": 47, 
                "aliases": [
                    "iridescence at 0 incidence"
                ]
            }, 
            "anisotropy": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "anisotropy", 
                "moonray_type": "Float", 
                "houdini_label": "Anisotropy", 
                "bindable": true, 
                "moonray_name": "anisotropy", 
                "order": 36
            }
        }, 
        "folders_with_parms": {
            "Opacity": [
                "opacity", 
                "opacity_factor"
            ], 
            "Translucent Diffuse": [
                "translucent_diffuse", 
                "translucent_diffuse_color", 
                "translucent_diffuse_factor"
            ], 
            "Directional Diffuse": [
                "directional_diffuse", 
                "directional_diffuse_color", 
                "directional_diffuse_factor", 
                "directional_diffuse_roughness"
            ], 
            "Normal": [
                "input_normal_space"
            ], 
            "Transmission": [
                "transmission", 
                "transmission_color", 
                "transmission_factor"
            ], 
            "Emission": [
                "emission", 
                "emission_color", 
                "emission_factor"
            ], 
            "Iridescence": [
                "iridescence", 
                "iridescence_factor", 
                "iridescence_primary_color", 
                "iridescence_secondary_color", 
                "iridescence_flip_hue_direction", 
                "iridescence_thickness", 
                "iridescence_exponent", 
                "iridescence_at_0_incidence"
            ], 
            "Specular": [
                "specular", 
                "specular_color", 
                "specular_factor", 
                "retroreflectivity", 
                "specular_roughness"
            ], 
            "Translucency": [
                "translucency", 
                "translucency_color", 
                "translucency_factor", 
                "translucency_falloff", 
                "translucency_radius"
            ], 
            "Diffuse": [
                "diffuse", 
                "diffuse_color", 
                "diffuse_factor"
            ]
        }
    }, 
    "RgbToHsvDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "RgbToHsvDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to use in the RgbToHsv operation", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 2
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "Specifies whether you are converting rgb->hsv or hsv->rgb", 
                "moonray_type": "Int", 
                "menu": [
                    "rgb_to_hsv", 
                    "hsv_to_rgb"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 1
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 4
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "ProjectCylindricalMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectCylindricalMap", 
        "folders_sorted": [], 
        "parms": {
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 6
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 9
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 5
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 4
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 8
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 10
            }, 
            "project_on_inward_surfaces": {
                "default_value": [
                    true
                ], 
                "houdini_name": "project_on_inward_surfaces", 
                "help": "enables projection on surfaces with inward facing normals", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Inward Surfaces", 
                "moonray_name": "project_on_inward_surfaces", 
                "order": 1, 
                "aliases": [
                    "project on inward surfaces"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 11
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 0, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "black_outside_projection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "black_outside_projection", 
                "help": "Toggles whether projections appear outside the 0-1 uv range of the projector", 
                "moonray_type": "Bool", 
                "houdini_label": "Black Outside Projection", 
                "moonray_name": "black_outside_projection", 
                "order": 3, 
                "aliases": [
                    "black outside projection"
                ]
            }, 
            "project_on_outward_surfaces": {
                "default_value": [
                    true
                ], 
                "houdini_name": "project_on_outward_surfaces", 
                "help": "enables projection on surfaces with outward facing normals", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Outward Surfaces", 
                "moonray_name": "project_on_outward_surfaces", 
                "order": 2, 
                "aliases": [
                    "project on outward surfaces"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 7
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RaySwitchMaterial": {
        "moonray_type": "Material", 
        "moonray_name": "RaySwitchMaterial", 
        "folders_sorted": [], 
        "parms": {
            "cutout_camera_rays": {
                "default_value": [
                    false
                ], 
                "houdini_name": "cutout_camera_rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Cutout Camera Rays", 
                "moonray_name": "cutout_camera_rays", 
                "order": 8, 
                "aliases": [
                    "cutout camera rays"
                ]
            }, 
            "indirect_glossy_ray_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "indirect_glossy_ray_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Indirect Glossy Ray Material", 
                "interface": "Material", 
                "moonray_name": "indirect_glossy_ray_material", 
                "order": 6, 
                "aliases": [
                    "indirect glossy ray material"
                ]
            }, 
            "camera_ray_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "camera_ray_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera Ray Material", 
                "interface": "Material", 
                "moonray_name": "camera_ray_material", 
                "order": 4, 
                "aliases": [
                    "camera ray material"
                ]
            }, 
            "indirect_diffuse_ray_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "indirect_diffuse_ray_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Indirect Diffuse Ray Material", 
                "interface": "Material", 
                "moonray_name": "indirect_diffuse_ray_material", 
                "order": 7, 
                "aliases": [
                    "indirect diffuse ray material"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "default_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "default_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Default Material", 
                "interface": "Material", 
                "moonray_name": "default_material", 
                "order": 3, 
                "aliases": [
                    "default material"
                ]
            }, 
            "indirect_mirror_ray_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "indirect_mirror_ray_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Indirect Mirror Ray Material", 
                "interface": "Material", 
                "moonray_name": "indirect_mirror_ray_material", 
                "order": 5, 
                "aliases": [
                    "indirect mirror ray material"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "LODMap": {
        "moonray_type": "Map", 
        "moonray_name": "LODMap", 
        "folders_sorted": [], 
        "parms": {
            "far_value": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "far_value", 
                "help": "value output when feature_width/camera_distance is more than or equal to stop", 
                "moonray_type": "Rgb", 
                "houdini_label": "Far Value", 
                "bindable": true, 
                "moonray_name": "far_value", 
                "order": 4, 
                "aliases": [
                    "far value"
                ]
            }, 
            "start": {
                "default_value": [
                    0.01
                ], 
                "houdini_name": "start", 
                "help": "feature_width/camera_distance at which to start blending near_value->far_value", 
                "moonray_type": "Float", 
                "houdini_label": "Start", 
                "moonray_name": "start", 
                "order": 1
            }, 
            "stop": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "stop", 
                "help": "feature_width/camera_distance at which to stop blending near_value->far_value", 
                "moonray_type": "Float", 
                "houdini_label": "Stop", 
                "moonray_name": "stop", 
                "order": 2
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "Use feature_width for LOD based on average, world-space feature-width visible in a pixel, correctly changing with resolution. Use camera_distance for LOD based on distance from render cam.", 
                "moonray_type": "Int", 
                "menu": [
                    "feature width", 
                    "camera distance"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 0
            }, 
            "near_value": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "near_value", 
                "help": "value output when feature_width/camera_distance is less than or equal to start", 
                "moonray_type": "Rgb", 
                "houdini_label": "Near Value", 
                "bindable": true, 
                "moonray_name": "near_value", 
                "order": 3, 
                "aliases": [
                    "near value"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RandomMap": {
        "moonray_type": "Map", 
        "moonray_name": "RandomMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "the input color used as a base seed to generate the random value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "output_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "output_max", 
                "help": "the maximum output random value", 
                "moonray_type": "Float", 
                "houdini_label": "Output Max", 
                "moonray_name": "output_max", 
                "order": 4, 
                "aliases": [
                    "output max"
                ]
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "additional seed added to input for random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 1
            }, 
            "output_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "output_min", 
                "help": "the minimum output random value", 
                "moonray_type": "Float", 
                "houdini_label": "Output Min", 
                "moonray_name": "output_min", 
                "order": 3, 
                "aliases": [
                    "output min"
                ]
            }, 
            "monochrome": {
                "default_value": [
                    true
                ], 
                "houdini_name": "monochrome", 
                "help": "outputs the same color for all three channels", 
                "moonray_type": "Bool", 
                "houdini_label": "Monochrome", 
                "moonray_name": "monochrome", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "BlendDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "BlendDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "input2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input2", 
                "help": "Second RenderOutput to use in the blend operation", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input2", 
                "interface": "RenderOutput", 
                "moonray_name": "input2", 
                "order": 3
            }, 
            "input1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input1", 
                "help": "First RenderOutput to use in the blend operation", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input1", 
                "interface": "RenderOutput", 
                "moonray_name": "input1", 
                "order": 2
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 5
            }, 
            "blendAmt": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "blendAmt", 
                "help": "Float between [0,1] determining amount of blend between input1 and input2", 
                "moonray_type": "Float", 
                "houdini_label": "Blendamt", 
                "moonray_name": "blendAmt", 
                "order": 0
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 4
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 6
            }, 
            "blendType": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blendType", 
                "help": "Method used to blend between input1 and input2.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "cubic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Blendtype", 
                "moonray_name": "blendType", 
                "order": 1
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "ColorCorrectDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "ColorCorrectDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Desaturates input below 1.0 and adds saturation above 1.0", 
                "moonray_type": "Float", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 2
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 8
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 7
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 9
            }, 
            "contrast": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "contrast", 
                "help": "Negative values decrease contrast, while positive values increase it", 
                "moonray_type": "Float", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 3
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Adds offset color to input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 5
            }, 
            "multiply": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "multiply", 
                "help": "Multiplies input using specified color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Multiply", 
                "moonray_name": "multiply", 
                "order": 6
            }, 
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "RenderOutput to color correct", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "RenderOutput", 
                "moonray_name": "input", 
                "order": 0
            }, 
            "gamma": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Adjusts gamma of input", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 4
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "Adjusts the exposure, in fstops", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 1
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "ProjectCameraMap": {
        "moonray_type": "Map", 
        "moonray_name": "ProjectCameraMap", 
        "folders_sorted": [], 
        "parms": {
            "use_custom_window_coordinates": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_custom_window_coordinates", 
                "help": "used to apply non-uniform scaling to projection", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Custom Window Coordinates", 
                "moonray_name": "use_custom_window_coordinates", 
                "order": 4, 
                "aliases": [
                    "use custom window coordinates"
                ]
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Camera", 
                "moonray_name": "projector", 
                "order": 0
            }, 
            "window_y_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "window_y_max", 
                "help": "maximum projected y coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window Y Max", 
                "moonray_name": "window_y_max", 
                "order": 8, 
                "aliases": [
                    "window y max"
                ]
            }, 
            "project_on_back_faces": {
                "default_value": [
                    false
                ], 
                "houdini_name": "project_on_back_faces", 
                "help": "Toggles whether camera projections appear on back faces.", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Back Faces", 
                "moonray_name": "project_on_back_faces", 
                "order": 1, 
                "aliases": [
                    "project on back faces"
                ]
            }, 
            "window_x_min": {
                "default_value": [
                    -1.0
                ], 
                "houdini_name": "window_x_min", 
                "help": "minimum projected x coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window X Min", 
                "moonray_name": "window_x_min", 
                "order": 5, 
                "aliases": [
                    "window x min"
                ]
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 3, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "window_y_min": {
                "default_value": [
                    -1.0
                ], 
                "houdini_name": "window_y_min", 
                "help": "minimum projected y coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window Y Min", 
                "moonray_name": "window_y_min", 
                "order": 7, 
                "aliases": [
                    "window y min"
                ]
            }, 
            "window_x_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "window_x_max", 
                "help": "maximum projected x coordinate", 
                "moonray_type": "Float", 
                "houdini_label": "Window X Max", 
                "moonray_name": "window_x_max", 
                "order": 6, 
                "aliases": [
                    "window x max"
                ]
            }, 
            "black_outside_projection": {
                "default_value": [
                    false
                ], 
                "houdini_name": "black_outside_projection", 
                "help": "Toggles whether projections appear outside the 0-1 uv range of the projector", 
                "moonray_type": "Bool", 
                "houdini_label": "Black Outside Projection", 
                "moonray_name": "black_outside_projection", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "NoiseWorleyMap_v2": {
        "moonray_type": "Map", 
        "moonray_name": "NoiseWorleyMap_v2", 
        "folders_sorted": [
            "Output", 
            "Space", 
            "Adjustment", 
            "Transform", 
            "Advanced"
        ], 
        "parms": {
            "jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "jitter", 
                "help": "Controls the distortion of the cells", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "jitter", 
                "order": 2
            }, 
            "object_space": {
                "default_value": [], 
                "houdini_name": "object_space", 
                "help": "Directly connect object to use that object's space.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object Space", 
                "interface": "Geometry", 
                "moonray_name": "object_space", 
                "order": 11, 
                "aliases": [
                    "object space"
                ]
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply the euler rotations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 23, 
                "aliases": [
                    "rotation order"
                ]
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "help": "Bias of interpolation from color A to color B", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 17
            }, 
            "frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "frequency", 
                "help": "Scalar multiplier for the frequency vector", 
                "moonray_type": "Float", 
                "houdini_label": "Frequency", 
                "bindable": true, 
                "moonray_name": "frequency", 
                "order": 1
            }, 
            "smoothstep": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "smoothstep", 
                "help": "min/max values between which the smoothstep will interpolate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Smoothstep", 
                "bindable": true, 
                "moonray_name": "smoothstep", 
                "order": 16
            }, 
            "point_size": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "point_size", 
                "help": "For points output mode, relative radius of points", 
                "moonray_type": "Float", 
                "houdini_label": "Point Size", 
                "moonray_name": "point_size", 
                "order": 13
            }, 
            "rotation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotation", 
                "help": "Rotates the noise in space based on the specified rotation order", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation", 
                "bindable": true, 
                "moonray_name": "rotation", 
                "order": 22
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Vector to scale the noise non-proportionally", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Scale", 
                "bindable": true, 
                "moonray_name": "scale", 
                "order": 21
            }, 
            "space": {
                "default_value": [
                    2
                ], 
                "houdini_name": "space", 
                "help": "The space to calculate the noise in", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture", 
                    "input texture coordinates", 
                    "hair_surface_uv", 
                    "hair_closest_surface_uv"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 9
            }, 
            "distance_method": {
                "default_value": [
                    0
                ], 
                "houdini_name": "distance_method", 
                "help": "Metric for calculating distance to feature points which controls the shape of the falloff when output mode is distance", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "linear squared", 
                    "manhattan", 
                    "chebyshev", 
                    "quadratic", 
                    "minkowski"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Distance Method", 
                "moonray_name": "distance_method", 
                "order": 7, 
                "aliases": [
                    "distance method"
                ]
            }, 
            "input_texture_coordinates": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_texture_coordinates", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Texture Coordinates", 
                "bindable": true, 
                "moonray_name": "input_texture_coordinates", 
                "order": 10, 
                "aliases": [
                    "input texture coordinates"
                ]
            }, 
            "invert": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert", 
                "help": "Invert the final pattern", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert", 
                "moonray_name": "invert", 
                "order": 19
            }, 
            "minkowski_number": {
                "default_value": [
                    3.0
                ], 
                "houdini_name": "minkowski_number", 
                "help": "Exponent on distances when distance method is set to Minkowski", 
                "moonray_type": "Float", 
                "houdini_label": "Minkowski Number", 
                "bindable": true, 
                "moonray_name": "minkowski_number", 
                "order": 8, 
                "aliases": [
                    "minkowski number"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "camera used to define camera and screen space", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 12
            }, 
            "remap": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "remap", 
                "help": "Allows mapping the distances from the specified min/max range into the 0..1 range", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Remap", 
                "bindable": true, 
                "moonray_name": "remap", 
                "order": 14
            }, 
            "cell_id": {
                "default_value": [
                    0
                ], 
                "houdini_name": "cell_id", 
                "help": "Which of the distances determines the cell id", 
                "moonray_type": "Int", 
                "menu": [
                    "f1", 
                    "f2", 
                    "f3", 
                    "f4"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Cell Id", 
                "moonray_name": "cell_id", 
                "order": 29, 
                "aliases": [
                    "cell id"
                ]
            }, 
            "output_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "output_mode", 
                "help": "Method by which the shader outputs a color.  Distance uses F1..F4 interpolated between color A and color B, gradient outputs the gradient of the noise, and cell ID outputs a random color for each cell", 
                "moonray_type": "Int", 
                "menu": [
                    "distance", 
                    "gradient", 
                    "cell id", 
                    "cell edges", 
                    "points"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "output_mode", 
                "order": 6, 
                "aliases": [
                    "output mode"
                ]
            }, 
            "max_level": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "max_level", 
                "help": "Number of octaves of noise to add together for the final result", 
                "moonray_type": "Float", 
                "houdini_label": "Max Level", 
                "bindable": true, 
                "moonray_name": "max_level", 
                "order": 3
            }, 
            "transformation_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "transformation_order", 
                "help": "Order in which to apply the translation, rotation, and frequency", 
                "moonray_type": "Int", 
                "menu": [
                    "srt", 
                    "str", 
                    "rst", 
                    "rts", 
                    "tsr", 
                    "trs"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Transformation Order", 
                "moonray_name": "transformation_order", 
                "order": 24, 
                "aliases": [
                    "transformation order"
                ]
            }, 
            "gain": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "gain", 
                "help": "Gain of interpolation from color A to color B", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 18
            }, 
            "translation": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translation", 
                "help": "Translation of the noise in space", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Translation", 
                "bindable": true, 
                "moonray_name": "translation", 
                "order": 20
            }, 
            "F1": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "F1", 
                "help": "Influence of F1 (the closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F1", 
                "bindable": true, 
                "moonray_name": "F1", 
                "order": 25
            }, 
            "F2": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F2", 
                "help": "Influence of F2 (the second closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F2", 
                "bindable": true, 
                "moonray_name": "F2", 
                "order": 26
            }, 
            "F3": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F3", 
                "help": "Influence of F3 (the third closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F3", 
                "bindable": true, 
                "moonray_name": "F3", 
                "order": 27
            }, 
            "F4": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "F4", 
                "help": "Influence of F4 (the fourth closest feature point)", 
                "moonray_type": "Float", 
                "houdini_label": "F4", 
                "bindable": true, 
                "moonray_name": "F4", 
                "order": 28
            }, 
            "color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_B", 
                "help": "The interpolated color value at distance equals one", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_B", 
                "order": 5, 
                "aliases": [
                    "color B"
                ]
            }, 
            "color_A": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_A", 
                "help": "The interpolated color value at distance equals zero", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_A", 
                "order": 4, 
                "aliases": [
                    "color A"
                ]
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "The seed for the random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 0
            }, 
            "use_smoothstep": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_smoothstep", 
                "help": "Put the noise value through a smoothstep function defined by min/max", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Smoothstep", 
                "moonray_name": "use_smoothstep", 
                "order": 15, 
                "aliases": [
                    "use smoothstep"
                ]
            }
        }, 
        "folders_with_parms": {
            "Output": [
                "output_mode", 
                "distance_method", 
                "minkowski_number"
            ], 
            "Adjustment": [
                "point_size", 
                "remap", 
                "use_smoothstep", 
                "smoothstep", 
                "bias", 
                "gain", 
                "invert"
            ], 
            "Transform": [
                "translation", 
                "scale", 
                "rotation", 
                "rotation_order", 
                "transformation_order"
            ], 
            "Advanced": [
                "F1", 
                "F2", 
                "F3", 
                "F4", 
                "cell_id"
            ], 
            "Space": [
                "space", 
                "input_texture_coordinates", 
                "object_space", 
                "camera"
            ]
        }
    }, 
    "CombineLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "CombineLightFilter", 
        "folders_sorted": [], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "List of light filters to combine together", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 1
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "How the light filters are combined", 
                "moonray_type": "Int", 
                "menu": [
                    "multiply", 
                    "min", 
                    "max", 
                    "add", 
                    "subtract"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ToonMap": {
        "moonray_type": "Map", 
        "moonray_name": "ToonMap", 
        "folders_sorted": [], 
        "parms": {
            "outline_threshold": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "outline_threshold", 
                "help": "In most cases, the shader would trace an outline of a model well when this threshold is zero.", 
                "moonray_type": "Float", 
                "houdini_label": "Outline Threshold", 
                "bindable": true, 
                "moonray_name": "outline_threshold", 
                "order": 4, 
                "aliases": [
                    "outline threshold"
                ]
            }, 
            "fill_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "fill_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Fill Color", 
                "bindable": true, 
                "moonray_name": "fill_color", 
                "order": 1, 
                "aliases": [
                    "fill color"
                ]
            }, 
            "outline_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "outline_scale", 
                "help": "This attribute controls the thickness of outlines.", 
                "moonray_type": "Float", 
                "houdini_label": "Outline Scale", 
                "bindable": true, 
                "moonray_name": "outline_scale", 
                "order": 5, 
                "aliases": [
                    "outline scale"
                ]
            }, 
            "crease_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "crease_color", 
                "help": "Creases are sharp edges like corners in the geometry.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Crease Color", 
                "bindable": true, 
                "moonray_name": "crease_color", 
                "order": 3, 
                "aliases": [
                    "crease color"
                ]
            }, 
            "outline_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "outline_color", 
                "help": "Outlines are silhouettes of the geometry", 
                "moonray_type": "Rgb", 
                "houdini_label": "Outline Color", 
                "bindable": true, 
                "moonray_name": "outline_color", 
                "order": 2, 
                "aliases": [
                    "outline color"
                ]
            }, 
            "mode": {
                "default_value": [
                    2
                ], 
                "houdini_name": "mode", 
                "moonray_type": "Int", 
                "menu": [
                    "outline", 
                    "crease", 
                    "both"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 0
            }, 
            "crease_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "crease_scale", 
                "help": "This attribute controls the thickness of creases.", 
                "moonray_type": "Float", 
                "houdini_label": "Crease Scale", 
                "bindable": true, 
                "moonray_name": "crease_scale", 
                "order": 7, 
                "aliases": [
                    "crease scale"
                ]
            }, 
            "crease_threshold": {
                "default_value": [
                    45.0
                ], 
                "houdini_name": "crease_threshold", 
                "help": "This attribute sets the threshold angle (in degree units) to draw creases. The more the threshold angle is, the less the creases are traced.", 
                "moonray_type": "Float", 
                "houdini_label": "Crease Threshold", 
                "bindable": true, 
                "moonray_name": "crease_threshold", 
                "order": 6, 
                "aliases": [
                    "crease threshold"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RdlMeshGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "RdlMeshGeometry", 
        "folders_sorted": [], 
        "parms": {
            "orientation": {
                "default_value": [
                    0
                ], 
                "houdini_name": "orientation", 
                "help": "When set to \"left-handed\", normals are generated using the left-handed rule. This reverses the direction of generated normals, and which side of surfaces is considered the front, without affecting supplied normals.", 
                "moonray_type": "Int", 
                "menu": [
                    "right-handed", 
                    "left-handed"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Orientation", 
                "moonray_name": "orientation", 
                "order": 28
            }, 
            "velocity_list_1": {
                "default_value": [], 
                "houdini_name": "velocity_list_1", 
                "help": "Optionally declare second set ofvertex velocities together with second motion step for cubic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 1", 
                "moonray_name": "velocity_list_1", 
                "order": 25, 
                "aliases": [
                    "velocity list 1", 
                    "velocity_list_B", 
                    "velocity list B"
                ]
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "velocity_list_0": {
                "default_value": [], 
                "houdini_name": "velocity_list_0", 
                "help": "Optionally declare vertex velocities instead of a second motion step'", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 0", 
                "moonray_name": "velocity_list_0", 
                "order": 24, 
                "aliases": [
                    "velocity list 0", 
                    "velocity_list", 
                    "velocity list"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "subd_corner_sharpnesses": {
                "default_value": [], 
                "houdini_name": "subd_corner_sharpnesses", 
                "help": "Sharpness value for each corner vertex.", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Subd Corner Sharpnesses", 
                "moonray_name": "subd_corner_sharpnesses", 
                "order": 42, 
                "aliases": [
                    "subd corner sharpnesses"
                ]
            }, 
            "normal_list": {
                "default_value": [], 
                "houdini_name": "normal_list", 
                "help": " If the mesh is using normals, store them per-face-vertex in this list", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Normal List", 
                "moonray_name": "normal_list", 
                "order": 33, 
                "aliases": [
                    "normal list"
                ]
            }, 
            "subd_boundary": {
                "default_value": [
                    2
                ], 
                "houdini_name": "subd_boundary", 
                "help": "Boundary interpolation: Corners, Edges or None", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "edge only", 
                    "edge and corner"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Subd Boundary", 
                "moonray_name": "subd_boundary", 
                "order": 37, 
                "aliases": [
                    "subd boundary"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "accleration_list": {
                "default_value": [], 
                "houdini_name": "accleration_list", 
                "help": "Optionally declare vertex accelerations for quadratic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Accleration List", 
                "moonray_name": "accleration_list", 
                "order": 26, 
                "aliases": [
                    "acceleration list"
                ]
            }, 
            "subd_crease_sharpnesses": {
                "default_value": [], 
                "houdini_name": "subd_crease_sharpnesses", 
                "help": "Sharpness value for each crease edge.", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Subd Crease Sharpnesses", 
                "moonray_name": "subd_crease_sharpnesses", 
                "order": 40, 
                "aliases": [
                    "subd crease sharpnesses"
                ]
            }, 
            "part_face_count_list": {
                "default_value": [], 
                "houdini_name": "part_face_count_list", 
                "help": "The number of faces belonging to the part with corresponding index in 'part list'.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Part Face Count List", 
                "moonray_name": "part_face_count_list", 
                "order": 30, 
                "aliases": [
                    "part face count list"
                ]
            }, 
            "use_rotation_motion_blur": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_rotation_motion_blur", 
                "help": "if \"xform\" is time varying and motion blur is turned on, Turning on this toggle can generate better rotation trail. Known limitation: turning on this toggle will disable adaptive tessellation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Rotation Motion Blur", 
                "moonray_name": "use_rotation_motion_blur", 
                "order": 47, 
                "aliases": [
                    "use_rotation_motion_blur"
                ]
            }, 
            "part_list": {
                "default_value": [], 
                "houdini_name": "part_list", 
                "help": "Ordered list of part names, used in conjunction with 'part face count list' and 'part faces indicies' to assign per-part materials", 
                "moonray_type": "StringVector", 
                "houdini_label": "Part List", 
                "moonray_name": "part_list", 
                "order": 29, 
                "aliases": [
                    "part list"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "subd_corner_indices": {
                "default_value": [], 
                "houdini_name": "subd_corner_indices", 
                "help": "List of indices for each corner vertex with an assigned sharpness.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Subd Corner Indices", 
                "moonray_name": "subd_corner_indices", 
                "order": 41, 
                "aliases": [
                    "subd corner indices"
                ]
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "part_face_indices": {
                "default_value": [], 
                "houdini_name": "part_face_indices", 
                "help": "Ordered list of face indices. No index should have a value greater than the size of 'face vertex count'", 
                "moonray_type": "IntVector", 
                "houdini_label": "Part Face Indices", 
                "moonray_name": "part_face_indices", 
                "order": 31, 
                "aliases": [
                    "part face indices"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "primitive_attribute_frame": {
                "default_value": [
                    2
                ], 
                "houdini_name": "primitive_attribute_frame", 
                "help": "Which frame(s) do we take the primitive attributes from?\n\tO : first motion step\n\t1 : second motion step\n\t2 : both motion steps", 
                "moonray_type": "Int", 
                "menu": [
                    "first motion step", 
                    "second motion step", 
                    "both motion steps"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Primitive Attribute Frame", 
                "moonray_name": "primitive_attribute_frame", 
                "order": 50
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "is_subd": {
                "default_value": [
                    true
                ], 
                "houdini_name": "is_subd", 
                "help": "If true, a SubdivisionMesh primitive will be created - PolygonMesh otherwise", 
                "moonray_type": "Bool", 
                "houdini_label": "Is Subd", 
                "moonray_name": "is_subd", 
                "order": 35, 
                "aliases": [
                    "is subd"
                ]
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "Vector of UserData.Each key/value pair will be added as a primitive attribute of the mesh.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "moonray_name": "primitive_attributes", 
                "order": 43, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "mesh_resolution": {
                "default_value": [
                    2.0
                ], 
                "houdini_name": "mesh_resolution", 
                "help": "The maximum resolution to tessellate a mesh. An edge on input face will be tessellated to at most n segments when \"mesh resolution\" is set to n. If \"adaptive error\" is set to 0, every edge on input face will be uniformly tessellated to \"mesh resolution\". Otherwise renderer will adaptively tessellate mesh based on camera information", 
                "moonray_type": "Float", 
                "houdini_label": "Mesh Resolution", 
                "moonray_name": "mesh_resolution", 
                "order": 44, 
                "aliases": [
                    "resolution factor", 
                    "subd resolution", 
                    "subd_resolution"
                ]
            }, 
            "face_vertex_count": {
                "default_value": [], 
                "houdini_name": "face_vertex_count", 
                "help": "Ordered list of vertices per face, used in conjection with vertices by index to construct the mesh", 
                "moonray_type": "IntVector", 
                "houdini_label": "Face Vertex Count", 
                "moonray_name": "face_vertex_count", 
                "order": 27, 
                "aliases": [
                    "face vertex count"
                ]
            }, 
            "curved_motion_blur_sample_count": {
                "default_value": [
                    10
                ], 
                "houdini_name": "curved_motion_blur_sample_count", 
                "help": "Number of time samples generated along each curve when using curved motion blur", 
                "moonray_type": "Int", 
                "houdini_label": "Curved Motion Blur Sample Count", 
                "moonray_name": "curved_motion_blur_sample_count", 
                "order": 49, 
                "aliases": [
                    "curved motion blur sample count"
                ]
            }, 
            "adaptive_error": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "adaptive_error", 
                "help": "the maximum allowable difference in pixels for subdivison mesh adaptive tessellation (each final tessellated edge won't be longer than n pixels if adaptive error is set to n).A value of 0 disables adaptive tessellation, reverting to uniform tessellation, which sometimes is more stable in animation.Adaptive tessellation is not supported for instances.", 
                "moonray_type": "Float", 
                "houdini_label": "Adaptive Error", 
                "moonray_name": "adaptive_error", 
                "order": 45, 
                "aliases": [
                    "adaptive error"
                ]
            }, 
            "vertex_list_1": {
                "default_value": [], 
                "houdini_name": "vertex_list_1", 
                "help": "If the mesh is in motion, the second motion step is stored in this attribute", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 1", 
                "moonray_name": "vertex_list_1", 
                "order": 23, 
                "aliases": [
                    "vertex list 1", 
                    "vertex_list_mb", 
                    "vertex list mb"
                ]
            }, 
            "vertex_list_0": {
                "default_value": [], 
                "houdini_name": "vertex_list_0", 
                "help": "Stores all vertices used by the mesh at motion step 0", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 0", 
                "moonray_name": "vertex_list_0", 
                "order": 22, 
                "aliases": [
                    "vertex list 0", 
                    "vertex_list", 
                    "vertex list"
                ]
            }, 
            "velocity_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "velocity_scale", 
                "help": "Adjust magnitude of velocity-based motion blur", 
                "moonray_type": "Float", 
                "houdini_label": "Velocity Scale", 
                "moonray_name": "velocity_scale", 
                "order": 34, 
                "aliases": [
                    "velocity scale"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "subd_scheme": {
                "default_value": [
                    1
                ], 
                "houdini_name": "subd_scheme", 
                "help": "CatClark or Bilinear", 
                "moonray_type": "Int", 
                "menu": [
                    "bilinear", 
                    "catclark"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Subd Scheme", 
                "moonray_name": "subd_scheme", 
                "order": 36, 
                "aliases": [
                    "subd scheme"
                ]
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "subd_crease_indices": {
                "default_value": [], 
                "houdini_name": "subd_crease_indices", 
                "help": "List of vertex index pairs for each crease edge with an assigned sharpness.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Subd Crease Indices", 
                "moonray_name": "subd_crease_indices", 
                "order": 39, 
                "aliases": [
                    "subd crease indices"
                ]
            }, 
            "vertices_by_index": {
                "default_value": [], 
                "houdini_name": "vertices_by_index", 
                "help": "Ordered list of vertex indices used to construct the mesh using the vertex list", 
                "moonray_type": "IntVector", 
                "houdini_label": "Vertices By Index", 
                "moonray_name": "vertices_by_index", 
                "order": 21, 
                "aliases": [
                    "vertices by index"
                ]
            }, 
            "subd_fvar_linear": {
                "default_value": [
                    1
                ], 
                "houdini_name": "subd_fvar_linear", 
                "help": "Face-varying linear interpolation: None, Corners Only, Corners Plus 1 or Plus 2 (RenderMan), Boundaries, or All", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "corners only", 
                    "corners plus1", 
                    "corners plus2", 
                    "boundaries", 
                    "all"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Subd Fvar Linear", 
                "moonray_name": "subd_fvar_linear", 
                "order": 38, 
                "aliases": [
                    "subd fvar linear"
                ]
            }, 
            "smooth_normal": {
                "default_value": [
                    true
                ], 
                "houdini_name": "smooth_normal", 
                "help": "generate smooth shading normal when rendering PolygonMesh and the mesh doesn't provide shading normal itself", 
                "moonray_type": "Bool", 
                "houdini_label": "Smooth Normal", 
                "moonray_name": "smooth_normal", 
                "order": 46
            }, 
            "uv_list": {
                "default_value": [], 
                "houdini_name": "uv_list", 
                "help": "If the mesh is using UVs, store them per-face-vertex in this list", 
                "moonray_type": "Vec2fVector", 
                "houdini_label": "Uv List", 
                "moonray_name": "uv_list", 
                "order": 32, 
                "aliases": [
                    "uv list"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "motion_blur_type": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "motion_blur_type", 
                "help": "Motion blur type for PolygonMesh/Points/Curves in alembic file.\n\"static\" will treat the mesh as static.\n\"velocity\" will blur using the supplied vertex positions and velocities.\n\"frame delta\" will interpolate between the two supplied vertex positions.\n\"acceleration\" will blur using the supplied vertex positions, velocities and accelerations.\n\"hermite\" will use supplied pair of positions and pair of velocities to interpolate along a cubic Hermite curve.\n\"best\" will use choose the method which provides the highest quality given the available data.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "best", 
                    "static", 
                    "velocity", 
                    "frame delta", 
                    "acceleration", 
                    "hermite"
                ], 
                "menu_values": [
                    "-1", 
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Motion Blur Type", 
                "moonray_name": "motion_blur_type", 
                "order": 48, 
                "aliases": [
                    "motion blur type"
                ]
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ColorRampLightFilter": {
        "moonray_type": "LightFilter", 
        "moonray_name": "ColorRampLightFilter", 
        "folders_sorted": [
            "Properties"
        ], 
        "parms": {
            "distances": {
                "default_value": [
                    0.0, 
                    1.0
                ], 
                "houdini_name": "distances", 
                "help": "Distances between which colors are interpolated", 
                "ramp_parm_type": "positions", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Distances", 
                "ramp_is_color": true, 
                "moonray_name": "distances", 
                "order": 6, 
                "ramp_parm_name": "ramp"
            }, 
            "interpolation_types": {
                "default_value": [
                    1, 
                    1
                ], 
                "houdini_name": "interpolation_types", 
                "help": "Interpolation types between the specified distances.  0: None 1: linear 2: exponential_up 3: exponential_down 4: smooth 5: catmull_rom", 
                "ramp_parm_type": "interpolation_types", 
                "moonray_type": "IntVector", 
                "houdini_label": "Interpolation Types", 
                "ramp_is_color": true, 
                "moonray_name": "interpolation_types", 
                "order": 7, 
                "ramp_parm_name": "ramp"
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Turns the light filter on/off", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 0
            }, 
            "density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "density", 
                "help": "The density of the filter", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "moonray_name": "density", 
                "order": 9
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The intensity of the filter", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 8
            }, 
            "colors": {
                "default_value": [
                    [
                        1.0, 
                        1.0, 
                        1.0
                    ], 
                    [
                        0.0, 
                        0.0, 
                        0.0
                    ]
                ], 
                "houdini_name": "colors", 
                "help": "Vector of colors specified at different distances", 
                "ramp_parm_type": "values", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Colors", 
                "ramp_is_color": true, 
                "moonray_name": "colors", 
                "order": 5, 
                "ramp_parm_name": "ramp"
            }, 
            "wrap_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "wrap_mode", 
                "help": "For directional filter mode where filter uses distance along -Z axis.  Extend: f(z) = f(0) for z > 0.  Mirror: f(z) = f(-z).", 
                "moonray_type": "Int", 
                "menu": [
                    "extend", 
                    "mirror"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Wrap Mode", 
                "moonray_name": "wrap_mode", 
                "order": 11
            }, 
            "mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mode", 
                "help": "Ramp: Radiates out from the center of the light or ramp location.  Directional: Linear starting at the location of the light or ramp location along negative z", 
                "moonray_type": "Int", 
                "menu": [
                    "radial", 
                    "directional"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Mode", 
                "moonray_name": "mode", 
                "order": 10
            }, 
            "begin_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "begin_distance", 
                "help": "Where the ramp starts relative to the light or the ramp's independent transform", 
                "moonray_type": "Float", 
                "houdini_label": "Begin Distance", 
                "moonray_name": "begin_distance", 
                "order": 3
            }, 
            "end_distance": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "end_distance", 
                "help": "Where the ramp ends relative to the light or the ramp's independent transform", 
                "moonray_type": "Float", 
                "houdini_label": "End Distance", 
                "moonray_name": "end_distance", 
                "order": 4
            }, 
            "use_xform": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_xform", 
                "help": "The filter can be bound to a light or lights position or when this toggle is set, can have its own transform", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Xform", 
                "moonray_name": "use_xform", 
                "order": 2
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "node_xform", 
                "begin_distance", 
                "end_distance", 
                "ramp", 
                "intensity", 
                "density", 
                "mode", 
                "wrap_mode"
            ]
        }
    }, 
    "RdlCurveGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "RdlCurveGeometry", 
        "folders_sorted": [
            "Curve"
        ], 
        "parms": {
            "tessellation_rate": {
                "default_value": [
                    4
                ], 
                "houdini_name": "tessellation_rate", 
                "help": "Number of segments to split curve spans into", 
                "moonray_type": "Int", 
                "houdini_label": "Tessellation Rate", 
                "moonray_name": "tessellation_rate", 
                "order": 35
            }, 
            "velocity_list_1": {
                "default_value": [], 
                "houdini_name": "velocity_list_1", 
                "help": "Optionally declare second set ofvertex velocities together with second motion step for cubic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 1", 
                "moonray_name": "velocity_list_1", 
                "order": 24
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "velocity_list_0": {
                "default_value": [], 
                "houdini_name": "velocity_list_0", 
                "help": "Optionally declare vertex velocities instead of a second motion step'", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Velocity List 0", 
                "moonray_name": "velocity_list_0", 
                "order": 23
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "radius_list": {
                "default_value": [], 
                "houdini_name": "radius_list", 
                "help": "Stores all radii", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Radius List", 
                "moonray_name": "radius_list", 
                "order": 26
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "accleration_list": {
                "default_value": [], 
                "houdini_name": "accleration_list", 
                "help": "Optionally declare vertex accelerations for quadratic motion interpolation", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Accleration List", 
                "moonray_name": "accleration_list", 
                "order": 25
            }, 
            "use_rotation_motion_blur": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_rotation_motion_blur", 
                "help": "if \"xform\" is time varying and motion blur is turned on, Turning on this toggle can generate better rotation trail. Known limitation: turning on this toggle will disable adaptive tessellation", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Rotation Motion Blur", 
                "moonray_name": "use_rotation_motion_blur", 
                "order": 36, 
                "aliases": [
                    "use_rotation_motion_blur"
                ]
            }, 
            "part_list": {
                "default_value": [], 
                "houdini_name": "part_list", 
                "help": "Ordered list of part names, used in conjunction with 'part_indices' to assign per-part materials", 
                "moonray_type": "StringVector", 
                "houdini_label": "Part List", 
                "moonray_name": "part_list", 
                "order": 28, 
                "aliases": [
                    "part list"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "primitive_attribute_frame": {
                "default_value": [
                    2
                ], 
                "houdini_name": "primitive_attribute_frame", 
                "help": "Which frame(s) do we take the primitive attributes from?\n\tO : first motion step\n\t1 : second motion step\n\t2 : both motion steps", 
                "moonray_type": "Int", 
                "menu": [
                    "first motion step", 
                    "second motion step", 
                    "both motion steps"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Primitive Attribute Frame", 
                "moonray_name": "primitive_attribute_frame", 
                "order": 39
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "curve_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "curve_type", 
                "help": "Curve interpolation type is linear, bezier, or bspline", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "bezier", 
                    "bspline"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Curve Type", 
                "moonray_name": "curve_type", 
                "order": 32
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "part_indices": {
                "default_value": [], 
                "houdini_name": "part_indices", 
                "help": "Ordered list of part indices. ", 
                "moonray_type": "IntVector", 
                "houdini_label": "Part Indices", 
                "moonray_name": "part_indices", 
                "order": 29, 
                "aliases": [
                    "part indices"
                ]
            }, 
            "curved_motion_blur_sample_count": {
                "default_value": [
                    10
                ], 
                "houdini_name": "curved_motion_blur_sample_count", 
                "help": "Number of time samples generated along each curve when using curved motion blur", 
                "moonray_type": "Int", 
                "houdini_label": "Curved Motion Blur Sample Count", 
                "moonray_name": "curved_motion_blur_sample_count", 
                "order": 38, 
                "aliases": [
                    "curved motion blur sample count"
                ]
            }, 
            "vertex_list_1": {
                "default_value": [], 
                "houdini_name": "vertex_list_1", 
                "help": "If the curves are in motion, the second motion step is stored in this attribute", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 1", 
                "moonray_name": "vertex_list_1", 
                "order": 22
            }, 
            "vertex_list_0": {
                "default_value": [], 
                "houdini_name": "vertex_list_0", 
                "help": "Stores all vertices used by the points at motion step 0", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vertex List 0", 
                "moonray_name": "vertex_list_0", 
                "order": 21
            }, 
            "velocity_scale": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "velocity_scale", 
                "help": "Adjust magnitude of velocity-based motion blur", 
                "moonray_type": "Float", 
                "houdini_label": "Velocity Scale", 
                "moonray_name": "velocity_scale", 
                "order": 30
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "curves_vertex_count": {
                "default_value": [], 
                "houdini_name": "curves_vertex_count", 
                "help": "Ordered list of vertices per curve", 
                "moonray_type": "IntVector", 
                "houdini_label": "Curves Vertex Count", 
                "moonray_name": "curves_vertex_count", 
                "order": 27
            }, 
            "primitive_attributes": {
                "default_value": [], 
                "houdini_name": "primitive_attributes", 
                "help": "Vector of UserData.Each key/value pair will be added as a primitive attribute of the points.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Primitive Attributes", 
                "moonray_name": "primitive_attributes", 
                "order": 34, 
                "aliases": [
                    "primitive attributes"
                ]
            }, 
            "uv_list": {
                "default_value": [], 
                "houdini_name": "uv_list", 
                "help": "If the curves are using UVs, store them per-curve in this list", 
                "moonray_type": "Vec2fVector", 
                "houdini_label": "Uv List", 
                "moonray_name": "uv_list", 
                "order": 31
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "motion_blur_type": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "motion_blur_type", 
                "help": "Motion blur type for PolygonMesh/Points/Curves in alembic file.\n\"static\" will treat the mesh as static.\n\"velocity\" will blur using the supplied vertex positions and velocities.\n\"frame delta\" will interpolate between the two supplied vertex positions.\n\"acceleration\" will blur using the supplied vertex positions, velocities and accelerations.\n\"hermite\" will use supplied pair of positions and pair of velocities to interpolate along a cubic Hermite curve.\n\"best\" will use choose the method which provides the highest quality given the available data.\n", 
                "moonray_type": "Int", 
                "menu": [
                    "best", 
                    "static", 
                    "velocity", 
                    "frame delta", 
                    "acceleration", 
                    "hermite"
                ], 
                "menu_values": [
                    "-1", 
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Motion Blur Type", 
                "moonray_name": "motion_blur_type", 
                "order": 37, 
                "aliases": [
                    "motion blur type"
                ]
            }, 
            "curve_subtype": {
                "default_value": [
                    0
                ], 
                "houdini_name": "curve_subtype", 
                "help": "Curve subtype is ray facing or round", 
                "moonray_type": "Int", 
                "menu": [
                    "ray_facing", 
                    "round"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Curve Subtype", 
                "moonray_name": "curve_subtype", 
                "order": 33
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }
        }, 
        "folders_with_parms": {
            "Curve": [
                "tessellation_rate"
            ]
        }
    }, 
    "DwaEmissiveMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaEmissiveMaterial", 
        "folders_sorted": [
            "Emission", 
            "Common"
        ], 
        "parms": {
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 5
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 4, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 3, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Common": [
                "presence"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ]
        }
    }, 
    "RemapMap": {
        "moonray_type": "Map", 
        "moonray_name": "RemapMap", 
        "folders_sorted": [
            "Channel"
        ], 
        "parms": {
            "input_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "input_min", 
                "help": "the input value that will be remapped to the 'output min' value", 
                "moonray_type": "Float", 
                "houdini_label": "Input Min", 
                "moonray_name": "input_min", 
                "order": 2, 
                "aliases": [
                    "input min"
                ]
            }, 
            "clamp": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp", 
                "help": "enables/disables clamping of the output values.  This useful prevent out-of-range values when expanding the input values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 7
            }, 
            "clamp_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "clamp_max_RGB", 
                "help": "the maximum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Rgb", 
                "houdini_label": "Clamp Max RGB", 
                "moonray_name": "clamp_max_RGB", 
                "order": 17
            }, 
            "midpoint_bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "midpoint_bias", 
                "help": "biases the in-between values toward 'output min' or 'output max'. Default = 0.5", 
                "moonray_type": "Float", 
                "houdini_label": "Midpoint Bias", 
                "moonray_name": "midpoint_bias", 
                "order": 6, 
                "aliases": [
                    "midpoint bias"
                ]
            }, 
            "clamp_RGB": {
                "default_value": [
                    true
                ], 
                "houdini_name": "clamp_RGB", 
                "help": "enables/disables clamping of the output values.  This useful prevent out-of-range values when expanding the input values.", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp RGB", 
                "moonray_name": "clamp_RGB", 
                "order": 15
            }, 
            "output_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "output_max_RGB", 
                "help": "the value that 'input max' is remapped to", 
                "moonray_type": "Rgb", 
                "houdini_label": "Output Max RGB", 
                "moonray_name": "output_max_RGB", 
                "order": 13
            }, 
            "remap_method": {
                "default_value": [
                    0
                ], 
                "houdini_name": "remap_method", 
                "help": "Choose whether you are remapping using single values (uniform) or with separate RGB channels", 
                "moonray_type": "Int", 
                "menu": [
                    "uniform", 
                    "RGB"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Remap Method", 
                "moonray_name": "remap_method", 
                "order": 0
            }, 
            "clamp_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "clamp_min_RGB", 
                "help": "the minimum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Rgb", 
                "houdini_label": "Clamp Min RGB", 
                "moonray_name": "clamp_min_RGB", 
                "order": 16
            }, 
            "output_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "output_max", 
                "help": "the value that 'input max' is remapped to", 
                "moonray_type": "Float", 
                "houdini_label": "Output Max", 
                "moonray_name": "output_max", 
                "order": 5, 
                "aliases": [
                    "output max"
                ]
            }, 
            "clamp_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "clamp_max", 
                "help": "the maximum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Max", 
                "moonray_name": "clamp_max", 
                "order": 9, 
                "aliases": [
                    "clamp max"
                ]
            }, 
            "output_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "output_min_RGB", 
                "help": "the value that 'input min' is remapped to", 
                "moonray_type": "Rgb", 
                "houdini_label": "Output Min RGB", 
                "moonray_name": "output_min_RGB", 
                "order": 12
            }, 
            "input_max_RGB": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input_max_RGB", 
                "help": "the input value that will be remapped to the 'output max' value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input Max RGB", 
                "moonray_name": "input_max_RGB", 
                "order": 11
            }, 
            "input_min_RGB": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "input_min_RGB", 
                "help": "the input value that will be remapped to the 'output min' value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input Min RGB", 
                "moonray_name": "input_min_RGB", 
                "order": 10
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "the input values to be remapped", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 1
            }, 
            "output_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "output_min", 
                "help": "the value that 'input min' is remapped to", 
                "moonray_type": "Float", 
                "houdini_label": "Output Min", 
                "moonray_name": "output_min", 
                "order": 4, 
                "aliases": [
                    "output min"
                ]
            }, 
            "clamp_min": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clamp_min", 
                "help": "the minimum value output by this map when 'clamp' is enabled", 
                "moonray_type": "Float", 
                "houdini_label": "Clamp Min", 
                "moonray_name": "clamp_min", 
                "order": 8, 
                "aliases": [
                    "clamp min"
                ]
            }, 
            "input_max": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_max", 
                "help": "the input value that will be remapped to the 'output max' value", 
                "moonray_type": "Float", 
                "houdini_label": "Input Max", 
                "moonray_name": "input_max", 
                "order": 3, 
                "aliases": [
                    "input max"
                ]
            }, 
            "midpoint_bias_RGB": {
                "default_value": [
                    0.5, 
                    0.5, 
                    0.5
                ], 
                "houdini_name": "midpoint_bias_RGB", 
                "help": "biases the in-between values toward 'output min' or 'output max'. Default = 0.5", 
                "moonray_type": "Rgb", 
                "houdini_label": "Midpoint Bias RGB", 
                "moonray_name": "midpoint_bias_RGB", 
                "order": 14
            }
        }, 
        "folders_with_parms": {
            "Channel": [
                "input_min_RGB", 
                "input_max_RGB", 
                "output_min_RGB", 
                "output_max_RGB", 
                "midpoint_bias_RGB", 
                "clamp_min_RGB", 
                "clamp_max_RGB"
            ]
        }
    }, 
    "SwitchFloatMap": {
        "moonray_type": "Map", 
        "moonray_name": "SwitchFloatMap", 
        "folders_sorted": [], 
        "parms": {
            "input2": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input2", 
                "moonray_type": "Float", 
                "houdini_label": "Input2", 
                "bindable": true, 
                "moonray_name": "input2", 
                "order": 3
            }, 
            "input3": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input3", 
                "moonray_type": "Float", 
                "houdini_label": "Input3", 
                "bindable": true, 
                "moonray_name": "input3", 
                "order": 4
            }, 
            "input0": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input0", 
                "moonray_type": "Float", 
                "houdini_label": "Input0", 
                "bindable": true, 
                "moonray_name": "input0", 
                "order": 1
            }, 
            "input1": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input1", 
                "moonray_type": "Float", 
                "houdini_label": "Input1", 
                "bindable": true, 
                "moonray_name": "input1", 
                "order": 2
            }, 
            "input6": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input6", 
                "moonray_type": "Float", 
                "houdini_label": "Input6", 
                "bindable": true, 
                "moonray_name": "input6", 
                "order": 7
            }, 
            "input7": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input7", 
                "moonray_type": "Float", 
                "houdini_label": "Input7", 
                "bindable": true, 
                "moonray_name": "input7", 
                "order": 8
            }, 
            "input4": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input4", 
                "moonray_type": "Float", 
                "houdini_label": "Input4", 
                "bindable": true, 
                "moonray_name": "input4", 
                "order": 5
            }, 
            "input5": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input5", 
                "moonray_type": "Float", 
                "houdini_label": "Input5", 
                "bindable": true, 
                "moonray_name": "input5", 
                "order": 6
            }, 
            "input62": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input62", 
                "moonray_type": "Float", 
                "houdini_label": "Input62", 
                "bindable": true, 
                "moonray_name": "input62", 
                "order": 63
            }, 
            "input8": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input8", 
                "moonray_type": "Float", 
                "houdini_label": "Input8", 
                "bindable": true, 
                "moonray_name": "input8", 
                "order": 9
            }, 
            "input9": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input9", 
                "moonray_type": "Float", 
                "houdini_label": "Input9", 
                "bindable": true, 
                "moonray_name": "input9", 
                "order": 10
            }, 
            "input54": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input54", 
                "moonray_type": "Float", 
                "houdini_label": "Input54", 
                "bindable": true, 
                "moonray_name": "input54", 
                "order": 55
            }, 
            "input25": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input25", 
                "moonray_type": "Float", 
                "houdini_label": "Input25", 
                "bindable": true, 
                "moonray_name": "input25", 
                "order": 26
            }, 
            "input24": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input24", 
                "moonray_type": "Float", 
                "houdini_label": "Input24", 
                "bindable": true, 
                "moonray_name": "input24", 
                "order": 25
            }, 
            "input27": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input27", 
                "moonray_type": "Float", 
                "houdini_label": "Input27", 
                "bindable": true, 
                "moonray_name": "input27", 
                "order": 28
            }, 
            "input26": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input26", 
                "moonray_type": "Float", 
                "houdini_label": "Input26", 
                "bindable": true, 
                "moonray_name": "input26", 
                "order": 27
            }, 
            "input21": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input21", 
                "moonray_type": "Float", 
                "houdini_label": "Input21", 
                "bindable": true, 
                "moonray_name": "input21", 
                "order": 22
            }, 
            "input20": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input20", 
                "moonray_type": "Float", 
                "houdini_label": "Input20", 
                "bindable": true, 
                "moonray_name": "input20", 
                "order": 21
            }, 
            "input23": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input23", 
                "moonray_type": "Float", 
                "houdini_label": "Input23", 
                "bindable": true, 
                "moonray_name": "input23", 
                "order": 24
            }, 
            "input22": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input22", 
                "moonray_type": "Float", 
                "houdini_label": "Input22", 
                "bindable": true, 
                "moonray_name": "input22", 
                "order": 23
            }, 
            "input29": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input29", 
                "moonray_type": "Float", 
                "houdini_label": "Input29", 
                "bindable": true, 
                "moonray_name": "input29", 
                "order": 30
            }, 
            "input28": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input28", 
                "moonray_type": "Float", 
                "houdini_label": "Input28", 
                "bindable": true, 
                "moonray_name": "input28", 
                "order": 29
            }, 
            "input61": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input61", 
                "moonray_type": "Float", 
                "houdini_label": "Input61", 
                "bindable": true, 
                "moonray_name": "input61", 
                "order": 62
            }, 
            "input47": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input47", 
                "moonray_type": "Float", 
                "houdini_label": "Input47", 
                "bindable": true, 
                "moonray_name": "input47", 
                "order": 48
            }, 
            "input46": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input46", 
                "moonray_type": "Float", 
                "houdini_label": "Input46", 
                "bindable": true, 
                "moonray_name": "input46", 
                "order": 47
            }, 
            "input45": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input45", 
                "moonray_type": "Float", 
                "houdini_label": "Input45", 
                "bindable": true, 
                "moonray_name": "input45", 
                "order": 46
            }, 
            "input44": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input44", 
                "moonray_type": "Float", 
                "houdini_label": "Input44", 
                "bindable": true, 
                "moonray_name": "input44", 
                "order": 45
            }, 
            "input43": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input43", 
                "moonray_type": "Float", 
                "houdini_label": "Input43", 
                "bindable": true, 
                "moonray_name": "input43", 
                "order": 44
            }, 
            "input42": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input42", 
                "moonray_type": "Float", 
                "houdini_label": "Input42", 
                "bindable": true, 
                "moonray_name": "input42", 
                "order": 43
            }, 
            "input41": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input41", 
                "moonray_type": "Float", 
                "houdini_label": "Input41", 
                "bindable": true, 
                "moonray_name": "input41", 
                "order": 42
            }, 
            "input40": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input40", 
                "moonray_type": "Float", 
                "houdini_label": "Input40", 
                "bindable": true, 
                "moonray_name": "input40", 
                "order": 41
            }, 
            "input55": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input55", 
                "moonray_type": "Float", 
                "houdini_label": "Input55", 
                "bindable": true, 
                "moonray_name": "input55", 
                "order": 56
            }, 
            "input49": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input49", 
                "moonray_type": "Float", 
                "houdini_label": "Input49", 
                "bindable": true, 
                "moonray_name": "input49", 
                "order": 50
            }, 
            "input48": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input48", 
                "moonray_type": "Float", 
                "houdini_label": "Input48", 
                "bindable": true, 
                "moonray_name": "input48", 
                "order": 49
            }, 
            "input60": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input60", 
                "moonray_type": "Float", 
                "houdini_label": "Input60", 
                "bindable": true, 
                "moonray_name": "input60", 
                "order": 61
            }, 
            "choice": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use", 
                "moonray_type": "Float", 
                "houdini_label": "Choice", 
                "bindable": true, 
                "moonray_name": "choice", 
                "order": 0
            }, 
            "input32": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input32", 
                "moonray_type": "Float", 
                "houdini_label": "Input32", 
                "bindable": true, 
                "moonray_name": "input32", 
                "order": 33
            }, 
            "input33": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input33", 
                "moonray_type": "Float", 
                "houdini_label": "Input33", 
                "bindable": true, 
                "moonray_name": "input33", 
                "order": 34
            }, 
            "input30": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input30", 
                "moonray_type": "Float", 
                "houdini_label": "Input30", 
                "bindable": true, 
                "moonray_name": "input30", 
                "order": 31
            }, 
            "input31": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input31", 
                "moonray_type": "Float", 
                "houdini_label": "Input31", 
                "bindable": true, 
                "moonray_name": "input31", 
                "order": 32
            }, 
            "input36": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input36", 
                "moonray_type": "Float", 
                "houdini_label": "Input36", 
                "bindable": true, 
                "moonray_name": "input36", 
                "order": 37
            }, 
            "input37": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input37", 
                "moonray_type": "Float", 
                "houdini_label": "Input37", 
                "bindable": true, 
                "moonray_name": "input37", 
                "order": 38
            }, 
            "input34": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input34", 
                "moonray_type": "Float", 
                "houdini_label": "Input34", 
                "bindable": true, 
                "moonray_name": "input34", 
                "order": 35
            }, 
            "input35": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input35", 
                "moonray_type": "Float", 
                "houdini_label": "Input35", 
                "bindable": true, 
                "moonray_name": "input35", 
                "order": 36
            }, 
            "input63": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input63", 
                "moonray_type": "Float", 
                "houdini_label": "Input63", 
                "bindable": true, 
                "moonray_name": "input63", 
                "order": 64
            }, 
            "input58": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input58", 
                "moonray_type": "Float", 
                "houdini_label": "Input58", 
                "bindable": true, 
                "moonray_name": "input58", 
                "order": 59
            }, 
            "input38": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input38", 
                "moonray_type": "Float", 
                "houdini_label": "Input38", 
                "bindable": true, 
                "moonray_name": "input38", 
                "order": 39
            }, 
            "input39": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input39", 
                "moonray_type": "Float", 
                "houdini_label": "Input39", 
                "bindable": true, 
                "moonray_name": "input39", 
                "order": 40
            }, 
            "input59": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input59", 
                "moonray_type": "Float", 
                "houdini_label": "Input59", 
                "bindable": true, 
                "moonray_name": "input59", 
                "order": 60
            }, 
            "input18": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input18", 
                "moonray_type": "Float", 
                "houdini_label": "Input18", 
                "bindable": true, 
                "moonray_name": "input18", 
                "order": 19
            }, 
            "input19": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input19", 
                "moonray_type": "Float", 
                "houdini_label": "Input19", 
                "bindable": true, 
                "moonray_name": "input19", 
                "order": 20
            }, 
            "input56": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input56", 
                "moonray_type": "Float", 
                "houdini_label": "Input56", 
                "bindable": true, 
                "moonray_name": "input56", 
                "order": 57
            }, 
            "input57": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input57", 
                "moonray_type": "Float", 
                "houdini_label": "Input57", 
                "bindable": true, 
                "moonray_name": "input57", 
                "order": 58
            }, 
            "input50": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input50", 
                "moonray_type": "Float", 
                "houdini_label": "Input50", 
                "bindable": true, 
                "moonray_name": "input50", 
                "order": 51
            }, 
            "input51": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input51", 
                "moonray_type": "Float", 
                "houdini_label": "Input51", 
                "bindable": true, 
                "moonray_name": "input51", 
                "order": 52
            }, 
            "input52": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input52", 
                "moonray_type": "Float", 
                "houdini_label": "Input52", 
                "bindable": true, 
                "moonray_name": "input52", 
                "order": 53
            }, 
            "input53": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input53", 
                "moonray_type": "Float", 
                "houdini_label": "Input53", 
                "bindable": true, 
                "moonray_name": "input53", 
                "order": 54
            }, 
            "input10": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input10", 
                "moonray_type": "Float", 
                "houdini_label": "Input10", 
                "bindable": true, 
                "moonray_name": "input10", 
                "order": 11
            }, 
            "input11": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input11", 
                "moonray_type": "Float", 
                "houdini_label": "Input11", 
                "bindable": true, 
                "moonray_name": "input11", 
                "order": 12
            }, 
            "input12": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input12", 
                "moonray_type": "Float", 
                "houdini_label": "Input12", 
                "bindable": true, 
                "moonray_name": "input12", 
                "order": 13
            }, 
            "input13": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input13", 
                "moonray_type": "Float", 
                "houdini_label": "Input13", 
                "bindable": true, 
                "moonray_name": "input13", 
                "order": 14
            }, 
            "input14": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input14", 
                "moonray_type": "Float", 
                "houdini_label": "Input14", 
                "bindable": true, 
                "moonray_name": "input14", 
                "order": 15
            }, 
            "input15": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input15", 
                "moonray_type": "Float", 
                "houdini_label": "Input15", 
                "bindable": true, 
                "moonray_name": "input15", 
                "order": 16
            }, 
            "input16": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input16", 
                "moonray_type": "Float", 
                "houdini_label": "Input16", 
                "bindable": true, 
                "moonray_name": "input16", 
                "order": 17
            }, 
            "input17": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input17", 
                "moonray_type": "Float", 
                "houdini_label": "Input17", 
                "bindable": true, 
                "moonray_name": "input17", 
                "order": 18
            }
        }, 
        "folders_with_parms": {}
    }, 
    "OpDisplayFilter": {
        "moonray_type": "DisplayFilter", 
        "moonray_name": "OpDisplayFilter", 
        "folders_sorted": [
            "Advanced"
        ], 
        "parms": {
            "input2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input2", 
                "help": "Second RenderOutput; optional", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input2", 
                "interface": "RenderOutput", 
                "moonray_name": "input2", 
                "order": 2
            }, 
            "input1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input1", 
                "help": "First RenderOutput; required", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input1", 
                "interface": "RenderOutput", 
                "moonray_name": "input1", 
                "order": 1
            }, 
            "invert_mask": {
                "default_value": [
                    false
                ], 
                "houdini_name": "invert_mask", 
                "help": "Invert the value of the mask", 
                "moonray_type": "Bool", 
                "houdini_label": "Invert Mask", 
                "moonray_name": "invert_mask", 
                "order": 4
            }, 
            "mask": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "mask", 
                "help": "RenderOutput used to mask the output, revealing input1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Mask", 
                "interface": "RenderOutput", 
                "moonray_name": "mask", 
                "order": 3
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "Blend [0,1] between input and output", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "operation": {
                "default_value": [
                    0
                ], 
                "houdini_name": "operation", 
                "help": "Operation to use on the input(s)", 
                "moonray_type": "Int", 
                "menu": [
                    "add", 
                    "subtract", 
                    "multiply", 
                    "divide", 
                    "min", 
                    "max", 
                    "power", 
                    "cross", 
                    "dot", 
                    "modulo", 
                    "greater_than", 
                    "greater_than_or_equal", 
                    "less_than", 
                    "less_than_or_equal", 
                    "equal", 
                    "not_equal", 
                    "and", 
                    "or", 
                    "xor", 
                    "invert", 
                    "normalize", 
                    "abs", 
                    "ceil", 
                    "floor", 
                    "length", 
                    "sine", 
                    "cosine", 
                    "round", 
                    "acos", 
                    "not"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12", 
                    "13", 
                    "14", 
                    "15", 
                    "16", 
                    "17", 
                    "18", 
                    "19", 
                    "20", 
                    "21", 
                    "22", 
                    "23", 
                    "24", 
                    "25", 
                    "26", 
                    "27", 
                    "28", 
                    "29"
                ], 
                "houdini_label": "Operation", 
                "moonray_name": "operation", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Advanced": [
                "invert_mask", 
                "mix"
            ]
        }
    }, 
    "AxisAngleMap": {
        "moonray_type": "Map", 
        "moonray_name": "AxisAngleMap", 
        "folders_sorted": [], 
        "parms": {
            "input_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "input_space", 
                "help": "the space to transform from", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Input Space", 
                "moonray_name": "input_space", 
                "order": 1
            }, 
            "angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "angle", 
                "help": "the angle of rotation in degrees", 
                "moonray_type": "Float", 
                "houdini_label": "Angle", 
                "bindable": true, 
                "moonray_name": "angle", 
                "order": 4
            }, 
            "input_vector": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "input_vector", 
                "help": "input vector to be rotated", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Vector", 
                "bindable": true, 
                "moonray_name": "input_vector", 
                "order": 0
            }, 
            "axis_space": {
                "default_value": [
                    2
                ], 
                "houdini_name": "axis_space", 
                "help": "the space of the axis to rotate about", 
                "moonray_type": "Int", 
                "menu": [
                    "world", 
                    "object"
                ], 
                "menu_values": [
                    "2", 
                    "4"
                ], 
                "houdini_label": "Axis Space", 
                "moonray_name": "axis_space", 
                "order": 3
            }, 
            "output_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "output_space", 
                "help": "the space to transform the resulting vector to", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Output Space", 
                "moonray_name": "output_space", 
                "order": 5
            }, 
            "rotation_axis": {
                "default_value": [
                    0.0, 
                    1.0, 
                    0.0
                ], 
                "houdini_name": "rotation_axis", 
                "help": "axis to be rotated around", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation Axis", 
                "bindable": true, 
                "moonray_name": "rotation_axis", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DistantLight": {
        "moonray_type": "Light", 
        "moonray_name": "DistantLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags"
        ], 
        "parms": {
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "If set to true, a normalisation factor is applied to the light's radiance. The normalisation factor used is such that if a distant light of radiance (1,1,1) is directly overhead a Lambertian surface of colour (1,1,1), the  resulting outgoing radiance at the surface will be (1,1,1) regardless of the light's angular extent.\nIf set to false, the light's radiance is used as-is.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "angular_extent": {
                "default_value": [
                    0.53
                ], 
                "houdini_name": "angular_extent", 
                "help": "The angle in degrees subtended by the DistantLight's diameter.", 
                "moonray_type": "Float", 
                "houdini_label": "Angular Extent", 
                "moonray_name": "angular_extent", 
                "order": 35, 
                "aliases": [
                    "angular extent"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "angular_extent"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ]
        }
    }, 
    "ProjectTriplanarNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "ProjectTriplanarNormalMap", 
        "folders_sorted": [
            "Positive X Modifiers", 
            "Positive Y Modifiers", 
            "Positive Z Modifiers", 
            "Negative X Modifiers", 
            "Negative Y Modifiers", 
            "Negative Z Modifiers"
        ], 
        "parms": {
            "positive_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert S", 
                "moonray_name": "positive_z_invert_s", 
                "order": 38, 
                "aliases": [
                    "positive z invert s"
                ]
            }, 
            "negative_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Scale", 
                "moonray_name": "negative_y_scale", 
                "order": 52, 
                "aliases": [
                    "negative y scale"
                ]
            }, 
            "negative_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Rotation Center", 
                "moonray_name": "negative_z_rotation_center", 
                "order": 66, 
                "aliases": [
                    "negative z rotation center"
                ]
            }, 
            "negative_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Swap St", 
                "moonray_name": "negative_y_swap_st", 
                "order": 56, 
                "aliases": [
                    "negative y swap st"
                ]
            }, 
            "negative_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative X Rotation", 
                "moonray_name": "negative_x_rotation", 
                "order": 49, 
                "aliases": [
                    "negative x rotation"
                ]
            }, 
            "randomize_flip": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_flip", 
                "help": "Rnd flipping in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Flip", 
                "moonray_name": "randomize_flip", 
                "order": 6, 
                "aliases": [
                    "randomize flip"
                ]
            }, 
            "positive_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Offset", 
                "moonray_name": "positive_y_offset", 
                "order": 29, 
                "aliases": [
                    "positive y offset"
                ]
            }, 
            "positive_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Wrap Around", 
                "moonray_name": "positive_x_wrap_around", 
                "order": 27, 
                "aliases": [
                    "positive x wrap around"
                ]
            }, 
            "negative_z_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert S", 
                "moonray_name": "negative_z_invert_s", 
                "order": 62, 
                "aliases": [
                    "negative z invert s"
                ]
            }, 
            "negative_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative X Texture", 
                "moonray_name": "negative_x_texture", 
                "order": 15, 
                "aliases": [
                    "negative x texture"
                ]
            }, 
            "projection_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "projection_mode", 
                "help": "Source parameters to use for projection transform", 
                "moonray_type": "Int", 
                "menu": [
                    "projector", 
                    "projection_matrix", 
                    "TRS"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Projection Mode", 
                "moonray_name": "projection_mode", 
                "order": 68
            }, 
            "positive_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert T", 
                "moonray_name": "positive_x_invert_t", 
                "order": 23, 
                "aliases": [
                    "positive x invert t"
                ]
            }, 
            "positive_x_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_x_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive X Rotation", 
                "moonray_name": "positive_x_rotation", 
                "order": 25, 
                "aliases": [
                    "positive x rotation"
                ]
            }, 
            "positive_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Y Texture", 
                "moonray_name": "positive_y_texture", 
                "order": 11, 
                "aliases": [
                    "positive y texture"
                ]
            }, 
            "positive_y_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_y_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Scale", 
                "moonray_name": "positive_y_scale", 
                "order": 28, 
                "aliases": [
                    "positive y scale"
                ]
            }, 
            "positive_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Invert S", 
                "moonray_name": "positive_x_invert_s", 
                "order": 22, 
                "aliases": [
                    "positive x invert s"
                ]
            }, 
            "negative_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Rotation Center", 
                "moonray_name": "negative_x_rotation_center", 
                "order": 50, 
                "aliases": [
                    "negative x rotation center"
                ]
            }, 
            "negative_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Wrap Around", 
                "moonray_name": "negative_z_wrap_around", 
                "order": 67, 
                "aliases": [
                    "negative z wrap around"
                ]
            }, 
            "positive_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert S", 
                "moonray_name": "positive_y_invert_s", 
                "order": 30, 
                "aliases": [
                    "positive y invert s"
                ]
            }, 
            "negative_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Scale", 
                "moonray_name": "negative_x_scale", 
                "order": 44, 
                "aliases": [
                    "negative x scale"
                ]
            }, 
            "negative_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Z Rotation", 
                "moonray_name": "negative_z_rotation", 
                "order": 65, 
                "aliases": [
                    "negative z rotation"
                ]
            }, 
            "positive_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Invert T", 
                "moonray_name": "positive_y_invert_t", 
                "order": 31, 
                "aliases": [
                    "positive y invert t"
                ]
            }, 
            "positive_z_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Rotation Center", 
                "moonray_name": "positive_z_rotation_center", 
                "order": 42, 
                "aliases": [
                    "positive z rotation center"
                ]
            }, 
            "projection_matrix": {
                "default_value": [
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "projection_matrix", 
                "help": "the transform to use for projection", 
                "moonray_type": "Mat4d", 
                "houdini_label": "Projection Matrix", 
                "moonray_name": "projection_matrix", 
                "order": 70
            }, 
            "positive_y_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_y_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Swap St", 
                "moonray_name": "positive_y_swap_st", 
                "order": 32, 
                "aliases": [
                    "positive y swap st"
                ]
            }, 
            "positive_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Swap St", 
                "moonray_name": "positive_z_swap_st", 
                "order": 40, 
                "aliases": [
                    "positive z swap st"
                ]
            }, 
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the object whose transform to use for projection", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Node", 
                "moonray_name": "projector", 
                "order": 69
            }, 
            "rotation_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "rotation_order", 
                "help": "Order in which to apply rotation transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "xyz", 
                    "xzy", 
                    "yxz", 
                    "yzx", 
                    "zxy", 
                    "zyx"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Rotation Order", 
                "moonray_name": "rotation_order", 
                "order": 72
            }, 
            "positive_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Invert T", 
                "moonray_name": "positive_z_invert_t", 
                "order": 39, 
                "aliases": [
                    "positive z invert t"
                ]
            }, 
            "positive_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Offset", 
                "moonray_name": "positive_z_offset", 
                "order": 37, 
                "aliases": [
                    "positive z offset"
                ]
            }, 
            "TRS_order": {
                "default_value": [
                    0
                ], 
                "houdini_name": "TRS_order", 
                "help": "Order in which to apply transformations", 
                "moonray_type": "Int", 
                "menu": [
                    "Scale Rot Trans", 
                    "Scale Trans Rot", 
                    "Rot Scale Trans", 
                    "Rot Trans Scale", 
                    "Trans Scale Rot", 
                    "Trans Rot Scale"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "TRS Order", 
                "moonray_name": "TRS_order", 
                "order": 71
            }, 
            "positive_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Y Rotation Center", 
                "moonray_name": "positive_y_rotation_center", 
                "order": 34, 
                "aliases": [
                    "positive y rotation center"
                ]
            }, 
            "negative_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Active", 
                "moonray_name": "negative_x_active", 
                "order": 14, 
                "aliases": [
                    "negative x active"
                ]
            }, 
            "positive_x_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Rotation Center", 
                "moonray_name": "positive_x_rotation_center", 
                "order": 26, 
                "aliases": [
                    "positive x rotation center"
                ]
            }, 
            "positive_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Active", 
                "moonray_name": "positive_y_active", 
                "order": 10, 
                "aliases": [
                    "positive y active"
                ]
            }, 
            "positive_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "positive_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Swap St", 
                "moonray_name": "positive_x_swap_st", 
                "order": 24, 
                "aliases": [
                    "positive x swap st"
                ]
            }, 
            "translate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "translate", 
                "help": "Tranlation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Translate", 
                "moonray_name": "translate", 
                "order": 73
            }, 
            "negative_y_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Offset", 
                "moonray_name": "negative_y_offset", 
                "order": 53, 
                "aliases": [
                    "negative y offset"
                ]
            }, 
            "negative_x_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert T", 
                "moonray_name": "negative_x_invert_t", 
                "order": 47, 
                "aliases": [
                    "negative x invert t"
                ]
            }, 
            "negative_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative X Offset", 
                "moonray_name": "negative_x_offset", 
                "order": 45, 
                "aliases": [
                    "negative x offset"
                ]
            }, 
            "negative_z_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Swap St", 
                "moonray_name": "negative_z_swap_st", 
                "order": 64, 
                "aliases": [
                    "negative z swap st"
                ]
            }, 
            "positive_x_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_x_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive X Active", 
                "moonray_name": "positive_x_active", 
                "order": 8, 
                "aliases": [
                    "positive x active"
                ]
            }, 
            "positive_x_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_x_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive X Texture", 
                "moonray_name": "positive_x_texture", 
                "order": 9, 
                "aliases": [
                    "positive x texture"
                ]
            }, 
            "random_seed": {
                "default_value": [
                    8241
                ], 
                "houdini_name": "random_seed", 
                "help": "Seed for randomizing orientation, offset, and flip", 
                "moonray_type": "Int", 
                "houdini_label": "Random Seed", 
                "moonray_name": "random_seed", 
                "order": 4, 
                "aliases": [
                    "random seed"
                ]
            }, 
            "positive_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive Z Scale", 
                "moonray_name": "positive_z_scale", 
                "order": 36, 
                "aliases": [
                    "positive z scale"
                ]
            }, 
            "positive_z_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_z_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Z Rotation", 
                "moonray_name": "positive_z_rotation", 
                "order": 41, 
                "aliases": [
                    "positive z rotation"
                ]
            }, 
            "negative_z_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "negative_z_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Scale", 
                "moonray_name": "negative_z_scale", 
                "order": 60, 
                "aliases": [
                    "negative z scale"
                ]
            }, 
            "negative_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "negative_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Negative Y Rotation", 
                "moonray_name": "negative_y_rotation", 
                "order": 57, 
                "aliases": [
                    "negative y rotation"
                ]
            }, 
            "transition_width": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "transition_width", 
                "help": "Controls blending of per-axis projections.   Valid range is 0.0 (no blending) to 1.0 (max blending)", 
                "moonray_type": "Float", 
                "houdini_label": "Transition Width", 
                "moonray_name": "transition_width", 
                "order": 3, 
                "aliases": [
                    "transition width"
                ]
            }, 
            "rotate": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "rotate", 
                "help": "Rotation of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Rotate", 
                "moonray_name": "rotate", 
                "order": 74
            }, 
            "normal_encoding": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_encoding", 
                "help": "Most normal maps are encoded [0,1].   Only certain rare floating point normal maps are encoded [-1,1]", 
                "moonray_type": "Int", 
                "menu": [
                    "[0,1]", 
                    "[-1,1]"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Encoding", 
                "moonray_name": "normal_encoding", 
                "order": 1, 
                "aliases": [
                    "normal encoding"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "help": "Scale of the projection transform", 
                "moonray_type": "Vec3d", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 75
            }, 
            "number_of_textures": {
                "default_value": [
                    3
                ], 
                "houdini_name": "number_of_textures", 
                "help": "Controls the number of active textures.   If set to 'one', only the 'pos x' texture settings will be used for all sides.   If set to 'three' the pos x, pos y, and pos z settings will be used for their respective negative sides.   If set to 'six', each side has independent controls and texture.", 
                "moonray_type": "Int", 
                "menu": [
                    "one", 
                    "three", 
                    "six"
                ], 
                "menu_values": [
                    "1", 
                    "3", 
                    "6"
                ], 
                "houdini_label": "Number Of Textures", 
                "moonray_name": "number_of_textures", 
                "order": 2, 
                "aliases": [
                    "number of textures"
                ]
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "Project onto reference positions ('ref_P') and normals ('ref_N')", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 0, 
                "aliases": [
                    "use reference space"
                ]
            }, 
            "positive_y_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "positive_y_rotation", 
                "help": "2D rotation amount", 
                "moonray_type": "Float", 
                "houdini_label": "Positive Y Rotation", 
                "moonray_name": "positive_y_rotation", 
                "order": 33, 
                "aliases": [
                    "positive y rotation"
                ]
            }, 
            "positive_x_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "positive_x_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Offset", 
                "moonray_name": "positive_x_offset", 
                "order": 21, 
                "aliases": [
                    "positive x offset"
                ]
            }, 
            "negative_x_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Invert S", 
                "moonray_name": "negative_x_invert_s", 
                "order": 46, 
                "aliases": [
                    "negative x invert s"
                ]
            }, 
            "negative_y_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_y_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Y Texture", 
                "moonray_name": "negative_y_texture", 
                "order": 17, 
                "aliases": [
                    "negative y texture"
                ]
            }, 
            "randomize_rotation": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_rotation", 
                "help": "Rnd 2d rotation of each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Rotation", 
                "moonray_name": "randomize_rotation", 
                "order": 5, 
                "aliases": [
                    "randomize rotation"
                ]
            }, 
            "randomize_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "randomize_offset", 
                "help": "Rnd offset in S or T for each active texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Randomize Offset", 
                "moonray_name": "randomize_offset", 
                "order": 7, 
                "aliases": [
                    "randomize offset"
                ]
            }, 
            "negative_z_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_z_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Invert T", 
                "moonray_name": "negative_z_invert_t", 
                "order": 63, 
                "aliases": [
                    "negative z invert t"
                ]
            }, 
            "negative_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "negative_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Negative Z Texture", 
                "moonray_name": "negative_z_texture", 
                "order": 19, 
                "aliases": [
                    "negative z texture"
                ]
            }, 
            "negative_x_swap_st": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_x_swap_st", 
                "help": "Swap the s and t directions.   Same as a 90 degree rotation", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Swap St", 
                "moonray_name": "negative_x_swap_st", 
                "order": 48, 
                "aliases": [
                    "negative x swap st"
                ]
            }, 
            "positive_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Y Wrap Around", 
                "moonray_name": "positive_y_wrap_around", 
                "order": 35, 
                "aliases": [
                    "positive y wrap around"
                ]
            }, 
            "positive_x_scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "positive_x_scale", 
                "help": "2D scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Positive X Scale", 
                "moonray_name": "positive_x_scale", 
                "order": 20, 
                "aliases": [
                    "positive x scale"
                ]
            }, 
            "positive_z_texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "positive_z_texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Positive Z Texture", 
                "moonray_name": "positive_z_texture", 
                "order": 13, 
                "aliases": [
                    "positive z texture"
                ]
            }, 
            "positive_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Active", 
                "moonray_name": "positive_z_active", 
                "order": 12, 
                "aliases": [
                    "positive z active"
                ]
            }, 
            "negative_y_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Active", 
                "moonray_name": "negative_y_active", 
                "order": 16, 
                "aliases": [
                    "negative y active"
                ]
            }, 
            "positive_z_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "positive_z_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Positive Z Wrap Around", 
                "moonray_name": "positive_z_wrap_around", 
                "order": 43, 
                "aliases": [
                    "positive z wrap around"
                ]
            }, 
            "negative_z_active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_z_active", 
                "help": "Turns this direction on/off.  Output is black if off.", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Z Active", 
                "moonray_name": "negative_z_active", 
                "order": 18, 
                "aliases": [
                    "negative z active"
                ]
            }, 
            "negative_z_offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_z_offset", 
                "help": "2D offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Z Offset", 
                "moonray_name": "negative_z_offset", 
                "order": 61, 
                "aliases": [
                    "negative z offset"
                ]
            }, 
            "negative_y_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_y_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Wrap Around", 
                "moonray_name": "negative_y_wrap_around", 
                "order": 59, 
                "aliases": [
                    "negative y wrap around"
                ]
            }, 
            "negative_x_wrap_around": {
                "default_value": [
                    true
                ], 
                "houdini_name": "negative_x_wrap_around", 
                "help": "Controls whether to repeat (true) or clamp (false) the texture", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative X Wrap Around", 
                "moonray_name": "negative_x_wrap_around", 
                "order": 51, 
                "aliases": [
                    "negative x wrap around"
                ]
            }, 
            "negative_y_invert_t": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_t", 
                "help": "Flip in the t direction (vertical)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert T", 
                "moonray_name": "negative_y_invert_t", 
                "order": 55, 
                "aliases": [
                    "negative y invert t"
                ]
            }, 
            "negative_y_rotation_center": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "negative_y_rotation_center", 
                "help": "2D rotation center", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Negative Y Rotation Center", 
                "moonray_name": "negative_y_rotation_center", 
                "order": 58, 
                "aliases": [
                    "negative y rotation center"
                ]
            }, 
            "negative_y_invert_s": {
                "default_value": [
                    false
                ], 
                "houdini_name": "negative_y_invert_s", 
                "help": "Flip in the s direction (horizontal)", 
                "moonray_type": "Bool", 
                "houdini_label": "Negative Y Invert S", 
                "moonray_name": "negative_y_invert_s", 
                "order": 54, 
                "aliases": [
                    "negative y invert s"
                ]
            }
        }, 
        "folders_with_parms": {
            "Negative Z Modifiers": [
                "negative_z_scale", 
                "negative_z_offset", 
                "negative_z_invert_s", 
                "negative_z_invert_t", 
                "negative_z_swap_st", 
                "negative_z_rotation", 
                "negative_z_rotation_center", 
                "negative_z_wrap_around"
            ], 
            "Positive X Modifiers": [
                "positive_x_scale", 
                "positive_x_offset", 
                "positive_x_invert_s", 
                "positive_x_invert_t", 
                "positive_x_swap_st", 
                "positive_x_rotation", 
                "positive_x_rotation_center", 
                "positive_x_wrap_around"
            ], 
            "Positive Y Modifiers": [
                "positive_y_scale", 
                "positive_y_offset", 
                "positive_y_invert_s", 
                "positive_y_invert_t", 
                "positive_y_swap_st", 
                "positive_y_rotation", 
                "positive_y_rotation_center", 
                "positive_y_wrap_around"
            ], 
            "Negative Y Modifiers": [
                "negative_y_scale", 
                "negative_y_offset", 
                "negative_y_invert_s", 
                "negative_y_invert_t", 
                "negative_y_swap_st", 
                "negative_y_rotation", 
                "negative_y_rotation_center", 
                "negative_y_wrap_around"
            ], 
            "Positive Z Modifiers": [
                "positive_z_scale", 
                "positive_z_offset", 
                "positive_z_invert_s", 
                "positive_z_invert_t", 
                "positive_z_swap_st", 
                "positive_z_rotation", 
                "positive_z_rotation_center", 
                "positive_z_wrap_around"
            ], 
            "Negative X Modifiers": [
                "negative_x_scale", 
                "negative_x_offset", 
                "negative_x_invert_s", 
                "negative_x_invert_t", 
                "negative_x_swap_st", 
                "negative_x_rotation", 
                "negative_x_rotation_center", 
                "negative_x_wrap_around"
            ]
        }
    }, 
    "SwitchDisplacement": {
        "moonray_type": "Displacement", 
        "moonray_name": "SwitchDisplacement", 
        "folders_sorted": [], 
        "parms": {
            "displacement35": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement35", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement35", 
                "interface": "Displacement", 
                "moonray_name": "displacement35", 
                "order": 37
            }, 
            "displacement40": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement40", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement40", 
                "interface": "Displacement", 
                "moonray_name": "displacement40", 
                "order": 42
            }, 
            "displacement32": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement32", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement32", 
                "interface": "Displacement", 
                "moonray_name": "displacement32", 
                "order": 34
            }, 
            "displacement33": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement33", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement33", 
                "interface": "Displacement", 
                "moonray_name": "displacement33", 
                "order": 35
            }, 
            "displacement49": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement49", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement49", 
                "interface": "Displacement", 
                "moonray_name": "displacement49", 
                "order": 51
            }, 
            "displacement48": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement48", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement48", 
                "interface": "Displacement", 
                "moonray_name": "displacement48", 
                "order": 50
            }, 
            "displacement30": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement30", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement30", 
                "interface": "Displacement", 
                "moonray_name": "displacement30", 
                "order": 32
            }, 
            "displacement43": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement43", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement43", 
                "interface": "Displacement", 
                "moonray_name": "displacement43", 
                "order": 45
            }, 
            "displacement42": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement42", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement42", 
                "interface": "Displacement", 
                "moonray_name": "displacement42", 
                "order": 44
            }, 
            "displacement41": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement41", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement41", 
                "interface": "Displacement", 
                "moonray_name": "displacement41", 
                "order": 43
            }, 
            "displacement31": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement31", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement31", 
                "interface": "Displacement", 
                "moonray_name": "displacement31", 
                "order": 33
            }, 
            "displacement47": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement47", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement47", 
                "interface": "Displacement", 
                "moonray_name": "displacement47", 
                "order": 49
            }, 
            "displacement46": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement46", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement46", 
                "interface": "Displacement", 
                "moonray_name": "displacement46", 
                "order": 48
            }, 
            "displacement45": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement45", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement45", 
                "interface": "Displacement", 
                "moonray_name": "displacement45", 
                "order": 47
            }, 
            "bound_padding": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "bound_padding", 
                "help": "bound padding defines how much to extend the bounding box of the object. Keep this value as low as possible unless the geometry skips tessellation because control cage bounding box is out of camera frustum but the displacement stretch out of the original object bounding box (pre-displacement). Setting the bound padding too large will consume more memory and tessellation time.", 
                "moonray_type": "Float", 
                "houdini_label": "Bound Padding", 
                "moonray_name": "bound_padding", 
                "order": 0, 
                "aliases": [
                    "bound padding"
                ]
            }, 
            "displacement61": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement61", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement61", 
                "interface": "Displacement", 
                "moonray_name": "displacement61", 
                "order": 63
            }, 
            "displacement60": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement60", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement60", 
                "interface": "Displacement", 
                "moonray_name": "displacement60", 
                "order": 62
            }, 
            "displacement63": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement63", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement63", 
                "interface": "Displacement", 
                "moonray_name": "displacement63", 
                "order": 65
            }, 
            "displacement37": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement37", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement37", 
                "interface": "Displacement", 
                "moonray_name": "displacement37", 
                "order": 39
            }, 
            "displacement29": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement29", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement29", 
                "interface": "Displacement", 
                "moonray_name": "displacement29", 
                "order": 31
            }, 
            "displacement28": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement28", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement28", 
                "interface": "Displacement", 
                "moonray_name": "displacement28", 
                "order": 30
            }, 
            "displacement25": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement25", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement25", 
                "interface": "Displacement", 
                "moonray_name": "displacement25", 
                "order": 27
            }, 
            "displacement24": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement24", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement24", 
                "interface": "Displacement", 
                "moonray_name": "displacement24", 
                "order": 26
            }, 
            "displacement27": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement27", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement27", 
                "interface": "Displacement", 
                "moonray_name": "displacement27", 
                "order": 29
            }, 
            "displacement26": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement26", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement26", 
                "interface": "Displacement", 
                "moonray_name": "displacement26", 
                "order": 28
            }, 
            "displacement21": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement21", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement21", 
                "interface": "Displacement", 
                "moonray_name": "displacement21", 
                "order": 23
            }, 
            "displacement20": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement20", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement20", 
                "interface": "Displacement", 
                "moonray_name": "displacement20", 
                "order": 22
            }, 
            "displacement23": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement23", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement23", 
                "interface": "Displacement", 
                "moonray_name": "displacement23", 
                "order": 25
            }, 
            "displacement22": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement22", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement22", 
                "interface": "Displacement", 
                "moonray_name": "displacement22", 
                "order": 24
            }, 
            "displacement44": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement44", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement44", 
                "interface": "Displacement", 
                "moonray_name": "displacement44", 
                "order": 46
            }, 
            "displacement34": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement34", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement34", 
                "interface": "Displacement", 
                "moonray_name": "displacement34", 
                "order": 36
            }, 
            "choice": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "choice", 
                "help": "which of the 64 inputs (0 to 63) to use, values greater than 63 get cycled back to be in [0,63]", 
                "moonray_type": "Float", 
                "houdini_label": "Choice", 
                "bindable": true, 
                "moonray_name": "choice", 
                "order": 1
            }, 
            "displacement62": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement62", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement62", 
                "interface": "Displacement", 
                "moonray_name": "displacement62", 
                "order": 64
            }, 
            "displacement58": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement58", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement58", 
                "interface": "Displacement", 
                "moonray_name": "displacement58", 
                "order": 60
            }, 
            "displacement59": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement59", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement59", 
                "interface": "Displacement", 
                "moonray_name": "displacement59", 
                "order": 61
            }, 
            "displacement54": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement54", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement54", 
                "interface": "Displacement", 
                "moonray_name": "displacement54", 
                "order": 56
            }, 
            "displacement55": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement55", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement55", 
                "interface": "Displacement", 
                "moonray_name": "displacement55", 
                "order": 57
            }, 
            "displacement56": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement56", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement56", 
                "interface": "Displacement", 
                "moonray_name": "displacement56", 
                "order": 58
            }, 
            "displacement57": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement57", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement57", 
                "interface": "Displacement", 
                "moonray_name": "displacement57", 
                "order": 59
            }, 
            "displacement50": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement50", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement50", 
                "interface": "Displacement", 
                "moonray_name": "displacement50", 
                "order": 52
            }, 
            "displacement51": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement51", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement51", 
                "interface": "Displacement", 
                "moonray_name": "displacement51", 
                "order": 53
            }, 
            "displacement52": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement52", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement52", 
                "interface": "Displacement", 
                "moonray_name": "displacement52", 
                "order": 54
            }, 
            "displacement53": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement53", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement53", 
                "interface": "Displacement", 
                "moonray_name": "displacement53", 
                "order": 55
            }, 
            "displacement18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement18", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement18", 
                "interface": "Displacement", 
                "moonray_name": "displacement18", 
                "order": 20
            }, 
            "displacement19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement19", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement19", 
                "interface": "Displacement", 
                "moonray_name": "displacement19", 
                "order": 21
            }, 
            "displacement38": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement38", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement38", 
                "interface": "Displacement", 
                "moonray_name": "displacement38", 
                "order": 40
            }, 
            "displacement39": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement39", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement39", 
                "interface": "Displacement", 
                "moonray_name": "displacement39", 
                "order": 41
            }, 
            "displacement10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement10", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement10", 
                "interface": "Displacement", 
                "moonray_name": "displacement10", 
                "order": 12
            }, 
            "displacement11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement11", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement11", 
                "interface": "Displacement", 
                "moonray_name": "displacement11", 
                "order": 13
            }, 
            "displacement12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement12", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement12", 
                "interface": "Displacement", 
                "moonray_name": "displacement12", 
                "order": 14
            }, 
            "displacement13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement13", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement13", 
                "interface": "Displacement", 
                "moonray_name": "displacement13", 
                "order": 15
            }, 
            "displacement14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement14", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement14", 
                "interface": "Displacement", 
                "moonray_name": "displacement14", 
                "order": 16
            }, 
            "displacement15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement15", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement15", 
                "interface": "Displacement", 
                "moonray_name": "displacement15", 
                "order": 17
            }, 
            "displacement16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement16", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement16", 
                "interface": "Displacement", 
                "moonray_name": "displacement16", 
                "order": 18
            }, 
            "displacement17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement17", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement17", 
                "interface": "Displacement", 
                "moonray_name": "displacement17", 
                "order": 19
            }, 
            "displacement36": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement36", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement36", 
                "interface": "Displacement", 
                "moonray_name": "displacement36", 
                "order": 38
            }, 
            "displacement8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement8", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement8", 
                "interface": "Displacement", 
                "moonray_name": "displacement8", 
                "order": 10
            }, 
            "displacement9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement9", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement9", 
                "interface": "Displacement", 
                "moonray_name": "displacement9", 
                "order": 11
            }, 
            "displacement6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement6", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement6", 
                "interface": "Displacement", 
                "moonray_name": "displacement6", 
                "order": 8
            }, 
            "displacement7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement7", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement7", 
                "interface": "Displacement", 
                "moonray_name": "displacement7", 
                "order": 9
            }, 
            "displacement4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement4", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement4", 
                "interface": "Displacement", 
                "moonray_name": "displacement4", 
                "order": 6
            }, 
            "displacement5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement5", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement5", 
                "interface": "Displacement", 
                "moonray_name": "displacement5", 
                "order": 7
            }, 
            "displacement2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement2", 
                "interface": "Displacement", 
                "moonray_name": "displacement2", 
                "order": 4
            }, 
            "displacement3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement3", 
                "interface": "Displacement", 
                "moonray_name": "displacement3", 
                "order": 5
            }, 
            "displacement0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement0", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement0", 
                "interface": "Displacement", 
                "moonray_name": "displacement0", 
                "order": 2
            }, 
            "displacement1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "displacement1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Displacement1", 
                "interface": "Displacement", 
                "moonray_name": "displacement1", 
                "order": 3
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DirectionalMap": {
        "moonray_type": "Map", 
        "moonray_name": "DirectionalMap", 
        "folders_sorted": [
            "Normal", 
            "Adjustment"
        ], 
        "parms": {
            "polarity": {
                "default_value": [
                    0
                ], 
                "houdini_name": "polarity", 
                "help": "determines which directions are given color A and which are given color B. Switching this effectively swaps the colors", 
                "moonray_type": "Int", 
                "menu": [
                    "perpendicular", 
                    "parallel"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Polarity", 
                "moonray_name": "polarity", 
                "order": 1
            }, 
            "smoothstep_end": {
                "default_value": [
                    0.55
                ], 
                "houdini_name": "smoothstep_end", 
                "help": "the value at which the effect is considered 100% on", 
                "moonray_type": "Float", 
                "houdini_label": "Smoothstep End", 
                "bindable": true, 
                "moonray_name": "smoothstep_end", 
                "order": 14
            }, 
            "falloff_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "falloff_type", 
                "help": "determines how the effect falls off as the difference angle increases", 
                "moonray_type": "Int", 
                "menu": [
                    "cosine", 
                    "linear"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Falloff Type", 
                "moonray_name": "falloff_type", 
                "order": 15
            }, 
            "smoothstep_start": {
                "default_value": [
                    0.45
                ], 
                "houdini_name": "smoothstep_start", 
                "help": "the value at which the effect is considered 100% off", 
                "moonray_type": "Float", 
                "houdini_label": "Smoothstep Start", 
                "bindable": true, 
                "moonray_name": "smoothstep_start", 
                "order": 13
            }, 
            "object": {
                "default_value": [], 
                "houdini_name": "object", 
                "help": "the object to use when 'prime direction' is set to 'axis of object' or 'look-at object'", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Object", 
                "interface": "Node", 
                "moonray_name": "object", 
                "order": 4
            }, 
            "color_b": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color_b", 
                "help": "the color of the effect when the difference angle is smallest", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "color_b", 
                "order": 3
            }, 
            "color_a": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "color_a", 
                "help": "the color of the effect when the difference angle is greatest", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "color_a", 
                "order": 2
            }, 
            "custom_direction": {
                "default_value": [
                    0.0, 
                    1.0, 
                    0.0
                ], 
                "houdini_name": "custom_direction", 
                "help": "specifies a custom direction in world space as the prime direction", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Custom Direction", 
                "bindable": true, 
                "moonray_name": "custom_direction", 
                "order": 6
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 9
            }, 
            "bias": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "bias", 
                "help": "controls the rate at which the effect increases as the shading normal approaches the prime direction", 
                "moonray_type": "Float", 
                "houdini_label": "Bias", 
                "bindable": true, 
                "moonray_name": "bias", 
                "order": 11
            }, 
            "prime_direction": {
                "default_value": [
                    0
                ], 
                "houdini_name": "prime_direction", 
                "help": "which source is used for the prime direction", 
                "moonray_type": "Int", 
                "menu": [
                    "observer direction", 
                    "custom direction", 
                    "axis of object", 
                    "look-at object"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Prime Direction", 
                "moonray_name": "prime_direction", 
                "order": 0
            }, 
            "use_smoothstep": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_smoothstep", 
                "help": "apply smoothstep function to result", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Smoothstep", 
                "moonray_name": "use_smoothstep", 
                "order": 12
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal when bound. The binding multiplier is ignored", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 8
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space position and normals", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 7
            }, 
            "object_axis": {
                "default_value": [
                    1
                ], 
                "houdini_name": "object_axis", 
                "help": "which axis to use when 'prime direction' is set to 'axis of object'", 
                "moonray_type": "Int", 
                "menu": [
                    "+X axis", 
                    "-X axis", 
                    "+Y axis", 
                    "-Y axis", 
                    "+Z axis", 
                    "-Z axis"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Object Axis", 
                "moonray_name": "object_axis", 
                "order": 5
            }, 
            "clamping_behavior": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clamping_behavior", 
                "help": "determines how surfaces facing opposite the prime direction are handled", 
                "moonray_type": "Int", 
                "menu": [
                    "clamp", 
                    "absolute"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Clamping Behavior", 
                "moonray_name": "clamping_behavior", 
                "order": 10
            }
        }, 
        "folders_with_parms": {
            "Adjustment": [
                "clamping_behavior", 
                "bias", 
                "use_smoothstep", 
                "smoothstep_start", 
                "smoothstep_end", 
                "falloff_type"
            ], 
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ]
        }
    }, 
    "NormalToRgbMap": {
        "moonray_type": "Map", 
        "moonray_name": "NormalToRgbMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input", 
                "help": "Input normal map to convert to a color", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input", 
                "interface": "NormalMap", 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaAdjustMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaAdjustMaterial", 
        "folders_sorted": [
            "Enable", 
            "Override"
        ], 
        "parms": {
            "adjust_presence": {
                "default_value": [
                    true
                ], 
                "houdini_name": "adjust_presence", 
                "help": "use presence adjustment attrs: presence_set, presence_set_blend, presence_mult", 
                "moonray_type": "Bool", 
                "houdini_label": "Adjust Presence", 
                "moonray_name": "adjust_presence", 
                "order": 11
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Enable/disable all adjustments", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 4
            }, 
            "thin_geometry": {
                "default_value": [
                    0
                ], 
                "houdini_name": "thin_geometry", 
                "help": "allows you to keep or set thin geometry attribute", 
                "moonray_type": "Int", 
                "menu": [
                    "unmodified", 
                    "force on", 
                    "force off"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 13
            }, 
            "adjust_roughness": {
                "default_value": [
                    true
                ], 
                "houdini_name": "adjust_roughness", 
                "help": "use roughness adjustment attrs: roughness_set, roughness_set_blend, roughness_mult, roughness_remap_{in/out}_{min/max}", 
                "moonray_type": "Bool", 
                "houdini_label": "Adjust Roughness", 
                "moonray_name": "adjust_roughness", 
                "order": 9
            }, 
            "casts_caustics": {
                "default_value": [
                    0
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows you to keep or set casts caustics attribute", 
                "moonray_type": "Int", 
                "menu": [
                    "unmodified", 
                    "force on", 
                    "force off"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 12
            }, 
            "adjust_color": {
                "default_value": [
                    true
                ], 
                "houdini_name": "adjust_color", 
                "help": "use color adjustment attrs: color_hue_shift, color_saturation, color_gain", 
                "moonray_type": "Bool", 
                "houdini_label": "Adjust Color", 
                "moonray_name": "adjust_color", 
                "order": 10
            }, 
            "emission_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "emission_mode", 
                "help": "how to handle emission input. masked uses mix input, unmasked is mix = 1", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "masked", 
                    "unmasked"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Emission Mode", 
                "moonray_name": "emission_mode", 
                "order": 6
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "emissive map to add to material's emission", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 7
            }, 
            "disable_clearcoat": {
                "default_value": [
                    false
                ], 
                "houdini_name": "disable_clearcoat", 
                "help": "when checked, turn off clearcoat from input", 
                "moonray_type": "Bool", 
                "houdini_label": "Disable Clearcoat", 
                "moonray_name": "disable_clearcoat", 
                "order": 15
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "weight of adjustments applied to the material", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 5
            }, 
            "adjust_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "adjust_specular", 
                "help": "use specular adjustment attrs: specular_set, specular_set_blend, specular_mult", 
                "moonray_type": "Bool", 
                "houdini_label": "Adjust Specular", 
                "moonray_name": "adjust_specular", 
                "order": 8
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "disable_specular": {
                "default_value": [
                    false
                ], 
                "houdini_name": "disable_specular", 
                "help": "when checked, turn off all specular from input", 
                "moonray_type": "Bool", 
                "houdini_label": "Disable Specular", 
                "moonray_name": "disable_specular", 
                "order": 16
            }, 
            "disable_diffuse": {
                "default_value": [
                    false
                ], 
                "houdini_name": "disable_diffuse", 
                "help": "when checked, turn off all diffuse from input", 
                "moonray_type": "Bool", 
                "houdini_label": "Disable Diffuse", 
                "moonray_name": "disable_diffuse", 
                "order": 14
            }, 
            "input_material": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_material", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Material", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "input_material", 
                "order": 3
            }
        }, 
        "folders_with_parms": {
            "Override": [
                "casts_caustics", 
                "thin_geometry", 
                "disable_diffuse", 
                "disable_clearcoat", 
                "disable_specular"
            ], 
            "Enable": [
                "adjust_specular", 
                "adjust_roughness", 
                "adjust_color", 
                "adjust_presence"
            ]
        }
    }, 
    "DebugMap": {
        "moonray_type": "Map", 
        "moonray_name": "DebugMap", 
        "folders_sorted": [
            "Normal", 
            "Primitive Attribute"
        ], 
        "parms": {
            "input_normal_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "input_normal_space", 
                "help": "Specifies what space the input normal is in.  Usually this is tangent space for texture maps and render space for projections", 
                "moonray_type": "Int", 
                "menu": [
                    "tangent", 
                    "render"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Input Normal Space", 
                "moonray_name": "input_normal_space", 
                "order": 3, 
                "aliases": [
                    "input normal space"
                ]
            }, 
            "primitive_attribute_name": {
                "default_value": [
                    "surface_st"
                ], 
                "houdini_name": "primitive_attribute_name", 
                "help": "the name of primitive attribute to displayed when attribute 'map type' is set to 'primitive attribute'", 
                "moonray_type": "String", 
                "houdini_label": "Name", 
                "moonray_name": "primitive_attribute_name", 
                "order": 5, 
                "aliases": [
                    "primitive attribute name"
                ]
            }, 
            "primitive_attribute_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "primitive_attribute_type", 
                "help": "the type of primitive attribute to displayed when attribute 'map type' is set to 'primitive attribute'", 
                "moonray_type": "Int", 
                "menu": [
                    "float", 
                    "vec2f", 
                    "vec3f", 
                    "rgb"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Type", 
                "moonray_name": "primitive_attribute_type", 
                "order": 6, 
                "aliases": [
                    "primitive attribute type"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "moonray_name": "input_normal_dial", 
                "order": 4, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "checkerboard": {
                "default_value": [
                    true
                ], 
                "houdini_name": "checkerboard", 
                "moonray_type": "Bool", 
                "houdini_label": "Checkerboard", 
                "moonray_name": "checkerboard", 
                "order": 0
            }, 
            "input_normal": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "input_normal", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Input Normal", 
                "bindable": true, 
                "moonray_name": "input_normal", 
                "order": 2, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "map_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "map_type", 
                "moonray_type": "Int", 
                "menu": [
                    "position", 
                    "texture st", 
                    "shading normal", 
                    "geometric normal", 
                    "dpds", 
                    "dpdt", 
                    "primitive attribute"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6"
                ], 
                "houdini_label": "Map Type", 
                "moonray_name": "map_type", 
                "order": 1, 
                "aliases": [
                    "map type"
                ]
            }
        }, 
        "folders_with_parms": {
            "Primitive Attribute": [
                "primitive_attribute_name", 
                "primitive_attribute_type"
            ], 
            "Normal": [
                "input_normal_space"
            ]
        }
    }, 
    "HsvToRgbMap": {
        "moonray_type": "Map", 
        "moonray_name": "HsvToRgbMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "OpMap": {
        "moonray_type": "Map", 
        "moonray_name": "OpMap", 
        "folders_sorted": [], 
        "parms": {
            "clamp": {
                "default_value": [
                    false
                ], 
                "houdini_name": "clamp", 
                "help": "if on, the result is clamped to 0 - 1", 
                "moonray_type": "Bool", 
                "houdini_label": "Clamp", 
                "moonray_name": "clamp", 
                "order": 5
            }, 
            "op1_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "op1_factor", 
                "help": "a scalar multiplier on op1", 
                "moonray_type": "Float", 
                "houdini_label": "Op1 Factor", 
                "bindable": true, 
                "moonray_name": "op1_factor", 
                "order": 3, 
                "aliases": [
                    "op1 factor"
                ]
            }, 
            "op1": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "op1", 
                "help": "the first operand", 
                "moonray_type": "Rgb", 
                "houdini_label": "Op1", 
                "bindable": true, 
                "moonray_name": "op1", 
                "order": 1
            }, 
            "op2": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "op2", 
                "help": "the second operand", 
                "moonray_type": "Rgb", 
                "houdini_label": "Op2", 
                "bindable": true, 
                "moonray_name": "op2", 
                "order": 2
            }, 
            "op2_factor": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "op2_factor", 
                "help": "a scalar multiplier on op2", 
                "moonray_type": "Float", 
                "houdini_label": "Op2 Factor", 
                "bindable": true, 
                "moonray_name": "op2_factor", 
                "order": 4, 
                "aliases": [
                    "op2 factor"
                ]
            }, 
            "operation": {
                "default_value": [
                    0
                ], 
                "houdini_name": "operation", 
                "moonray_type": "Int", 
                "menu": [
                    "add", 
                    "subtract", 
                    "multiply", 
                    "divide", 
                    "maximum", 
                    "minimum", 
                    "power", 
                    "cross", 
                    "dot", 
                    "invert op1", 
                    "normalize op1", 
                    "op1", 
                    "op2", 
                    "overlay", 
                    "screen", 
                    "abs", 
                    "ceil", 
                    "floor", 
                    "modulo", 
                    "fraction", 
                    "length", 
                    "sine", 
                    "cosine", 
                    "round", 
                    "acos", 
                    "less_than", 
                    "less_than_or_equal", 
                    "greater_than", 
                    "greater_than_or_equal", 
                    "equal", 
                    "not equal", 
                    "and", 
                    "or", 
                    "not", 
                    "xor", 
                    "bit_shift_left", 
                    "bit_shift_right", 
                    "bitwise_and", 
                    "bitwise_or"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12", 
                    "13", 
                    "14", 
                    "15", 
                    "16", 
                    "17", 
                    "18", 
                    "19", 
                    "20", 
                    "21", 
                    "22", 
                    "23", 
                    "24", 
                    "25", 
                    "26", 
                    "27", 
                    "28", 
                    "29", 
                    "30", 
                    "31", 
                    "32", 
                    "33", 
                    "34", 
                    "35", 
                    "36", 
                    "37", 
                    "38"
                ], 
                "houdini_label": "Operation", 
                "moonray_name": "operation", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RandomNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "RandomNormalMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "the input color used as a base seed to generate the random value", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "seed", 
                "help": "additional seed added to input for random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "seed", 
                "order": 1
            }
        }, 
        "folders_with_parms": {}
    }, 
    "SpotLight": {
        "moonray_type": "Light", 
        "moonray_name": "SpotLight", 
        "folders_sorted": [
            "Properties", 
            "Map", 
            "Visibility Flags", 
            "Cone", 
            "Falloff"
        ], 
        "parms": {
            "clear_radius_interpolation_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "clear_radius_interpolation_type", 
                "help": "Interpolation type to use for the clear radius shadow falloff.", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "exponential_up", 
                    "exponential_down", 
                    "smoothstep"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Clear Radius Interpolation Type", 
                "moonray_name": "clear_radius_interpolation_type", 
                "order": 45
            }, 
            "texture_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "texture_filter", 
                "help": "The filtering mode to apply to the texture. Nearest neighbor is the cheapest filtering mode but produces a blocky result. Switch linear filtering on for a smoother result. Additionally, mip-mapping can be switched on with either nearest neighbor or linear filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "nearest neighbor", 
                    "bilinear", 
                    "nearest neighbor with nearest mip", 
                    "bilinear with nearest mip"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Texture Filter", 
                "moonray_name": "texture_filter", 
                "order": 10, 
                "aliases": [
                    "texture filter"
                ]
            }, 
            "presence_shadows": {
                "default_value": [
                    2
                ], 
                "houdini_name": "presence_shadows", 
                "help": "Switch this attribute on for shadows cast from this light to correctly respect presence values. When off, surfaces with a material with presence less than 1.0 will cast opaque shadows from this light. This is an optimization - when the attribute is off, occlusion rays (fast) are used for testing for shadows. When it is on, regular rays (slower) are used, and the material's presence is evaluated to determine how much shadowing should occur. When set to \"use default\" it reads from the value of SceneVariable enable_presence_shadows.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Presence Shadows", 
                "moonray_name": "presence_shadows", 
                "order": 8, 
                "aliases": [
                    "presence shadows"
                ]
            }, 
            "max_shadow_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_shadow_distance", 
                "help": "The distance from the light beyond which a light-receiving surface will no longer receive shadows cast from that light.\nNote that the distance is thresholded for each occlusion ray cast for this light, it is possible for a receiving point to lie at an intermediate distance such that some parts of the light are closer than the threshold distance and other parts beyond it, in which case the point will appearto be in partial shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Max Shadow Distance", 
                "moonray_name": "max_shadow_distance", 
                "order": 7
            }, 
            "color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "color", 
                "help": "The light's RGB values.\nThese are combined multiplicatively with the intensity and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 4
            }, 
            "inner_cone_angle": {
                "default_value": [
                    30.0
                ], 
                "houdini_name": "inner_cone_angle", 
                "help": "The apex angle of the bright inner cone of the light emitted by the SpotLight. Full illumination takes place inside this region. This is a full angle, measured from one side to the other. There is a falloff function applied between the outer and inner cones - see the angle_falloff_type attribute.", 
                "moonray_type": "Float", 
                "houdini_label": "Inner Cone Angle", 
                "moonray_name": "inner_cone_angle", 
                "order": 40, 
                "aliases": [
                    "inner cone angle"
                ]
            }, 
            "intensity": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "intensity", 
                "help": "The light's intensity.\nThis is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Intensity", 
                "moonray_name": "intensity", 
                "order": 5
            }, 
            "black_level": {
                "default_value": [
                    0.001
                ], 
                "houdini_name": "black_level", 
                "help": "The radiance used for rendering the SpotLight lens as seen through the camera via a primary ray, when the true computed radiance would otherwise be black. This is simply a convenience feature to make the SpotLight lens visible in the camera view.", 
                "moonray_type": "Float", 
                "houdini_label": "Black Level", 
                "moonray_name": "black_level", 
                "order": 42, 
                "aliases": [
                    "black level"
                ]
            }, 
            "focal_plane_distance": {
                "default_value": [
                    10000000000.0
                ], 
                "houdini_name": "focal_plane_distance", 
                "help": "The distance from the SpotLight's position, measured in the direction the light is pointing, at which the projected image will be in focus.", 
                "moonray_type": "Float", 
                "houdini_label": "Focal Plane Distance", 
                "moonray_name": "focal_plane_distance", 
                "order": 38, 
                "aliases": [
                    "focal plane distance"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    2
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "Whether the light is directly visible in the scene's active camera. When set to \"use default\" it reads from the value of SceneVariable lights_visible_in_camera.", 
                "moonray_type": "Int", 
                "menu": [
                    "force off", 
                    "force on", 
                    "use default"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 3, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "outer_cone_angle": {
                "default_value": [
                    60.0
                ], 
                "houdini_name": "outer_cone_angle", 
                "help": "The apex angle of the bounding cone of the light emitted by the SpotLight. No illumination takes placeoutside this angle. This is a full angle, measured from one side to the other. There is a falloff function applied between the outer and inner cones - see the angle_falloff_type attribute.", 
                "moonray_type": "Float", 
                "houdini_label": "Outer Cone Angle", 
                "moonray_name": "outer_cone_angle", 
                "order": 39, 
                "aliases": [
                    "outer cone angle"
                ]
            }, 
            "angle_falloff_type": {
                "default_value": [
                    4
                ], 
                "houdini_name": "angle_falloff_type", 
                "help": "The falloff function applied between the outer and inner cones. To calculate this, the angle from the cone's axis to the the point being illuminated is measured as seen from the SpotLight's position. This angle is converted into a fractional value representing the fraction from the outer cone angle to the inner cone angle, clamped to the range [0,1]. The resulting value is then fed into one of the following user-selectable functions to determine the final 0-1 scaling value to be applied to thelight's radiance: \n  0 (off)         - no fallof, a step function at the outer cone boundary is applied\n  1 (linear)      - a linear ramp, i.e. the fractional parameter is applied as-is\n  2 (ease in)     - a quadratic ramp with zero gradient at the start point (outer cone)\n  3 (ease out)    - a quadratic ramp with zero gradient at the end point (inner cone)\n  4 (ease in/out) - a cubic ramp with zero gradient at both ends (outer and inner cone)\n", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "linear", 
                    "ease in", 
                    "ease out", 
                    "ease in/out"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Angle Falloff Type", 
                "moonray_name": "angle_falloff_type", 
                "order": 41, 
                "aliases": [
                    "angle falloff type"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "Whether the light is visible in diffuse transmission.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 29, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "temperature": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "temperature", 
                "help": "Color temperature using Nuke-style T/M/I settings (T = temperature, M = magenta/green, I = intensity). This is achieved as follows:\nThe 3-channel temperature is interpreted as the vector (T,M,I). The followiong scale values are then applied to the RGB components:\n  outputR = inputR * (pow(2,I) + M/3 - T/2)\n  outputG = inputG * (pow(2,I) - 2*M/3\n  outputB = inputB * (pow(2,I) + M/3 + T/2)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Temperature", 
                "moonray_name": "temperature", 
                "order": 17
            }, 
            "texture_border_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_border_color", 
                "help": "RGB value used when a texture lookup occurs outside the texture.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Texture Border Color", 
                "moonray_name": "texture_border_color", 
                "order": 25
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "File name of the texture applied to the light. If set to the empty string, no texture is applied. Any file format supported by OpenImageIO can be used. The texture is used in 2 ways - for looking up the texture value at the intersection point when a ray hits the light, and for building a lookup-table-based auxilliary data structure used for distributing light samples over the texture.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 11
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "Label used in light aov expressions.", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 27
            }, 
            "clear_radius_falloff_distance": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius_falloff_distance", 
                "help": "Distance over which the shadows fall off. Shadows are fully visible at a distance clear_radius + clear_radius_falloff_distance from the light, and fully invisble at a distance clear_radius from the light.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius Falloff Distance", 
                "moonray_name": "clear_radius_falloff_distance", 
                "order": 44
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "Whether the light is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 33, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "Whether the light is visible in diffuse reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 28, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "contrast": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "contrast", 
                "help": "Per-channel contrast used in color-correcting the light's texture, if one is present. The operation mimics Nuke's ColorCorrect node's contrast function:\n  For input >  0, output = 0.18 * pow(inputCompnent/0.18, contrast).\n  For input <= 0, output = 0.18 * input * pow(1/0.18, contrast).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Contrast", 
                "moonray_name": "contrast", 
                "order": 13
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "Whether the light is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 32, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "saturation": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "saturation", 
                "help": "Per-channel saturation used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = lerp(luminance(inputRGB), input, saturation).", 
                "moonray_type": "Rgb", 
                "houdini_label": "Saturation", 
                "moonray_name": "saturation", 
                "order": 12
            }, 
            "normalized": {
                "default_value": [
                    true
                ], 
                "houdini_name": "normalized", 
                "help": "When set to true, the size of the light can be changed without altering the amount of total energy cast into the scene. This is achieved via scaling the light's radiance by the reciprocal of its surface area. When set to false, the radiance is used as-is, regardless of surface area.", 
                "moonray_type": "Bool", 
                "houdini_label": "Normalized", 
                "moonray_name": "normalized", 
                "order": 34
            }, 
            "lens_radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "lens_radius", 
                "help": "The radius of the SpotLight's lens (when the aspect ratio is 1.0, so that the lens is circular).", 
                "moonray_type": "Float", 
                "houdini_label": "Lens Radius", 
                "moonray_name": "lens_radius", 
                "order": 36, 
                "aliases": [
                    "lens radius"
                ]
            }, 
            "texture_coverage": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "texture_coverage", 
                "help": "Texture scales in the u and v-directions.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Coverage", 
                "moonray_name": "texture_coverage", 
                "order": 20
            }, 
            "light_filters": {
                "default_value": [], 
                "houdini_name": "light_filters", 
                "help": "Vector of LightFilters associated with the light.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "Light Filters", 
                "moonray_name": "light_filters", 
                "order": 26, 
                "aliases": [
                    "light filters"
                ]
            }, 
            "texture_rotation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_rotation", 
                "help": "Clockwise rotation angle in degrees.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Rotation", 
                "moonray_name": "texture_rotation", 
                "order": 18
            }, 
            "texture_reps_v": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_v", 
                "help": "Number of times texture repeats in v over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps V", 
                "moonray_name": "texture_reps_v", 
                "order": 22
            }, 
            "texture_reps_u": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "texture_reps_u", 
                "help": "Number of times texture repeats in u over the scaled texture space.", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Reps U", 
                "moonray_name": "texture_reps_u", 
                "order": 21
            }, 
            "texture_translation": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "texture_translation", 
                "help": "Translation of the texture in (u,v)-space, in units of the texture size. For example, a translation of (0.25, 0.5) will translate the texture one-quarter of its width in the u-direction and one-half of its height in the v-direction.", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Texture Translation", 
                "moonray_name": "texture_translation", 
                "order": 19
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "Per-channel offset used in tandem with a per-channel gain for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 16
            }, 
            "exposure": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "exposure", 
                "help": "The light's exposure value.\nThis value provides an alternative to the intensity value as a mechanism for controlling the light's overall brightness, and is inspired by the corresponding photographic term but is generalised to apply independently to each light. To calculate its effect, pow(2, exposure) is combined multiplicatively with the color and other attributes in determining the light's 3-channel radiance.", 
                "moonray_type": "Float", 
                "houdini_label": "Exposure", 
                "moonray_name": "exposure", 
                "order": 6
            }, 
            "clear_radius": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "clear_radius", 
                "help": "Shadows less than this distance from the light are ignored. Setting this value to 0.0 or less effectively disables this feature.", 
                "moonray_type": "Float", 
                "houdini_label": "Clear Radius", 
                "moonray_name": "clear_radius", 
                "order": 43
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "Whether the light is switched on.", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "texture_mirror_u": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_u", 
                "help": "Whether to mirror the texture in the u-direction. If set to false, the texture is repeated in the u-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror U", 
                "moonray_name": "texture_mirror_u", 
                "order": 23
            }, 
            "texture_mirror_v": {
                "default_value": [
                    false
                ], 
                "houdini_name": "texture_mirror_v", 
                "help": "Whether to mirror the texture in the v-direction. If set to false, the texture is repeated in the v-direction.", 
                "moonray_type": "Bool", 
                "houdini_label": "Texture Mirror V", 
                "moonray_name": "texture_mirror_v", 
                "order": 24
            }, 
            "mb": {
                "default_value": [
                    false
                ], 
                "houdini_name": "mb", 
                "help": "Whether motion-blur is active for this light. When set to true, the scene's illumination will correctly account for any blur() applied to the light's transformation matrix.", 
                "moonray_type": "Bool", 
                "houdini_label": "Mb", 
                "moonray_name": "mb", 
                "order": 2
            }, 
            "aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "aspect_ratio", 
                "help": "The aspect ratio of the lens - its local y dimension divided by its local x dimension. Values other than 1.0 will give the lens a non-circular elliptical shape.", 
                "moonray_type": "Float", 
                "houdini_label": "Aspect Ratio", 
                "moonray_name": "aspect_ratio", 
                "order": 37, 
                "aliases": [
                    "aspect ratio"
                ]
            }, 
            "apply_scene_scale": {
                "default_value": [
                    true
                ], 
                "houdini_name": "apply_scene_scale", 
                "help": "Whether to apply scene scale variable when normalized.", 
                "moonray_type": "Bool", 
                "houdini_label": "Apply Scene Scale", 
                "moonray_name": "apply_scene_scale", 
                "order": 35
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "Whether the light is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 31, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "Whether the light is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 30, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "ray_termination": {
                "default_value": [
                    false
                ], 
                "houdini_name": "ray_termination", 
                "help": "Whether the light is used for ray termination color. Ray termination color is used for filling in falsely dark areas where ray paths have been terminated too early by the depth controls. Such a ray path immediately exits to any ray termination light(s) present in the light set being applied to the lobe, ignoring occlusion by scene geometry. Any light can either be a regular light or a ray termination light (but not both). Thus they can be freely assigned to light sets, which provides a mechanism for applying specific ray termination lights to specific materials, parts or objects. Ray termination color is only applied to non-hair transmission lobes.", 
                "moonray_type": "Bool", 
                "houdini_label": "Ray Termination", 
                "moonray_name": "ray_termination", 
                "order": 9
            }, 
            "gamma": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "Per-channel gamma used in color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  For input >  0, output = pow(input, gamma)\n  For input <= 0, output = input", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gamma", 
                "moonray_name": "gamma", 
                "order": 14
            }, 
            "gain": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "Per-channel gain used in tandem with a per-channel offset for color-correcting the light's texture, if one is present. This is achieved by applying the following formula for each channel:\n  output = input * gain + offset", 
                "moonray_type": "Rgb", 
                "houdini_label": "Gain", 
                "moonray_name": "gain", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Properties": [
                "mb", 
                "on", 
                "visible_in_camera", 
                "color", 
                "intensity", 
                "exposure", 
                "max_shadow_distance", 
                "presence_shadows", 
                "ray_termination", 
                "texture_filter", 
                "label", 
                "normalized", 
                "apply_scene_scale", 
                "clear_radius", 
                "clear_radius_falloff_distance", 
                "clear_radius_interpolation_type"
            ], 
            "Map": [
                "texture", 
                "saturation", 
                "contrast", 
                "gamma", 
                "gain", 
                "offset", 
                "temperature", 
                "texture_rotation", 
                "texture_translation", 
                "texture_coverage", 
                "texture_reps_u", 
                "texture_reps_v", 
                "texture_mirror_u", 
                "texture_mirror_v", 
                "texture_border_color"
            ], 
            "Visibility Flags": [
                "visible_diffuse_reflection", 
                "visible_diffuse_transmission", 
                "visible_glossy_reflection", 
                "visible_glossy_transmission", 
                "visible_mirror_reflection", 
                "visible_mirror_transmission"
            ], 
            "Cone": [
                "lens_radius", 
                "aspect_ratio", 
                "focal_plane_distance", 
                "outer_cone_angle", 
                "inner_cone_angle"
            ], 
            "Falloff": [
                "angle_falloff_type", 
                "black_level"
            ]
        }
    }, 
    "CombineNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "CombineNormalMap", 
        "folders_sorted": [
            "Normal"
        ], 
        "parms": {
            "normal_map_2_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_map_2_dial", 
                "help": "Amount of normal map 2 to blend in", 
                "moonray_type": "Float", 
                "houdini_label": "Map 2 Dial", 
                "bindable": true, 
                "moonray_name": "normal_map_2_dial", 
                "order": 3
            }, 
            "input_2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_2", 
                "help": "Second normal map to combine; usually a base map", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input 2", 
                "interface": "NormalMap", 
                "moonray_name": "input_2", 
                "order": 2
            }, 
            "normal_map_1_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "normal_map_1_dial", 
                "help": "Amount of normal map 1 to blend in", 
                "moonray_type": "Float", 
                "houdini_label": "Map 1 Dial", 
                "bindable": true, 
                "moonray_name": "normal_map_1_dial", 
                "order": 1
            }, 
            "input_1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_1", 
                "help": "First normal map to combine; usually a base map", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input 1", 
                "interface": "NormalMap", 
                "moonray_name": "input_1", 
                "order": 0
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_1", 
                "normal_map_1_dial", 
                "input_2", 
                "normal_map_2_dial"
            ]
        }
    }, 
    "SphereGeometry": {
        "moonray_type": "Geometry", 
        "moonray_name": "SphereGeometry", 
        "folders_sorted": [
            "Quadric"
        ], 
        "parms": {
            "zmax": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "zmax", 
                "moonray_type": "Float", 
                "houdini_label": "Zmax", 
                "moonray_name": "zmax", 
                "order": 23
            }, 
            "zmin": {
                "default_value": [
                    -1.0
                ], 
                "houdini_name": "zmin", 
                "moonray_type": "Float", 
                "houdini_label": "Zmin", 
                "moonray_name": "zmin", 
                "order": 22
            }, 
            "shadow_receiver_label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_receiver_label", 
                "help": "Label used to associate Geometry objects into sets. Then, using the [\"shadow_exclusion_mappings\"] attribute, shadows from specified geometry parts can be suppressed from casting onto specified sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Receiver Label", 
                "moonray_name": "shadow_receiver_label", 
                "order": 17, 
                "aliases": [
                    "shadow receiver label"
                ]
            }, 
            "ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "ray_epsilon", 
                "help": "When a secondary ray is fired, anything within this distance of the intersection point will be ignored.  Instead, it is considered part of the current intersection's geometry.  If zero, an automatically calculated epsilon will be used.", 
                "moonray_type": "Float", 
                "houdini_label": "Ray Epsilon", 
                "moonray_name": "ray_epsilon", 
                "order": 15, 
                "aliases": [
                    "ray epsilon"
                ]
            }, 
            "visible_glossy_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_transmission", 
                "help": "whether the geometry is visible in glossy transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Transmission", 
                "moonray_name": "visible_glossy_transmission", 
                "order": 11, 
                "aliases": [
                    "visible glossy transmission"
                ]
            }, 
            "radius": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "radius", 
                "moonray_type": "Float", 
                "houdini_label": "Radius", 
                "moonray_name": "radius", 
                "order": 21
            }, 
            "visible_volume": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_volume", 
                "help": "whether the geometry is visible in indirect volume rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Volume", 
                "moonray_name": "visible_volume", 
                "order": 14, 
                "aliases": [
                    "visible volume"
                ]
            }, 
            "visible_in_camera": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_in_camera", 
                "help": "whether the geometry is visible to camera rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible In Camera", 
                "moonray_name": "visible_in_camera", 
                "order": 6, 
                "aliases": [
                    "visible in camera"
                ]
            }, 
            "visible_diffuse_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_transmission", 
                "help": "whether the geometry is visible in diffuse transmission", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Transmission", 
                "moonray_name": "visible_diffuse_transmission", 
                "order": 9, 
                "aliases": [
                    "visible diffuse transmission"
                ]
            }, 
            "phi_max": {
                "default_value": [
                    360.0
                ], 
                "houdini_name": "phi_max", 
                "moonray_type": "Float", 
                "houdini_label": "Phi Max", 
                "moonray_name": "phi_max", 
                "order": 24, 
                "aliases": [
                    "phi max"
                ]
            }, 
            "visible_shadow": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_shadow", 
                "help": "whether the geometry casts shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Shadow", 
                "moonray_name": "visible_shadow", 
                "order": 7, 
                "aliases": [
                    "visible shadow"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material aov expresssions", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "static": {
                "default_value": [
                    true
                ], 
                "houdini_name": "static", 
                "help": "disable if the geometry will be updated between frames", 
                "moonray_type": "Bool", 
                "houdini_label": "Static", 
                "moonray_name": "static", 
                "order": 3
            }, 
            "side_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "side_type", 
                "help": "set single sidedness of the mesh, will affect the visibility of the mesh based on normal direction", 
                "moonray_type": "Int", 
                "menu": [
                    "force two-sided", 
                    "force single-sided", 
                    "use mesh sidedness"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Side Type", 
                "moonray_name": "side_type", 
                "order": 4, 
                "aliases": [
                    "side type"
                ]
            }, 
            "visible_mirror_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_transmission", 
                "help": "whether the geometry is visible in miror transmission (refraction).", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Transmission", 
                "moonray_name": "visible_mirror_transmission", 
                "order": 13, 
                "aliases": [
                    "visible mirror transmission"
                ]
            }, 
            "visible_diffuse_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_diffuse_reflection", 
                "help": "whether the geometry is visible in diffuse reflection", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Diffuse Reflection", 
                "moonray_name": "visible_diffuse_reflection", 
                "order": 8, 
                "aliases": [
                    "visible diffuse reflection"
                ]
            }, 
            "shadow_ray_epsilon": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "shadow_ray_epsilon", 
                "help": "When a shadow ray is fired, anything within this distance of the intersection point will be ignored.  If this value is less than \"ray_epsilon\", then it has no additional effect.", 
                "moonray_type": "Float", 
                "houdini_label": "Shadow Ray Epsilon", 
                "moonray_name": "shadow_ray_epsilon", 
                "order": 16
            }, 
            "visible_mirror_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_mirror_reflection", 
                "help": "whether the geometry is visible in miror reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Mirror Reflection", 
                "moonray_name": "visible_mirror_reflection", 
                "order": 12, 
                "aliases": [
                    "visible mirror reflection"
                ]
            }, 
            "reverse_normals": {
                "default_value": [
                    false
                ], 
                "houdini_name": "reverse_normals", 
                "help": "enable to reverse the normals in the geometry", 
                "moonray_type": "Bool", 
                "houdini_label": "Reverse Normals", 
                "moonray_name": "reverse_normals", 
                "order": 5, 
                "aliases": [
                    "reverse normals"
                ]
            }, 
            "references": {
                "default_value": [], 
                "houdini_name": "references", 
                "help": "list of geometries that geometry procedural can reference during procedural generate/update stages. For example, an instancer geometry procedural can instance primitives generated by the reference geometry procedural.", 
                "moonray_type": "SceneObjectVector", 
                "houdini_label": "References", 
                "interface": "Geometry", 
                "moonray_name": "references", 
                "order": 2
            }, 
            "shadow_exclusion_mappings": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "shadow_exclusion_mappings", 
                "help": "List of mappings of the form A:B where:\nA is a list of names of parts to be mapped, or asterisk to map the whole geometry\nB is a list of labels corresponding to the sets corresponding to distinct values of [\"shadow_receiver_label\"], or asterisk to map to all such sets.", 
                "moonray_type": "String", 
                "houdini_label": "Shadow Exclusion Mappings", 
                "moonray_name": "shadow_exclusion_mappings", 
                "order": 18, 
                "aliases": [
                    "shadow exclusion mappings"
                ]
            }, 
            "visible_glossy_reflection": {
                "default_value": [
                    true
                ], 
                "houdini_name": "visible_glossy_reflection", 
                "help": "whether the geometry is visible in glossy reflection.", 
                "moonray_type": "Bool", 
                "houdini_label": "Visible Glossy Reflection", 
                "moonray_name": "visible_glossy_reflection", 
                "order": 10, 
                "aliases": [
                    "visible glossy reflection"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "moonray_name": "dicing_camera", 
                "order": 20
            }, 
            "contains_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "contains_camera", 
                "help": "Specifies whether the geometry contains the camera and should be used for IOR tracking. This should not be changed by the user -- they should instead attach the relevant geometry to the camera, which will then flag this geometry.", 
                "moonray_type": "Bool", 
                "houdini_label": "Contains Camera", 
                "moonray_name": "contains_camera", 
                "order": 19
            }
        }, 
        "folders_with_parms": {
            "Quadric": [
                "radius", 
                "zmin", 
                "zmax", 
                "phi_max"
            ]
        }
    }, 
    "RgbToNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "RgbToNormalMap", 
        "folders_sorted": [], 
        "parms": {
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "Input color to convert to a normal map", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ColorCorrectGammaMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectGammaMap", 
        "folders_sorted": [], 
        "parms": {
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "gamma_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_g", 
                "help": "raises the green channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma G", 
                "bindable": true, 
                "moonray_name": "gamma_g", 
                "order": 6
            }, 
            "gamma_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_b", 
                "help": "raises the blue channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma B", 
                "bindable": true, 
                "moonray_name": "gamma_b", 
                "order": 7
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "gamma": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma", 
                "help": "raises the input to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma", 
                "bindable": true, 
                "moonray_name": "gamma", 
                "order": 3
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "use_per_channel_gamma": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_gamma", 
                "help": "enables separate RGB controls for gamma", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Gamma", 
                "moonray_name": "use_per_channel_gamma", 
                "order": 4
            }, 
            "gamma_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gamma_r", 
                "help": "raises the red channel to the specified exponents", 
                "moonray_type": "Float", 
                "houdini_label": "Gamma R", 
                "bindable": true, 
                "moonray_name": "gamma_r", 
                "order": 5
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RgbToLabMap": {
        "moonray_type": "Map", 
        "moonray_name": "RgbToLabMap", 
        "folders_sorted": [], 
        "parms": {
            "input_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input Color", 
                "bindable": true, 
                "moonray_name": "input_color", 
                "order": 0, 
                "aliases": [
                    "input color"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "ColorCorrectGainOffsetMap": {
        "moonray_type": "Map", 
        "moonray_name": "ColorCorrectGainOffsetMap", 
        "folders_sorted": [], 
        "parms": {
            "gain_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_b", 
                "help": "multiplies the blue channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain B", 
                "bindable": true, 
                "moonray_name": "gain_b", 
                "order": 8
            }, 
            "on": {
                "default_value": [
                    true
                ], 
                "houdini_name": "on", 
                "help": "enables/disables all color correct operations", 
                "moonray_type": "Bool", 
                "houdini_label": "On", 
                "moonray_name": "on", 
                "order": 1
            }, 
            "gain_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_g", 
                "help": "multiplies the green channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain G", 
                "bindable": true, 
                "moonray_name": "gain_g", 
                "order": 7
            }, 
            "offset_b": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_b", 
                "help": "adds the specified values to the blue channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset B", 
                "bindable": true, 
                "moonray_name": "offset_b", 
                "order": 11
            }, 
            "offset_g": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_g", 
                "help": "adds the specified values to the green channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset G", 
                "bindable": true, 
                "moonray_name": "offset_g", 
                "order": 10
            }, 
            "use_per_channel_gain_offset": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_per_channel_gain_offset", 
                "help": "enables separate RGB controls for gain and offset", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Per Channel Gain Offset", 
                "moonray_name": "use_per_channel_gain_offset", 
                "order": 5
            }, 
            "gain_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain_r", 
                "help": "multiplies the red channel by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain R", 
                "bindable": true, 
                "moonray_name": "gain_r", 
                "order": 6
            }, 
            "mix": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "mix", 
                "help": "how much of the overall color correct to mix in", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 2
            }, 
            "gain": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "gain", 
                "help": "multiplies the input channels by the specified values", 
                "moonray_type": "Float", 
                "houdini_label": "Gain", 
                "bindable": true, 
                "moonray_name": "gain", 
                "order": 3
            }, 
            "offset": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "offset", 
                "help": "adds the specified values to the input", 
                "moonray_type": "Float", 
                "houdini_label": "Offset", 
                "bindable": true, 
                "moonray_name": "offset", 
                "order": 4
            }, 
            "input": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "input", 
                "help": "bind the input here", 
                "moonray_type": "Rgb", 
                "houdini_label": "Input", 
                "bindable": true, 
                "moonray_name": "input", 
                "order": 0
            }, 
            "offset_r": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "offset_r", 
                "help": "adds the specified values to the red channel", 
                "moonray_type": "Float", 
                "houdini_label": "Offset R", 
                "bindable": true, 
                "moonray_name": "offset_r", 
                "order": 9
            }
        }, 
        "folders_with_parms": {}
    }, 
    "DwaMixMaterial": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaMixMaterial", 
        "folders_sorted": [
            "Advanced", 
            "Glitter Fallback"
        ], 
        "parms": {
            "material58": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material58", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material58", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material58", 
                "order": 61
            }, 
            "material59": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material59", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material59", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material59", 
                "order": 62
            }, 
            "material56": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material56", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material56", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material56", 
                "order": 59
            }, 
            "material57": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material57", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material57", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material57", 
                "order": 60
            }, 
            "material54": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material54", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material54", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material54", 
                "order": 57
            }, 
            "material55": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material55", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material55", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material55", 
                "order": 58
            }, 
            "material52": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material52", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material52", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material52", 
                "order": 55
            }, 
            "material53": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material53", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material53", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material53", 
                "order": 56
            }, 
            "material50": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material50", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material50", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material50", 
                "order": 53
            }, 
            "material51": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material51", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material51", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material51", 
                "order": 54
            }, 
            "mix": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "mix", 
                "help": "Which of the 64 inputs (0 to 63) to use. Fractional values will mix the two materials the value lies between", 
                "moonray_type": "Float", 
                "houdini_label": "Mix", 
                "bindable": true, 
                "moonray_name": "mix", 
                "order": 67
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "material49": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material49", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material49", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material49", 
                "order": 52
            }, 
            "material48": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material48", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material48", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material48", 
                "order": 51
            }, 
            "material45": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material45", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material45", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material45", 
                "order": 48
            }, 
            "material44": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material44", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material44", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material44", 
                "order": 47
            }, 
            "material47": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material47", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material47", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material47", 
                "order": 50
            }, 
            "material46": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material46", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material46", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material46", 
                "order": 49
            }, 
            "material41": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material41", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material41", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material41", 
                "order": 44
            }, 
            "material40": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material40", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material40", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material40", 
                "order": 43
            }, 
            "material43": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material43", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material43", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material43", 
                "order": 46
            }, 
            "material42": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material42", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material42", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material42", 
                "order": 45
            }, 
            "sss_trace_set": {
                "default_value": [], 
                "houdini_name": "sss_trace_set", 
                "help": "By default, only the geometry associated with this material contributes to subsurface. The DwaLayerMaterial ignores the sss trace sets of the submaterials. If you want adjacent geometry with different material to contribute as well, specify all those parts here.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Sss Trace Set", 
                "interface": "TraceSet", 
                "moonray_name": "sss_trace_set", 
                "order": 77, 
                "aliases": [
                    "sss trace set"
                ]
            }, 
            "fallback_glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "fallback_glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Fallback Glitter Space", 
                "moonray_name": "fallback_glitter_space", 
                "order": 79
            }, 
            "fallback_outer_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_outer_specular_model", 
                "help": "If child materials disagree on the type of outer specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Outer Specular Model", 
                "moonray_name": "fallback_outer_specular_model", 
                "order": 73
            }, 
            "remap_mix_to_inputs": {
                "default_value": [
                    true
                ], 
                "houdini_name": "remap_mix_to_inputs", 
                "help": "When enabled, multiplies mix value by number of inputs used. Inputs should start at 0 with no gaps", 
                "moonray_type": "Bool", 
                "houdini_label": "Remap Mix To Inputs", 
                "moonray_name": "remap_mix_to_inputs", 
                "order": 68
            }, 
            "fallback_glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_debug_mode", 
                "help": "developer debug visualization modes.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Fallback Glitter Debug Mode", 
                "moonray_name": "fallback_glitter_debug_mode", 
                "order": 87
            }, 
            "fallback_bssrdf": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_bssrdf", 
                "help": "If child materials disagree on the type of bssrdf, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "normalized diffusion", 
                    "dipole", 
                    "random walk"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Bssrdf", 
                "moonray_name": "fallback_bssrdf", 
                "order": 70
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "material63": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material63", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material63", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material63", 
                "order": 66
            }, 
            "material62": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material62", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material62", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material62", 
                "order": 65
            }, 
            "material61": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material61", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material61", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material61", 
                "order": 64
            }, 
            "material60": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material60", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material60", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material60", 
                "order": 63
            }, 
            "fallback_glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow).  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Glitter Layering Mode", 
                "moonray_name": "fallback_glitter_layering_mode", 
                "order": 86
            }, 
            "fallback_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_specular_model", 
                "help": "If child materials disagree on the type of specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Fallback Specular Model", 
                "moonray_name": "fallback_specular_model", 
                "order": 71
            }, 
            "fallback_thin_geometry": {
                "default_value": [
                    true
                ], 
                "houdini_name": "fallback_thin_geometry", 
                "help": "If child materials disagree on the type of thin geometry, this type will be used instead.", 
                "moonray_type": "Bool", 
                "houdini_label": "Fallback Thin Geometry", 
                "moonray_name": "fallback_thin_geometry", 
                "order": 75
            }, 
            "fallback_glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fallback_glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Style A Frequency", 
                "moonray_name": "fallback_glitter_style_A_frequency", 
                "order": 81
            }, 
            "material12": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material12", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material12", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material12", 
                "order": 15
            }, 
            "material13": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material13", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material13", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material13", 
                "order": 16
            }, 
            "material10": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material10", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material10", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material10", 
                "order": 13
            }, 
            "material11": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material11", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material11", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material11", 
                "order": 14
            }, 
            "material16": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material16", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material16", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material16", 
                "order": 19
            }, 
            "material17": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material17", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material17", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material17", 
                "order": 20
            }, 
            "material14": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material14", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material14", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material14", 
                "order": 17
            }, 
            "material15": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material15", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material15", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material15", 
                "order": 18
            }, 
            "mix_interpolation": {
                "default_value": [
                    0
                ], 
                "houdini_name": "mix_interpolation", 
                "help": "Adjusts rate of transition from one material to the next based on mix value", 
                "moonray_type": "Int", 
                "menu": [
                    "linear", 
                    "hold", 
                    "nearest", 
                    "smooth"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Mix Interpolation", 
                "moonray_name": "mix_interpolation", 
                "order": 69
            }, 
            "fallback_glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "fallback_glitter_seed", 
                "help": "The seed for the glitter random number generator.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Int", 
                "houdini_label": "Fallback Glitter Seed", 
                "moonray_name": "fallback_glitter_seed", 
                "order": 78
            }, 
            "material18": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material18", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material18", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material18", 
                "order": 21
            }, 
            "material19": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material19", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material19", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material19", 
                "order": 22
            }, 
            "fallback_toon_specular_model": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fallback_toon_specular_model", 
                "help": "If child materials disagree on the type of toon specular model, this type will be used instead.", 
                "moonray_type": "Int", 
                "menu": [
                    "Beckmann", 
                    "GGX", 
                    "Toon"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Fallback Toon Specular Model", 
                "moonray_name": "fallback_toon_specular_model", 
                "order": 72
            }, 
            "fallback_glitter_style_B_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fallback_glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Style B Frequency", 
                "bindable": true, 
                "moonray_name": "fallback_glitter_style_B_frequency", 
                "order": 83
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "fallback_glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "fallback_glitter_randomness", 
                "help": "randomness of flake orientation.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter Randomness", 
                "moonray_name": "fallback_glitter_randomness", 
                "order": 80
            }, 
            "fallback_clearcoat_use_bending": {
                "default_value": [
                    true
                ], 
                "houdini_name": "fallback_clearcoat_use_bending", 
                "help": "If child materials disagree on the type of clearcoat use bending, this type will be used instead.", 
                "moonray_type": "Bool", 
                "houdini_label": "Fallback Clearcoat Use Bending", 
                "moonray_name": "fallback_clearcoat_use_bending", 
                "order": 74
            }, 
            "fallback_glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "fallback_glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "String", 
                "houdini_label": "Fallback Glitter Texture B", 
                "moonray_name": "fallback_glitter_texture_B", 
                "order": 84
            }, 
            "fallback_glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "fallback_glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).  This parameter will only be used when layering two distinct glitter materials.", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Fallback Glitter Texture A", 
                "moonray_name": "fallback_glitter_texture_A", 
                "order": 82
            }, 
            "material34": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material34", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material34", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material34", 
                "order": 37
            }, 
            "material35": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material35", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material35", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material35", 
                "order": 38
            }, 
            "material36": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material36", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material36", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material36", 
                "order": 39
            }, 
            "material37": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material37", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material37", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material37", 
                "order": 40
            }, 
            "material30": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material30", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material30", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material30", 
                "order": 33
            }, 
            "material31": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material31", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material31", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material31", 
                "order": 34
            }, 
            "material32": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material32", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material32", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material32", 
                "order": 35
            }, 
            "material33": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material33", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material33", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material33", 
                "order": 36
            }, 
            "material38": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material38", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material38", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material38", 
                "order": 41
            }, 
            "material39": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material39", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material39", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material39", 
                "order": 42
            }, 
            "material0": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material0", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material0", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material0", 
                "order": 3
            }, 
            "material1": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material1", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material1", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material1", 
                "order": 4
            }, 
            "material2": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material2", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material2", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material2", 
                "order": 5
            }, 
            "material3": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material3", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material3", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material3", 
                "order": 6
            }, 
            "material4": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material4", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material4", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material4", 
                "order": 7
            }, 
            "material5": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material5", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material5", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material5", 
                "order": 8
            }, 
            "material6": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material6", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material6", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material6", 
                "order": 9
            }, 
            "material7": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material7", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material7", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material7", 
                "order": 10
            }, 
            "material8": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material8", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material8", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material8", 
                "order": 11
            }, 
            "material9": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material9", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material9", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material9", 
                "order": 12
            }, 
            "material29": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material29", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material29", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material29", 
                "order": 32
            }, 
            "material28": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material28", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material28", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material28", 
                "order": 31
            }, 
            "material23": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material23", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material23", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material23", 
                "order": 26
            }, 
            "material22": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material22", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material22", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material22", 
                "order": 25
            }, 
            "material21": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material21", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material21", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material21", 
                "order": 24
            }, 
            "material20": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material20", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material20", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material20", 
                "order": 23
            }, 
            "material27": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material27", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material27", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material27", 
                "order": 30
            }, 
            "material26": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material26", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material26", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material26", 
                "order": 29
            }, 
            "material25": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material25", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material25", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material25", 
                "order": 28
            }, 
            "material24": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "material24", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Material24", 
                "interface": "DwaBaseLayerable", 
                "moonray_name": "material24", 
                "order": 27
            }, 
            "blend_color_space": {
                "default_value": [
                    0
                ], 
                "houdini_name": "blend_color_space", 
                "help": "Color space used when blending the two material's color parameters", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "HSV", 
                    "HSL"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Blend Color Space", 
                "moonray_name": "blend_color_space", 
                "order": 76
            }, 
            "fallback_glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "fallback_glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier.  This parameter will only be used when layering two distinct glitter materials.", 
                "moonray_type": "Float", 
                "houdini_label": "Fallback Glitter LOD Quality", 
                "moonray_name": "fallback_glitter_LOD_quality", 
                "order": 85, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }
        }, 
        "folders_with_parms": {
            "Glitter Fallback": [
                "fallback_glitter_seed", 
                "fallback_glitter_space", 
                "fallback_glitter_randomness", 
                "fallback_glitter_style_A_frequency", 
                "fallback_glitter_texture_A", 
                "fallback_glitter_style_B_frequency", 
                "fallback_glitter_texture_B", 
                "fallback_glitter_LOD_quality", 
                "fallback_glitter_layering_mode", 
                "fallback_glitter_debug_mode"
            ], 
            "Advanced": [
                "fallback_bssrdf", 
                "fallback_specular_model", 
                "fallback_toon_specular_model", 
                "fallback_outer_specular_model", 
                "fallback_clearcoat_use_bending", 
                "fallback_thin_geometry", 
                "blend_color_space", 
                "sss_trace_set"
            ]
        }
    }, 
    "ProjectCameraNormalMap": {
        "moonray_type": "NormalMap", 
        "moonray_name": "ProjectCameraNormalMap", 
        "folders_sorted": [], 
        "parms": {
            "projector": {
                "default_value": [], 
                "houdini_name": "projector", 
                "help": "the camera to project from", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Projector", 
                "interface": "Camera", 
                "moonray_name": "projector", 
                "order": 0
            }, 
            "project_on_back_faces": {
                "default_value": [
                    false
                ], 
                "houdini_name": "project_on_back_faces", 
                "help": "Toggles whether camera projections appear on back faces.", 
                "moonray_type": "Bool", 
                "houdini_label": "Project On Back Faces", 
                "moonray_name": "project_on_back_faces", 
                "order": 1
            }, 
            "texture": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "texture", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture", 
                "moonray_name": "texture", 
                "order": 3
            }, 
            "aspect_ratio_source": {
                "default_value": [
                    0
                ], 
                "houdini_name": "aspect_ratio_source", 
                "help": "Whether to use the image and pixel aspect ratio of the texture being projected, or a custom aspect ratio", 
                "moonray_type": "Int", 
                "menu": [
                    "from texture", 
                    "custom"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Aspect Ratio Source", 
                "moonray_name": "aspect_ratio_source", 
                "order": 4
            }, 
            "custom_aspect_ratio": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "custom_aspect_ratio", 
                "help": "a custom aspect ratio for the projected texture", 
                "moonray_type": "Float", 
                "houdini_label": "Custom Aspect Ratio", 
                "moonray_name": "custom_aspect_ratio", 
                "order": 5
            }, 
            "normal_encoding": {
                "default_value": [
                    0
                ], 
                "houdini_name": "normal_encoding", 
                "help": "Most normal maps are encoded [0,1].   Only certain rare floating point normal maps are encoded [-1,1]", 
                "moonray_type": "Int", 
                "menu": [
                    "[0,1]", 
                    "[-1,1]"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Normal Encoding", 
                "moonray_name": "normal_encoding", 
                "order": 6, 
                "aliases": [
                    "normal encoding"
                ]
            }, 
            "use_reference_space": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_reference_space", 
                "help": "use reference space", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Reference Space", 
                "moonray_name": "use_reference_space", 
                "order": 2
            }
        }, 
        "folders_with_parms": {}
    }, 
    "UserData": {
        "moonray_type": "UserData", 
        "moonray_name": "UserData", 
        "folders_sorted": [], 
        "parms": {
            "float_values_0": {
                "default_value": [], 
                "houdini_name": "float_values_0", 
                "help": "float type user data values for motion step 0", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Float Values 0", 
                "moonray_name": "float_values_0", 
                "order": 5, 
                "aliases": [
                    "float_values", 
                    "float values"
                ]
            }, 
            "float_values_1": {
                "default_value": [], 
                "houdini_name": "float_values_1", 
                "help": "float type user data values for motion step 1", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Float Values 1", 
                "moonray_name": "float_values_1", 
                "order": 6
            }, 
            "vec2f_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "vec2f_key", 
                "help": "key name for vec2f type user data", 
                "moonray_type": "String", 
                "houdini_label": "Vec2F Key", 
                "moonray_name": "vec2f_key", 
                "order": 12, 
                "aliases": [
                    "vec2f key"
                ]
            }, 
            "vec3f_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "vec3f_key", 
                "help": "key name for vec3f type user data", 
                "moonray_type": "String", 
                "houdini_label": "Vec3F Key", 
                "moonray_name": "vec3f_key", 
                "order": 15, 
                "aliases": [
                    "vec3f key"
                ]
            }, 
            "string_values": {
                "default_value": [], 
                "houdini_name": "string_values", 
                "help": "string type user data values", 
                "moonray_type": "StringVector", 
                "houdini_label": "String Values", 
                "moonray_name": "string_values", 
                "order": 8, 
                "aliases": [
                    "string values"
                ]
            }, 
            "string_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "string_key", 
                "help": "key name for string type user data", 
                "moonray_type": "String", 
                "houdini_label": "String Key", 
                "moonray_name": "string_key", 
                "order": 7, 
                "aliases": [
                    "string key"
                ]
            }, 
            "bool_values": {
                "default_value": [], 
                "houdini_name": "bool_values", 
                "help": "bool type user data values", 
                "moonray_type": "BoolVector", 
                "houdini_label": "Bool Values", 
                "moonray_name": "bool_values", 
                "order": 1, 
                "aliases": [
                    "bool values"
                ]
            }, 
            "color_values_1": {
                "default_value": [], 
                "houdini_name": "color_values_1", 
                "help": "color type user data values for motion step 1", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Color Values 1", 
                "moonray_name": "color_values_1", 
                "order": 11
            }, 
            "color_values_0": {
                "default_value": [], 
                "houdini_name": "color_values_0", 
                "help": "color type user data values for motion step 0", 
                "moonray_type": "RgbVector", 
                "houdini_label": "Color Values 0", 
                "moonray_name": "color_values_0", 
                "order": 10, 
                "aliases": [
                    "color_values", 
                    "color values"
                ]
            }, 
            "mat4f_values_0": {
                "default_value": [], 
                "houdini_name": "mat4f_values_0", 
                "help": "mat4f type user data values for motion step 0", 
                "moonray_type": "Mat4fVector", 
                "houdini_label": "Mat4F Values 0", 
                "moonray_name": "mat4f_values_0", 
                "order": 19, 
                "aliases": [
                    "mat4f_values", 
                    "mat4f values"
                ]
            }, 
            "vec3f_values_1": {
                "default_value": [], 
                "houdini_name": "vec3f_values_1", 
                "help": "vec3f type user data values for motion step 1", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vec3F Values 1", 
                "moonray_name": "vec3f_values_1", 
                "order": 17
            }, 
            "mat4f_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "mat4f_key", 
                "help": "key name for mat4f type user data", 
                "moonray_type": "String", 
                "houdini_label": "Mat4F Key", 
                "moonray_name": "mat4f_key", 
                "order": 18, 
                "aliases": [
                    "mat4f key"
                ]
            }, 
            "bool_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "bool_key", 
                "help": "key name for bool type user data", 
                "moonray_type": "String", 
                "houdini_label": "Bool Key", 
                "moonray_name": "bool_key", 
                "order": 0, 
                "aliases": [
                    "bool key"
                ]
            }, 
            "mat4f_values_1": {
                "default_value": [], 
                "houdini_name": "mat4f_values_1", 
                "help": "mat4f type user data values for motion step 1", 
                "moonray_type": "Mat4fVector", 
                "houdini_label": "Mat4F Values 1", 
                "moonray_name": "mat4f_values_1", 
                "order": 20
            }, 
            "vec2f_values_1": {
                "default_value": [], 
                "houdini_name": "vec2f_values_1", 
                "help": "vec2f type user data values for motion step 1", 
                "moonray_type": "Vec2fVector", 
                "houdini_label": "Vec2F Values 1", 
                "moonray_name": "vec2f_values_1", 
                "order": 14
            }, 
            "vec2f_values_0": {
                "default_value": [], 
                "houdini_name": "vec2f_values_0", 
                "help": "vec2f type user data values for motion step 0", 
                "moonray_type": "Vec2fVector", 
                "houdini_label": "Vec2F Values 0", 
                "moonray_name": "vec2f_values_0", 
                "order": 13, 
                "aliases": [
                    "vec2f_values", 
                    "vec2f values"
                ]
            }, 
            "color_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "color_key", 
                "help": "key name for color type user data", 
                "moonray_type": "String", 
                "houdini_label": "Color Key", 
                "moonray_name": "color_key", 
                "order": 9, 
                "aliases": [
                    "color key"
                ]
            }, 
            "float_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "float_key", 
                "help": "key name for float type user data", 
                "moonray_type": "String", 
                "houdini_label": "Float Key", 
                "moonray_name": "float_key", 
                "order": 4, 
                "aliases": [
                    "float key"
                ]
            }, 
            "int_key": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "int_key", 
                "help": "key name for integer type user data", 
                "moonray_type": "String", 
                "houdini_label": "Int Key", 
                "moonray_name": "int_key", 
                "order": 2, 
                "aliases": [
                    "int key"
                ]
            }, 
            "int_values": {
                "default_value": [], 
                "houdini_name": "int_values", 
                "help": "integer type user data values", 
                "moonray_type": "IntVector", 
                "houdini_label": "Int Values", 
                "moonray_name": "int_values", 
                "order": 3, 
                "aliases": [
                    "int values"
                ]
            }, 
            "vec3f_values_0": {
                "default_value": [], 
                "houdini_name": "vec3f_values_0", 
                "help": "vec3f type user data values for motion step 0", 
                "moonray_type": "Vec3fVector", 
                "houdini_label": "Vec3F Values 0", 
                "moonray_name": "vec3f_values_0", 
                "order": 16, 
                "aliases": [
                    "vec3f_values", 
                    "vec3f values"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "HairColorPresetsMap": {
        "moonray_type": "Map", 
        "moonray_name": "HairColorPresetsMap", 
        "folders_sorted": [], 
        "parms": {
            "color": {
                "default_value": [
                    0
                ], 
                "houdini_name": "color", 
                "moonray_type": "Int", 
                "menu": [
                    "black", 
                    "gray", 
                    "platinum blond", 
                    "light blond", 
                    "golden blond", 
                    "strawberry blond", 
                    "light red", 
                    "dark red", 
                    "light auburn", 
                    "dark auburn", 
                    "brown", 
                    "dark brown", 
                    "golden brown", 
                    "ash brown", 
                    "chestnut brown"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12", 
                    "13", 
                    "14"
                ], 
                "houdini_label": "Color", 
                "moonray_name": "color", 
                "order": 0
            }
        }, 
        "folders_with_parms": {}
    }, 
    "UVTransformMap": {
        "moonray_type": "Map", 
        "moonray_name": "UVTransformMap", 
        "folders_sorted": [], 
        "parms": {
            "rotation_angle": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "rotation_angle", 
                "help": "Rotation in degrees", 
                "moonray_type": "Float", 
                "houdini_label": "Rotation Angle", 
                "moonray_name": "rotation_angle", 
                "order": 3, 
                "aliases": [
                    "rotation angle"
                ]
            }, 
            "scale": {
                "default_value": [
                    1.0, 
                    1.0
                ], 
                "houdini_name": "scale", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Scale", 
                "moonray_name": "scale", 
                "order": 2
            }, 
            "rotation_center": {
                "default_value": [
                    0.5, 
                    0.5
                ], 
                "houdini_name": "rotation_center", 
                "help": "UV coordinate around which to rotate", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Rotation Center", 
                "moonray_name": "rotation_center", 
                "order": 4, 
                "aliases": [
                    "rotation center"
                ]
            }, 
            "space": {
                "default_value": [
                    6
                ], 
                "houdini_name": "space", 
                "moonray_type": "Int", 
                "menu": [
                    "render", 
                    "camera", 
                    "world", 
                    "screen", 
                    "object", 
                    "reference", 
                    "texture"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "space", 
                "order": 0
            }, 
            "offset": {
                "default_value": [
                    0.0, 
                    0.0
                ], 
                "houdini_name": "offset", 
                "moonray_type": "Vec2f", 
                "houdini_label": "Offset", 
                "moonray_name": "offset", 
                "order": 1
            }, 
            "rotation_axis": {
                "default_value": [
                    0.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "rotation_axis", 
                "help": "Axis in which to rotate (only for 3D spaces)", 
                "moonray_type": "Vec3f", 
                "houdini_label": "Rotation Axis", 
                "moonray_name": "rotation_axis", 
                "order": 5, 
                "aliases": [
                    "rotation axis"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "RenderOutput": {
        "moonray_type": "RenderOutput", 
        "moonray_name": "RenderOutput", 
        "folders_sorted": [], 
        "parms": {
            "display_filter": {
                "default_value": [], 
                "houdini_name": "display_filter", 
                "help": "If \"result\" is \"display filter\", this attribute refers to a display filter object which is used to compute the output pixel values.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Display Filter", 
                "interface": "DisplayFilter", 
                "moonray_name": "display_filter", 
                "order": 26
            }, 
            "file_part": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "file_part", 
                "help": "Name of sub-image if using a multi-part exr file.", 
                "moonray_type": "String", 
                "houdini_label": "File Part", 
                "moonray_name": "file_part", 
                "order": 11, 
                "aliases": [
                    "file part"
                ]
            }, 
            "primitive_attribute_type": {
                "default_value": [
                    0
                ], 
                "houdini_name": "primitive_attribute_type", 
                "help": "This attribute specifies the type of the attribute named with the \"primitive attribute\" setting.  This is required to uniquely specify the primitive attribute.", 
                "moonray_type": "Int", 
                "menu": [
                    "FLOAT", 
                    "VEC2F", 
                    "VEC3F", 
                    "RGB"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Primitive Attribute Type", 
                "moonray_name": "primitive_attribute_type", 
                "order": 5, 
                "aliases": [
                    "primitive attribute type"
                ]
            }, 
            "primitive_attribute": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "primitive_attribute", 
                "help": "If \"result\" is \"primitive attribute\", this attribute specifies the particular primitive attribute to output.  Default channel name is based on primitive attribute name and type.", 
                "moonray_type": "String", 
                "houdini_label": "Primitive Attribute", 
                "moonray_name": "primitive_attribute", 
                "order": 4, 
                "aliases": [
                    "primitive attribute"
                ]
            }, 
            "checkpoint_file_name": {
                "default_value": [
                    "checkpoint.exr"
                ], 
                "houdini_name": "checkpoint_file_name", 
                "help": "Name of checkpoint output file.", 
                "moonray_type": "String", 
                "houdini_label": "Checkpoint File Name", 
                "moonray_name": "checkpoint_file_name", 
                "order": 21, 
                "aliases": [
                    "checkpoint file name"
                ]
            }, 
            "result": {
                "default_value": [
                    0
                ], 
                "houdini_name": "result", 
                "help": "The result to output.  Available results: \n\tgeneral results:\n\t\t\"beauty\" - full render (R, G, B), \n\t\t\"alpha\" - full render alpha channel (A), \n\t\t\"depth\" - z distance from camera (Z), \n\t\t\"display filter\" - output results from a display filter, \n\taov results:\n\t\t\"state variable\" - Built-in state variable, \n\t\t\"primitive attribute\" - Procedural provided attributes, \n\t\t\"material aov\" - Aovs provided via material expressions \n\t\t\"light aov\" - Aovs provided via light path expressions \n\t\t\"visibility aov\" - Fraction of light samples that hit light source\n\t\t\"variance aov\" - Aovs calculated from the pixel variance of other aovs\n\t\t\"weight\" - weight,\n\t\t\"beauty aux\" - renderBuffer auxiliary sample data for adaptive sampling,\n\t\t\"cryptomatte\" - cryptomatte,\n\t\t\"alpha aux\" - alpha auxiliary sample data for adaptive sampling,\n\tdiagnostic results:\n\t\t\"time per pixel\" - Time per pixel heat map metric,\n\t\t\"wireframe\" - Render as wireframe", 
                "moonray_type": "Int", 
                "menu": [
                    "beauty", 
                    "alpha", 
                    "depth", 
                    "state variable", 
                    "primitive attribute", 
                    "time per pixel", 
                    "wireframe", 
                    "material aov", 
                    "light aov", 
                    "visibility aov", 
                    "variance aov", 
                    "weight", 
                    "beauty aux", 
                    "cryptomatte", 
                    "alpha aux", 
                    "display filter"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12", 
                    "13", 
                    "14", 
                    "15"
                ], 
                "houdini_label": "Result", 
                "moonray_name": "result", 
                "order": 1
            }, 
            "compression": {
                "default_value": [
                    1
                ], 
                "houdini_name": "compression", 
                "help": "Compression used for file (or file part in the multi-part case). All render outputs that target the same image must specify the same compression.", 
                "moonray_type": "Int", 
                "menu": [
                    "none", 
                    "zip", 
                    "rle", 
                    "zips", 
                    "piz", 
                    "pxr24", 
                    "b44", 
                    "b44a", 
                    "dwaa", 
                    "dwab"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9"
                ], 
                "houdini_label": "Compression", 
                "moonray_name": "compression", 
                "order": 12
            }, 
            "checkpoint_multi_version_file_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "checkpoint_multi_version_file_name", 
                "help": "Name of checkpoint output file under checkpoint file overwrite=off condition.", 
                "moonray_type": "String", 
                "houdini_label": "Checkpoint Multi Version File Name", 
                "moonray_name": "checkpoint_multi_version_file_name", 
                "order": 22, 
                "aliases": [
                    "checkpoint multi version file name"
                ]
            }, 
            "denoise": {
                "default_value": [
                    false
                ], 
                "houdini_name": "denoise", 
                "help": "Run optix denoiser before writing to disk", 
                "moonray_type": "Bool", 
                "houdini_label": "Denoise", 
                "moonray_name": "denoise", 
                "order": 20
            }, 
            "channel_format": {
                "default_value": [
                    1
                ], 
                "houdini_name": "channel_format", 
                "help": "The pixel encoding (bit depth and type) of the output channel.", 
                "moonray_type": "Int", 
                "menu": [
                    "float", 
                    "half"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Channel Format", 
                "moonray_name": "channel_format", 
                "order": 16, 
                "aliases": [
                    "channel format"
                ]
            }, 
            "resume_file_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "resume_file_name", 
                "help": "Name of input file for resume render start condition", 
                "moonray_type": "String", 
                "houdini_label": "Resume File Name", 
                "moonray_name": "resume_file_name", 
                "order": 23, 
                "aliases": [
                    "resume file name"
                ]
            }, 
            "file_name": {
                "default_value": [
                    "scene.exr"
                ], 
                "houdini_name": "file_name", 
                "help": "Name of destination file.", 
                "moonray_type": "String", 
                "houdini_label": "File Name", 
                "moonray_name": "file_name", 
                "order": 10, 
                "aliases": [
                    "file name"
                ]
            }, 
            "denoiser_input": {
                "default_value": [
                    0
                ], 
                "houdini_name": "denoiser_input", 
                "help": "How to use this output as a denoiser input", 
                "moonray_type": "Int", 
                "menu": [
                    "not an input", 
                    "as albedo", 
                    "as normal"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Denoiser Input", 
                "moonray_name": "denoiser_input", 
                "order": 19
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "help": "Camera to use for this output.  If not specified, defaults to the primary camera.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 25
            }, 
            "exr_dwa_compression_level": {
                "default_value": [
                    85.0
                ], 
                "houdini_name": "exr_dwa_compression_level", 
                "help": "Compression level used for file with dwaa or dwab compression. All render outputs that target the same image must specify the same compression level.", 
                "moonray_type": "Float", 
                "houdini_label": "Exr Dwa Compression Level", 
                "moonray_name": "exr_dwa_compression_level", 
                "order": 13, 
                "aliases": [
                    "exr dwa compression level"
                ]
            }, 
            "channel_suffix_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "channel_suffix_mode", 
                "help": "When processing multi-channel outputs, how should channel names be suffixed?\n\tauto : a best guess suffix is chosen based on the type of output\n\trgb  : .R, .G, .B\n\txyz  : .X, .Y, .Z\n\tuvw  : .U, .V, .W", 
                "moonray_type": "Int", 
                "menu": [
                    "auto", 
                    "rgb", 
                    "xyz", 
                    "uvw"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3"
                ], 
                "houdini_label": "Channel Suffix Mode", 
                "moonray_name": "channel_suffix_mode", 
                "order": 15
            }, 
            "state_variable": {
                "default_value": [
                    2
                ], 
                "houdini_name": "state_variable", 
                "help": "If \"result\" is \"state variable\", this attribute specifies the particular state variable result. \n\t\"P\" - position (P.X, P.Y, P.Z), \n\t\"Ng\" - geometric normal (Ng.X, Ng.Y, Ng.Z), \n\t\"N\" - normal (N.X, N.Y, N.Z), \n\t\"St\" - texture coordinates (St.X, St.Y), \n\t\"dPds\" - derivative of P w.r.t S (dPds.X, dPds.Y, dPds.Z), \n\t\"dPdt\" - derivative of P w.r.t T (dPdt.X, dPdt.Y, dPdt.Z), \n\t\"dSdx\" - s derivative w.r.t. x (dSdx), \n\t\"dSdy\" - s derivative w.r.t. y (dSdy), \n\t\"dTdx\" - t derivative w.r.t. x (dTdx), \n\t\"dTdy\" - t derivative w.r.t. y (dTdy), \n\t\"Wp\" - world position (Wp.X, Wp.Y, Wp.Z), \n\t\"depth\" - z distance from camera (Z), \n\t\"motionvec\" - 2D motion vector", 
                "moonray_type": "Int", 
                "menu": [
                    "P", 
                    "Ng", 
                    "N", 
                    "St", 
                    "dPds", 
                    "dPdt", 
                    "dSdx", 
                    "dSdy", 
                    "dTdx", 
                    "dTdy", 
                    "Wp", 
                    "depth", 
                    "motionvec"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7", 
                    "8", 
                    "9", 
                    "10", 
                    "11", 
                    "12"
                ], 
                "houdini_label": "State Variable", 
                "moonray_name": "state_variable", 
                "order": 3, 
                "aliases": [
                    "state variable"
                ]
            }, 
            "math_filter": {
                "default_value": [
                    0
                ], 
                "houdini_name": "math_filter", 
                "help": "the math filter over the pixel.\noptions include:\n\taverage\n\tsum\n\tmin\n\tmax\n\tforce_consistent_sampling : average of the first \"min_adaptive_samples\"\n\tclosest                   : use sample with minimum z-depth", 
                "moonray_type": "Int", 
                "menu": [
                    "average", 
                    "sum", 
                    "min", 
                    "max", 
                    "force_consistent_sampling", 
                    "closest"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Math Filter", 
                "moonray_name": "math_filter", 
                "order": 17, 
                "aliases": [
                    "math filter"
                ]
            }, 
            "visibility_aov": {
                "default_value": [
                    "C[<T.><RS>]*[<R[DG]><TD>][LO]"
                ], 
                "houdini_name": "visibility_aov", 
                "help": "If \"result\" is \"visibility aov\", this attribute specifies a light path expression that defines the set of all paths usedto compute the visibility ratio.", 
                "moonray_type": "String", 
                "houdini_label": "Visibility Aov", 
                "moonray_name": "visibility_aov", 
                "order": 8
            }, 
            "active": {
                "default_value": [
                    true
                ], 
                "houdini_name": "active", 
                "help": "true enables, false disables render output.", 
                "moonray_type": "Bool", 
                "houdini_label": "Active", 
                "moonray_name": "active", 
                "order": 0
            }, 
            "cryptomatte_depth": {
                "default_value": [
                    6
                ], 
                "houdini_name": "cryptomatte_depth", 
                "help": "Number of cryptomatte (id,coverage) data sets to output", 
                "moonray_type": "Int", 
                "houdini_label": "Cryptomatte Depth", 
                "moonray_name": "cryptomatte_depth", 
                "order": 24
            }, 
            "reference_render_output": {
                "default_value": [], 
                "houdini_name": "reference_render_output", 
                "help": "If \"result\" is \"variance aov\", this attribute refers to another render output for which to calculate the pixel variance.", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Reference Render Output", 
                "interface": "RenderOutput", 
                "moonray_name": "reference_render_output", 
                "order": 9
            }, 
            "material_aov": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "material_aov", 
                "help": "If \"result\" is \"material aov\", this attribute specifies a material aov expression to output.  The expression format is: \n\t[('<GL>')+\\.][('<ML>')+\\.][('<LL>')+\\.][(SS|R|T|D|G|M)+\\.][fresnel\\.]<property>. Where:\n\t\t<GL> is a label associated with the geometry \n\t\t<ML> is a label associated with the material \n\t\t<LL> is a lobe label \n\t\tR means reflection side lobe \n\t\tT means transmission side lobe \n\t\tD means diffuse lobe category \n\t\tG means glossy lobe category \n\t\tM means mirror lobe category \n\t\tSS means sub-surface component of the material \n\t\tfresnel means to select the lobe's or sub-surface's fresnel \n\t\t<property> can be one of: \n\t\t\t'albedo'       (bsdf lobe | subsurface)           (RGB),\n\t\t\t'color'        (bsdf lobe | subsurface | fresnel) (RGB),\n\t\t\t'depth'        (state variable)                   (FLOAT),\n\t\t\t'dPds'         (state variable)                   (VEC3F),\n\t\t\t'dPdt'         (state variable)                   (VEC3F),\n\t\t\t'dSdx'         (state variable)                   (FLOAT),\n\t\t\t'dSdy'         (state variable)                   (FLOAT),\n\t\t\t'dTdx'         (state variable)                   (FLOAT),\n\t\t\t'dTdy'         (state variable)                   (FLOAT),\n\t\t\t'emission'     (bsdf)                             (RGB),\n\t\t\t'factor'       (fresnel)                          (FLOAT),\n\t\t\t'float:<attr>' (primitive attribute)              (FLOAT),\n\t\t\t'matte'        (bsdf lobe | subsurface)           (FLOAT),\n\t\t\t'motionvec'    (state variable)                   (VEC2F),\n\t\t\t'N'            (state variable)                   (VEC3F),\n\t\t\t'Ng'           (state variable)                   (VEC3F),\n\t\t\t'normal'       (bsdf lobe | subsurface)           (VEC3F),\n\t\t\t'P'            (state variable)                   (VEC3F),\n\t\t\t'pbr_validity' (bsdf lobe | subsurface)           (RGB),\n\t\t\t'radius'       (subsurface)                       (RGB),\n\t\t\t'rgb:<attr>'   (primitive attribute)              (RGB),\n\t\t\t'roughness'    (bsdf lobe) (fresnel)              (VEC2F),\n\t\t\t'St'           (state variable)                   (VEC2F),\n\t\t\t'vec2:<attr>'  (primitive attribute)              (VEC2F),\n\t\t\t'vec3:<attr>'  (primitive attribute)              (VEC3F),\n\t\t\t'Wp'           (state variable)                   (VEC3F)\n\tExamples:\n\t\talbedo              : Albedo of all rendered materials \n\t\tR.albedo            : Total reflection albedo \n\t\t'spec'.MG.roughness : Roughness of all mirror and glossy lobes that have the 'spec' label", 
                "moonray_type": "String", 
                "houdini_label": "Material Aov", 
                "moonray_name": "material_aov", 
                "order": 6, 
                "aliases": [
                    "material aov"
                ]
            }, 
            "channel_name": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "channel_name", 
                "help": "Name of the output channel.  In the case of an empty channel name a sensible default name is chosen.", 
                "moonray_type": "String", 
                "houdini_label": "Channel Name", 
                "moonray_name": "channel_name", 
                "order": 14, 
                "aliases": [
                    "channel name"
                ]
            }, 
            "exr_header_attributes": {
                "default_value": [], 
                "houdini_name": "exr_header_attributes", 
                "help": "Metadata that is passed directly to the exr header. Format: {\"name\", \"type\", \"value\"}", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Exr Header Attributes", 
                "interface": "Metadata", 
                "moonray_name": "exr_header_attributes", 
                "order": 18, 
                "aliases": [
                    "exr header attributes"
                ]
            }, 
            "output_type": {
                "default_value": [
                    "flat"
                ], 
                "houdini_name": "output_type", 
                "help": "Specifies the type of output.  Defaults to \"flat\", meaning a flat exr file.  \"deep\" will output a deep exr file.", 
                "moonray_type": "String", 
                "houdini_label": "Output Type", 
                "moonray_name": "output_type", 
                "order": 2, 
                "aliases": [
                    "output type"
                ]
            }, 
            "lpe": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "lpe", 
                "help": "This attribute specifies a light path expression to output. For details on light path expression syntax see:\n\t\thttps://github.com/imageworks/OpenShadingLanguage/wiki/OSL-Light-Path-Expressions\n\tLabels on scattering events are constructed from two parts: [ML.]LL Where:\n\t\t<ML> is the label attribute value of the material (if non-empty)\n\t\t<LL> is the lobe label assigned in the shader by the shader writer\n\tLabels on light events are set from the label attribute of the light.\n\tAdditionally, a small set of pre-defined expressions are available:\n\t\t'caustic'      : CD[S]+[<L.>O]\n\t\t'diffuse'      : CD[<L.>O]\n\t\t'emission'     : CO\n\t\t'glossy'       : CG[<L.>O]\n\t\t'mirror'       : CS[<L.>O]\n\t\t'reflection'   : C<RS>[DSG]+[<L.>O]\n\t\t'translucent'  : C<TD>[DSG]+[<L.>O]\n\t\t'transmission' : C<TS>[DSG]+[<L.>O]", 
                "moonray_type": "String", 
                "houdini_label": "Lpe", 
                "moonray_name": "lpe", 
                "order": 7, 
                "aliases": [
                    "light_aov", 
                    "light aov"
                ]
            }
        }, 
        "folders_with_parms": {}
    }, 
    "HairMaterial_v3": {
        "moonray_type": "DwaBaseHairLayerable", 
        "moonray_name": "HairMaterial_v3", 
        "folders_sorted": [
            "Common", 
            "Fresnel", 
            "Primary Specular", 
            "Secondary Specular", 
            "Transmission", 
            "Advanced", 
            "Emission"
        ], 
        "parms": {
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 3
            }, 
            "transmission_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "transmission_tint", 
                "help": "tint transmission with this color (leave white for physical behavior)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "transmission_tint", 
                "order": 29, 
                "aliases": [
                    "transmission tint"
                ]
            }, 
            "hair_color": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "hair_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Hair Color", 
                "bindable": true, 
                "moonray_name": "hair_color", 
                "order": 5, 
                "aliases": [
                    "hair color"
                ]
            }, 
            "cuticle_layer_thickness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "cuticle_layer_thickness", 
                "moonray_type": "Float", 
                "houdini_label": "Cuticle Layer Thickness", 
                "bindable": true, 
                "moonray_name": "cuticle_layer_thickness", 
                "order": 8
            }, 
            "show_hair_glint": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_hair_glint", 
                "help": "show hair glint", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Hair Glint", 
                "moonray_name": "show_hair_glint", 
                "order": 18
            }, 
            "secondary_specular_offset": {
                "default_value": [
                    -4.5
                ], 
                "houdini_name": "secondary_specular_offset", 
                "help": "offset secondary specular highlight along hair direction (in degrees) [-10,+10], around -4.5 for human hair", 
                "moonray_type": "Float", 
                "houdini_label": "Offset", 
                "bindable": true, 
                "moonray_name": "secondary_specular_offset", 
                "order": 14, 
                "aliases": [
                    "secondary specular offset"
                ]
            }, 
            "transmission_offset": {
                "default_value": [
                    -1.5
                ], 
                "houdini_name": "transmission_offset", 
                "help": "offset transmission highlight along hair direction (in degrees) [-10,+10], around -1.5 for human hair", 
                "moonray_type": "Float", 
                "houdini_label": "Offset", 
                "bindable": true, 
                "moonray_name": "transmission_offset", 
                "order": 25, 
                "aliases": [
                    "transmission offset"
                ]
            }, 
            "primary_specular_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "primary_specular_roughness", 
                "help": "roughness of the primary specular highlight, also sets the transmission roughness to 0.5x and secondary specular roughness to 2x by default unless independent roughnesses are being used for both", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "primary_specular_roughness", 
                "order": 11, 
                "aliases": [
                    "primary specular roughness"
                ]
            }, 
            "transmission_azimuthal_roughness": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "transmission_azimuthal_roughness", 
                "help": "higher values create a softer look", 
                "moonray_type": "Float", 
                "houdini_label": "Azimuthal Roughness", 
                "bindable": true, 
                "moonray_name": "transmission_azimuthal_roughness", 
                "order": 28, 
                "aliases": [
                    "transmission azimuthal roughness"
                ]
            }, 
            "show_primary_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_primary_specular", 
                "help": "show primary specular", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Primary Specular", 
                "moonray_name": "show_primary_specular", 
                "order": 9, 
                "aliases": [
                    "show primary specular"
                ]
            }, 
            "use_independent_transmission_roughness": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_transmission_roughness", 
                "help": "when disabled, uses a physically correct value for Transmission roughness which is linked to the primary specular roughness", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Transmission Roughness", 
                "moonray_name": "use_independent_transmission_roughness", 
                "order": 26, 
                "aliases": [
                    "use independent transmission roughness"
                ]
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "show_multiple_scattering": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_multiple_scattering", 
                "help": "show the amount of light scattered after TRT bounce, good for blonde/white hair", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Multiple Scattering", 
                "moonray_name": "show_multiple_scattering", 
                "order": 32, 
                "aliases": [
                    "show multiple scattering"
                ]
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "glint_min_twists": {
                "default_value": [
                    1.5
                ], 
                "houdini_name": "glint_min_twists", 
                "help": "the minimum number of twists along the hair's length. More twists means more glints. Each hair strand will be randomly assigned a twist amount between [min twists, max twists]", 
                "moonray_type": "Float", 
                "houdini_label": "Glint Min Twists", 
                "bindable": true, 
                "moonray_name": "glint_min_twists", 
                "order": 21
            }, 
            "independent_transmission_roughness": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "independent_transmission_roughness", 
                "help": "transmission roughness", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Transmission Roughness", 
                "bindable": true, 
                "moonray_name": "independent_transmission_roughness", 
                "order": 27, 
                "aliases": [
                    "independent transmission roughness"
                ]
            }, 
            "use_optimized_sampling": {
                "default_value": [
                    true
                ], 
                "houdini_name": "use_optimized_sampling", 
                "help": "optimized sampling of all the hair lobes, results in 2x-4x speedup on average (disables individual hair lobe AOVs). When false, the look may slightly change if using biased techniques like roughness/sample clamping. ", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Optimized Sampling", 
                "moonray_name": "use_optimized_sampling", 
                "order": 31, 
                "aliases": [
                    "use optimized sampling"
                ]
            }, 
            "show_transmission": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_transmission", 
                "help": "show tranmission specular", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Transmission", 
                "moonray_name": "show_transmission", 
                "order": 24, 
                "aliases": [
                    "show transmission"
                ]
            }, 
            "fresnel_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "fresnel_type", 
                "moonray_type": "Int", 
                "menu": [
                    "simple longitudinal", 
                    "dielectric cylinder", 
                    "layered cuticles"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Type", 
                "moonray_name": "fresnel_type", 
                "order": 7
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 34, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 33, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "glint_saturation": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glint_saturation", 
                "help": "secondary specular glint saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Glint Saturation", 
                "bindable": true, 
                "moonray_name": "glint_saturation", 
                "order": 23
            }, 
            "show_secondary_specular": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_secondary_specular", 
                "help": "show secondary specular", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Secondary Specular", 
                "moonray_name": "show_secondary_specular", 
                "order": 13, 
                "aliases": [
                    "show secondary specular"
                ]
            }, 
            "glint_eccentricity": {
                "default_value": [
                    0.85
                ], 
                "houdini_name": "glint_eccentricity", 
                "help": "secondary specular glint eccentricity [0.85, 1], values that deviate from 1 make the hair fiber more elliptical and more glinty", 
                "moonray_type": "Float", 
                "houdini_label": "Glint Eccentricity", 
                "bindable": true, 
                "moonray_name": "glint_eccentricity", 
                "order": 20
            }, 
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 4, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "primary_specular_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "primary_specular_tint", 
                "help": "tint the primary specular highlight with this color (leave white for physical behavior)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "primary_specular_tint", 
                "order": 12, 
                "aliases": [
                    "primary specular tint"
                ]
            }, 
            "direct_transmission_saturation": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "direct_transmission_saturation", 
                "help": "(Non-Physical, Advanced) saturate/desaturate direct transmission highlights.", 
                "moonray_type": "Float", 
                "houdini_label": "Direct Transmission Saturation", 
                "bindable": true, 
                "moonray_name": "direct_transmission_saturation", 
                "order": 30
            }, 
            "use_independent_secondary_specular_roughness": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_independent_secondary_specular_roughness", 
                "help": "when disabled, uses a physically correct value for secondary specular roughness which is linked to the primary specular roughness", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Independent Secondary Specular Roughness", 
                "moonray_name": "use_independent_secondary_specular_roughness", 
                "order": 15, 
                "aliases": [
                    "use independent secondary specular roughness"
                ]
            }, 
            "glint_max_twists": {
                "default_value": [
                    2.5
                ], 
                "houdini_name": "glint_max_twists", 
                "help": "the maximum number of twists along the hair's length. More twists means more glints. Each hair strand will be randomly assigned a twist amount between [min twists, max twists]", 
                "moonray_type": "Float", 
                "houdini_label": "Glint Max Twists", 
                "bindable": true, 
                "moonray_name": "glint_max_twists", 
                "order": 22
            }, 
            "primary_specular_offset": {
                "default_value": [
                    -3.0
                ], 
                "houdini_name": "primary_specular_offset", 
                "help": "offset specular highlight along hair direction (in degrees) [-10,+10], around -3 for human hair", 
                "moonray_type": "Float", 
                "houdini_label": "Offset", 
                "bindable": true, 
                "moonray_name": "primary_specular_offset", 
                "order": 10, 
                "aliases": [
                    "primary specular offset"
                ]
            }, 
            "glint_roughness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glint_roughness", 
                "help": "secondary specular glint roughness", 
                "moonray_type": "Float", 
                "houdini_label": "Glint Roughness", 
                "bindable": true, 
                "moonray_name": "glint_roughness", 
                "order": 19
            }, 
            "independent_secondary_specular_roughness": {
                "default_value": [
                    0.4
                ], 
                "houdini_name": "independent_secondary_specular_roughness", 
                "help": "secondary specular roughness", 
                "moonray_type": "Float", 
                "houdini_label": "Independent Secondary Specular Roughness", 
                "bindable": true, 
                "moonray_name": "independent_secondary_specular_roughness", 
                "order": 16, 
                "aliases": [
                    "independent secondary specular roughness"
                ]
            }, 
            "refractive_index": {
                "default_value": [
                    1.45
                ], 
                "houdini_name": "refractive_index", 
                "help": "keep this value between [1.3,2.0] for realistic behavior (human hair is around 1.55)", 
                "moonray_type": "Float", 
                "houdini_label": "Refractive Index", 
                "moonray_name": "refractive_index", 
                "order": 6, 
                "aliases": [
                    "refractive index"
                ]
            }, 
            "secondary_specular_tint": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "secondary_specular_tint", 
                "help": "tint secondary specular with this color (leave white for physical behavior)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Tint", 
                "bindable": true, 
                "moonray_name": "secondary_specular_tint", 
                "order": 17, 
                "aliases": [
                    "secondary specular tint"
                ]
            }
        }, 
        "folders_with_parms": {
            "Secondary Specular": [
                "show_secondary_specular", 
                "secondary_specular_offset", 
                "use_independent_secondary_specular_roughness", 
                "independent_secondary_specular_roughness", 
                "secondary_specular_tint", 
                "show_hair_glint", 
                "glint_roughness", 
                "glint_eccentricity", 
                "glint_min_twists", 
                "glint_max_twists", 
                "glint_saturation"
            ], 
            "Primary Specular": [
                "show_primary_specular", 
                "primary_specular_offset", 
                "primary_specular_roughness", 
                "primary_specular_tint"
            ], 
            "Transmission": [
                "show_transmission", 
                "transmission_offset", 
                "use_independent_transmission_roughness", 
                "independent_transmission_roughness", 
                "transmission_azimuthal_roughness", 
                "transmission_tint", 
                "direct_transmission_saturation"
            ], 
            "Fresnel": [
                "refractive_index", 
                "fresnel_type", 
                "cuticle_layer_thickness"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Common": [
                "presence", 
                "casts_caustics"
            ], 
            "Advanced": [
                "use_optimized_sampling", 
                "show_multiple_scattering"
            ]
        }
    }, 
    "SceneVariables": {
        "moonray_type": "SceneObject", 
        "moonray_name": "SceneVariables", 
        "folders_sorted": [
            "Frame", 
            "Camera and Layer", 
            "Metadata", 
            "Image Size", 
            "Motion and Scale", 
            "Sampling", 
            "Volumes", 
            "Path Guide", 
            "Fireflies Removal", 
            "Filtering", 
            "Deep Images", 
            "Caching", 
            "Checkpoint", 
            "Resume Render", 
            "Global Toggles", 
            "Driver", 
            "Logging", 
            "Debug"
        ], 
        "parms": {
            "roughness_clamping_factor": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "roughness_clamping_factor", 
                "help": "Clamp material roughness along paths. A value of 1 clamps values to the maximum roughness encountered, while lower values temper the clamping value. 0 disables the effect. Using this technique reduces fireflies from indirect caustics but is biased.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness Clamping Factor", 
                "moonray_name": "roughness_clamping_factor", 
                "order": 49, 
                "aliases": [
                    "roughness clamping factor"
                ]
            }, 
            "sample_clamping_depth": {
                "default_value": [
                    1
                ], 
                "houdini_name": "sample_clamping_depth", 
                "help": "Clamp sample values only after the given non-specular ray depth.", 
                "moonray_type": "Int", 
                "houdini_label": "Sample Clamping Depth", 
                "moonray_name": "sample_clamping_depth", 
                "order": 48, 
                "aliases": [
                    "sample clamping depth"
                ]
            }, 
            "texture_file_handles": {
                "default_value": [
                    24000
                ], 
                "houdini_name": "texture_file_handles", 
                "help": "maximum number of simultaneous open file handles", 
                "moonray_type": "Int", 
                "houdini_label": "Texture File Handles", 
                "moonray_name": "texture_file_handles", 
                "order": 61, 
                "aliases": [
                    "texture file handles"
                ]
            }, 
            "image_height": {
                "default_value": [
                    1080
                ], 
                "houdini_name": "image_height", 
                "moonray_type": "Int", 
                "houdini_label": "Image Height", 
                "moonray_name": "image_height", 
                "order": 8, 
                "aliases": [
                    "image height"
                ]
            }, 
            "enable_presence_shadows": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_presence_shadows", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Presence Shadows", 
                "moonray_name": "enable_presence_shadows", 
                "order": 87, 
                "aliases": [
                    "enable presence shadows"
                ]
            }, 
            "deep_max_layers": {
                "default_value": [
                    1
                ], 
                "houdini_name": "deep_max_layers", 
                "help": "Maximum number of depth layers to output", 
                "moonray_type": "Int", 
                "houdini_label": "Deep Max Layers", 
                "moonray_name": "deep_max_layers", 
                "order": 58, 
                "aliases": [
                    "deep max layers"
                ]
            }, 
            "max_glossy_depth": {
                "default_value": [
                    2
                ], 
                "houdini_name": "max_glossy_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Glossy Depth", 
                "moonray_name": "max_glossy_depth", 
                "order": 27, 
                "aliases": [
                    "max glossy depth"
                ]
            }, 
            "checkpoint_bg_write": {
                "default_value": [
                    true
                ], 
                "houdini_name": "checkpoint_bg_write", 
                "help": "If true, the checkpoint file write is written in a background thread that runs in parallel with the MCRT threads. Otherwise, all MCRT threads wait while the checkpoint file is written.", 
                "moonray_type": "Bool", 
                "houdini_label": "Checkpoint Bg Write", 
                "moonray_name": "checkpoint_bg_write", 
                "order": 71, 
                "aliases": [
                    "checkpoint bg write"
                ]
            }, 
            "checkpoint_total_files": {
                "default_value": [
                    0
                ], 
                "houdini_name": "checkpoint_total_files", 
                "help": "Specify total number of checkpoint files for quality based checkpoint mode.This variable is a substitute parameter of checkpoint_quality_steps.If this value is 0 (= default), the checkpoint generation interval is controlled by checkpoint_quality_steps variable. If this value is 1 or bigger, checkpoint generation interval is calculated based on this value and the renderer tries to generate a user defined number of checkpoint files automatically.This option respects the checkpoint_start_sample variable.In some cases, the renderer might not create the requested checkpoint_total_files due to current limitation of internal implementation or user specified bigger than 1 for checkpoint_start_sample variable. However even in that case, the renderer tries to create the closest number of total checkpoint files which user defined number as checkpoint_total_files.", 
                "moonray_type": "Int", 
                "houdini_label": "Checkpoint Total Files", 
                "moonray_name": "checkpoint_total_files", 
                "order": 73, 
                "aliases": [
                    "checkpoint total files"
                ]
            }, 
            "volume_phase_attenuation_factor": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "volume_phase_attenuation_factor", 
                "help": "Controls how phase function (anisotropy) gets exponentially scaled down when rendering multiple scattering volumes. This variable is only effective when \"max volume depth\" is greater than 1", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Phase Attenuation Factor", 
                "moonray_name": "volume_phase_attenuation_factor", 
                "order": 45, 
                "aliases": [
                    "volume phase attenuation factor"
                ]
            }, 
            "output_file": {
                "default_value": [
                    "scene.exr"
                ], 
                "houdini_name": "output_file", 
                "help": "This specifies the output path for the beauty image (RGBA). This is independent of the AOV RenderOutputs, which can also write a beauty image.", 
                "moonray_type": "String", 
                "houdini_label": "Output File", 
                "moonray_name": "output_file", 
                "order": 100, 
                "aliases": [
                    "output file"
                ]
            }, 
            "batch_tile_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "batch_tile_order", 
                "moonray_type": "Int", 
                "menu": [
                    "top", 
                    "bottom", 
                    "left", 
                    "right", 
                    "morton", 
                    "random", 
                    "spiral square", 
                    "spiral rect"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Batch Tile Order", 
                "moonray_name": "batch_tile_order", 
                "order": 97, 
                "aliases": [
                    "batch tile order"
                ]
            }, 
            "validate_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "validate_geometry", 
                "help": "Checks geometry for bad data", 
                "moonray_type": "Bool", 
                "houdini_label": "Validate Geometry", 
                "moonray_name": "validate_geometry", 
                "order": 115, 
                "aliases": [
                    "validate geometry"
                ]
            }, 
            "max_presence_depth": {
                "default_value": [
                    16
                ], 
                "houdini_name": "max_presence_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Presence Depth", 
                "moonray_name": "max_presence_depth", 
                "order": 30, 
                "aliases": [
                    "max presence depth"
                ]
            }, 
            "pixel_samples": {
                "default_value": [
                    8
                ], 
                "houdini_name": "pixel_samples", 
                "help": "The square root of the number of primary samples taken for each pixel in uniform sampling mode. For example, a value of 4 will result in 4*4 = 16 uniform pixel samples.", 
                "moonray_type": "Int", 
                "houdini_label": "Pixel Samples", 
                "moonray_name": "pixel_samples", 
                "order": 20, 
                "aliases": [
                    "pixel samples"
                ]
            }, 
            "sample_clamping_value": {
                "default_value": [
                    10.0
                ], 
                "houdini_name": "sample_clamping_value", 
                "help": "Clamp sample radiance values to this maximum value (the feature is disabled if the value is 0.0). Using this technique reduces fireflies, but is biased.", 
                "moonray_type": "Float", 
                "houdini_label": "Sample Clamping Value", 
                "moonray_name": "sample_clamping_value", 
                "order": 47, 
                "aliases": [
                    "sample clamping value"
                ]
            }, 
            "max_diffuse_depth": {
                "default_value": [
                    2
                ], 
                "houdini_name": "max_diffuse_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Diffuse Depth", 
                "moonray_name": "max_diffuse_depth", 
                "order": 26, 
                "aliases": [
                    "max diffuse depth"
                ]
            }, 
            "max_hair_depth": {
                "default_value": [
                    5
                ], 
                "houdini_name": "max_hair_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Hair Depth", 
                "moonray_name": "max_hair_depth", 
                "order": 31
            }, 
            "on_resume_script": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "on_resume_script", 
                "help": "Define on-resume lua script name. This script is loaded into the renderer just after renderPrep execution under resume render mode then executed. This script is not executed if non-resume render mode even if you set script name.Renderer sets some lua global variables and lua script can access them. We can get resume render start condition (true=properly started or false=failed to start as resume render and fall back to normal rendering) via lua global variable. See details in rendering-wiki checkpoint/resume page. If empty, on-resume script execution is disabled.", 
                "moonray_type": "String", 
                "houdini_label": "On Resume Script", 
                "moonray_name": "on_resume_script", 
                "order": 79, 
                "aliases": [
                    "on resume script"
                ]
            }, 
            "correct_reflections_in_medium": {
                "default_value": [
                    false
                ], 
                "houdini_name": "correct_reflections_in_medium", 
                "help": "Temporary toggle to turn on a bug fix that corrects reflections that occur within a medium.", 
                "moonray_type": "Bool", 
                "houdini_label": "Correct Reflections In Medium", 
                "moonray_name": "correct_reflections_in_medium", 
                "order": 116, 
                "aliases": [
                    "correct reflections in medium"
                ]
            }, 
            "athena_debug": {
                "default_value": [
                    false
                ], 
                "houdini_name": "athena_debug", 
                "moonray_type": "Bool", 
                "houdini_label": "Athena Debug", 
                "moonray_name": "athena_debug", 
                "order": 109, 
                "aliases": [
                    "athena debug"
                ]
            }, 
            "enable_dof": {
                "default_value": [
                    true
                ], 
                "houdini_name": "enable_dof", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Dof", 
                "moonray_name": "enable_dof", 
                "order": 81, 
                "aliases": [
                    "enable DOF"
                ]
            }, 
            "debug_console": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "debug_console", 
                "help": "Specify port number for debug console. If you set -1 (=default), all debug console functionalities are disabled. If you set 0 or positive port number, debug console functionalities are enabled. If enabled, we can send commands via telnet connection and control rendering behavior for debugging purposes. If you set 0, the kernel finds the available port for you and displays the port number to the cerr. Otherwise you have to set the available port number yourself.", 
                "moonray_type": "Int", 
                "houdini_label": "Debug Console", 
                "moonray_name": "debug_console", 
                "order": 114, 
                "aliases": [
                    "debug console"
                ]
            }, 
            "debug_rays_primary_range": {
                "default_value": [
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "debug_rays_primary_range", 
                "moonray_type": "IntVector", 
                "houdini_label": "Debug Rays Primary Range", 
                "moonray_name": "debug_rays_primary_range", 
                "order": 112, 
                "aliases": [
                    "debug rays primary range"
                ]
            }, 
            "path_guide_enable": {
                "default_value": [
                    false
                ], 
                "houdini_name": "path_guide_enable", 
                "help": "Turn on path guiding to handle difficult light transport problems (e.g. caustics) at the cost of increased memory", 
                "moonray_type": "Bool", 
                "houdini_label": "Path Guide Enable", 
                "moonray_name": "path_guide_enable", 
                "order": 46
            }, 
            "deep_curvature_tolerance": {
                "default_value": [
                    45.0
                ], 
                "houdini_name": "deep_curvature_tolerance", 
                "help": "Maximum curvature (in degrees) of the deep surface within a pixel before it is split", 
                "moonray_type": "Float", 
                "houdini_label": "Deep Curvature Tolerance", 
                "moonray_name": "deep_curvature_tolerance", 
                "order": 54, 
                "aliases": [
                    "deep curvature tolerance"
                ]
            }, 
            "transparency_threshold": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "transparency_threshold", 
                "help": "Defines at which point the accumulated opacity can be considered as opaque, skipping generation of new transparency rays.", 
                "moonray_type": "Float", 
                "houdini_label": "Transparency Threshold", 
                "moonray_name": "transparency_threshold", 
                "order": 35, 
                "aliases": [
                    "transparency threshold"
                ]
            }, 
            "pixel_filter_width": {
                "default_value": [
                    3.0
                ], 
                "houdini_name": "pixel_filter_width", 
                "help": "The overall extents, in pixels, of the pixel filter. Larger values will result in softer images.", 
                "moonray_type": "Float", 
                "houdini_label": "Pixel Filter Width", 
                "moonray_name": "pixel_filter_width", 
                "order": 51, 
                "aliases": [
                    "pixel filter width"
                ]
            }, 
            "debug": {
                "default_value": [
                    false
                ], 
                "houdini_name": "debug", 
                "moonray_type": "Bool", 
                "houdini_label": "Debug", 
                "moonray_name": "debug", 
                "order": 103
            }, 
            "machine_id": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "machine_id", 
                "moonray_type": "Int", 
                "houdini_label": "Machine Id", 
                "moonray_name": "machine_id", 
                "order": 92, 
                "aliases": [
                    "machine id"
                ]
            }, 
            "checkpoint_interval": {
                "default_value": [
                    15.0
                ], 
                "houdini_name": "checkpoint_interval", 
                "help": "Length of time, in minutes, between checkpoint file writes. Time must be greater or equal to 0.1", 
                "moonray_type": "Float", 
                "houdini_label": "Checkpoint Interval", 
                "moonray_name": "checkpoint_interval", 
                "order": 64, 
                "aliases": [
                    "checkpoint interval"
                ]
            }, 
            "task_distribution_type": {
                "default_value": [
                    1
                ], 
                "houdini_name": "task_distribution_type", 
                "moonray_type": "Int", 
                "menu": [
                    "non-overlapped tile", 
                    "multiplex pixel"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Task Distribution Type", 
                "moonray_name": "task_distribution_type", 
                "order": 94
            }, 
            "debug_rays_depth_range": {
                "default_value": [
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "debug_rays_depth_range", 
                "moonray_type": "IntVector", 
                "houdini_label": "Debug Rays Depth Range", 
                "moonray_name": "debug_rays_depth_range", 
                "order": 113, 
                "aliases": [
                    "debug rays depth range"
                ]
            }, 
            "volume_overlap_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "volume_overlap_mode", 
                "help": "Selects how to handle contributions from overlapping volumes:\n\t\tsum: add contributions from all volumes\n\t\tmax: only consider maximum volume based on extinction\n\t\trnd: randomly choose one value weighted by extinction\n\t\tWarning: light linking does not work correctly in sum mode.", 
                "moonray_type": "Int", 
                "menu": [
                    "sum", 
                    "max", 
                    "rnd"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Volume Overlap Mode", 
                "moonray_name": "volume_overlap_mode", 
                "order": 42
            }, 
            "pixel_filter": {
                "default_value": [
                    1
                ], 
                "houdini_name": "pixel_filter", 
                "help": "The type of filter used for filter importance sampling. A box filter with a width of 1 is analogous to disabling pixel filtering.", 
                "moonray_type": "Int", 
                "menu": [
                    "box", 
                    "cubic b-spline", 
                    "quadratic b-spline"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Pixel Filter", 
                "moonray_name": "pixel_filter", 
                "order": 52, 
                "aliases": [
                    "pixel filter"
                ]
            }, 
            "lights_visible_in_camera": {
                "default_value": [
                    false
                ], 
                "houdini_name": "lights_visible_in_camera", 
                "moonray_type": "Bool", 
                "houdini_label": "Lights Visible In Camera", 
                "moonray_name": "lights_visible_in_camera", 
                "order": 88, 
                "aliases": [
                    "lights visible in camera"
                ]
            }, 
            "frame": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "frame", 
                "moonray_type": "Float", 
                "houdini_label": "Frame", 
                "moonray_name": "frame", 
                "order": 2
            }, 
            "debug_pixel": {
                "default_value": [
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "debug_pixel", 
                "moonray_type": "IntVector", 
                "houdini_label": "Debug Pixel", 
                "moonray_name": "debug_pixel", 
                "order": 110, 
                "aliases": [
                    "debug pixel"
                ]
            }, 
            "texture_cache_size": {
                "default_value": [
                    4000
                ], 
                "houdini_name": "texture_cache_size", 
                "help": "size is in Mb and this is the maximum cache size", 
                "moonray_type": "Int", 
                "houdini_label": "Texture Cache Size", 
                "moonray_name": "texture_cache_size", 
                "order": 60, 
                "aliases": [
                    "texture cache size"
                ]
            }, 
            "max_adaptive_samples": {
                "default_value": [
                    4096
                ], 
                "houdini_name": "max_adaptive_samples", 
                "help": "When adaptive sampling is turned on, this represents the max number of samples we can throw at a pixel. It's best to err on the high side since adaptive sampling will cull out samples where they're not needed based on the target adaptive error, in which case we should rarely hit the max samples value.", 
                "moonray_type": "Int", 
                "houdini_label": "Max Adaptive Samples", 
                "moonray_name": "max_adaptive_samples", 
                "order": 18, 
                "aliases": [
                    "max adaptive samples"
                ]
            }, 
            "min_adaptive_samples": {
                "default_value": [
                    16
                ], 
                "houdini_name": "min_adaptive_samples", 
                "help": "When adaptive sampling is turned on, it's possible that a tile may be mis-classified as having converged before it has actually converged. This manifests itself as square 8x8 artifacts in the final image. The higher this value, the less the chance of this happening.", 
                "moonray_type": "Int", 
                "houdini_label": "Min Adaptive Samples", 
                "moonray_name": "min_adaptive_samples", 
                "order": 17, 
                "aliases": [
                    "min adaptive samples"
                ]
            }, 
            "disable_optimized_hair_sampling": {
                "default_value": [
                    false
                ], 
                "houdini_name": "disable_optimized_hair_sampling", 
                "help": "Forces all hair materials to sample each hair BSDF lobe independently. This will enable the LPE label syntax for 'hair R', 'hair TT', 'hair TRT' and 'hair TRRT ' but will result in slower rendering", 
                "moonray_type": "Bool", 
                "houdini_label": "Disable Optimized Hair Sampling", 
                "moonray_name": "disable_optimized_hair_sampling", 
                "order": 32
            }, 
            "checkpoint_time_cap": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "checkpoint_time_cap", 
                "help": "When total render process time exceeds this value, in minutes, the render will finish after the next checkpoint write. Disabled time cap feature when set to 0.", 
                "moonray_type": "Float", 
                "houdini_label": "Checkpoint Time Cap", 
                "moonray_name": "checkpoint_time_cap", 
                "order": 66, 
                "aliases": [
                    "checkpoint time cap"
                ]
            }, 
            "bsdf_samples": {
                "default_value": [
                    2
                ], 
                "houdini_name": "bsdf_samples", 
                "moonray_type": "Int", 
                "houdini_label": "Bsdf Samples", 
                "moonray_name": "bsdf_samples", 
                "order": 22, 
                "aliases": [
                    "bsdf samples"
                ]
            }, 
            "res": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "res", 
                "moonray_type": "Float", 
                "houdini_label": "Res", 
                "moonray_name": "res", 
                "order": 9
            }, 
            "volume_attenuation_factor": {
                "default_value": [
                    0.65
                ], 
                "houdini_name": "volume_attenuation_factor", 
                "help": "Controls how volume attenuation gets exponentially scaled down when rendering multiple scattering volumes. Dialing down the value generally results in more translucent look. This variable is only effective when \"max volume depth\" is greater than 1", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Attenuation Factor", 
                "moonray_name": "volume_attenuation_factor", 
                "order": 43, 
                "aliases": [
                    "volume attenuation factor"
                ]
            }, 
            "debug_rays_file": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "debug_rays_file", 
                "moonray_type": "String", 
                "houdini_label": "Debug Rays File", 
                "moonray_name": "debug_rays_file", 
                "order": 111, 
                "aliases": [
                    "debug rays file"
                ]
            }, 
            "resumable_output": {
                "default_value": [
                    false
                ], 
                "houdini_name": "resumable_output", 
                "help": "make aov output as resumable for resume render", 
                "moonray_type": "Bool", 
                "houdini_label": "Resumable Output", 
                "moonray_name": "resumable_output", 
                "order": 77, 
                "aliases": [
                    "resumable output"
                ]
            }, 
            "interactive_mode": {
                "default_value": [
                    false
                ], 
                "houdini_name": "interactive_mode", 
                "moonray_type": "Bool", 
                "houdini_label": "Interactive Mode", 
                "moonray_name": "interactive_mode", 
                "order": 95, 
                "aliases": [
                    "interactive mode"
                ]
            }, 
            "stats_file": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "stats_file", 
                "moonray_type": "String", 
                "houdini_label": "Stats File", 
                "moonray_name": "stats_file", 
                "order": 108, 
                "aliases": [
                    "stats file"
                ]
            }, 
            "max_subsurface_per_path": {
                "default_value": [
                    1
                ], 
                "houdini_name": "max_subsurface_per_path", 
                "moonray_type": "Int", 
                "houdini_label": "Max Subsurface Per Path", 
                "moonray_name": "max_subsurface_per_path", 
                "order": 33
            }, 
            "tmp_dir": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "tmp_dir", 
                "help": "Define temporary directory name for temporary file generation. Use $TMPDIR environment variable value if this variable is empty.If $TMPDIR is also empty, use /tmp", 
                "moonray_type": "String", 
                "houdini_label": "Tmp Dir", 
                "moonray_name": "tmp_dir", 
                "order": 101, 
                "aliases": [
                    "tmp dir"
                ]
            }, 
            "fatal_color": {
                "default_value": [
                    1.0, 
                    0.0, 
                    1.0
                ], 
                "houdini_name": "fatal_color", 
                "moonray_type": "Rgb", 
                "houdini_label": "Fatal Color", 
                "moonray_name": "fatal_color", 
                "order": 107, 
                "aliases": [
                    "fatal color"
                ]
            }, 
            "num_machines": {
                "default_value": [
                    -1
                ], 
                "houdini_name": "num_machines", 
                "moonray_type": "Int", 
                "houdini_label": "Num Machines", 
                "moonray_name": "num_machines", 
                "order": 93, 
                "aliases": [
                    "num machines"
                ]
            }, 
            "error": {
                "default_value": [
                    true
                ], 
                "houdini_name": "error", 
                "moonray_type": "Bool", 
                "houdini_label": "Error", 
                "moonray_name": "error", 
                "order": 106
            }, 
            "deep_format": {
                "default_value": [
                    1
                ], 
                "houdini_name": "deep_format", 
                "help": "Deep image format:\n\t\topenexr2.0: vanilla OpenEXR deep\n\t\topendcx2.0: DCX abuffer mask encoding", 
                "moonray_type": "Int", 
                "menu": [
                    "openexr2.0", 
                    "opendcx2.0"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Deep Format", 
                "moonray_name": "deep_format", 
                "order": 53, 
                "aliases": [
                    "deep format"
                ]
            }, 
            "deep_z_tolerance": {
                "default_value": [
                    2.0
                ], 
                "houdini_name": "deep_z_tolerance", 
                "help": "Maximum range of the deep surface's Z values within a pixel before it is split", 
                "moonray_type": "Float", 
                "houdini_label": "Deep Z Tolerance", 
                "moonray_name": "deep_z_tolerance", 
                "order": 55, 
                "aliases": [
                    "deep z tolerance"
                ]
            }, 
            "checkpoint_quality_steps": {
                "default_value": [
                    2
                ], 
                "houdini_name": "checkpoint_quality_steps", 
                "help": "Steps of quality, internal sampling iteration count, between checkpoint file writes. Value should be equal or bigger than 1. Uniform sampling case, this steps number is equivalent as each pixel's pixel sampling steps. If you set quality steps=2, checkpoint file is created at every timing of each pixel's sample count exceeds at 2, 4, 6, 8, 10, ... Adaptive sampling case, this steps number is equivalent as internal adaptive sampling iteration steps. Recommended number is 1~3 range. You can use more than 4 but bigger number always require longer rendering time. If you set 2, checkpoint file is created after finish every 2 adaptive sampling iteration execution.", 
                "moonray_type": "Int", 
                "houdini_label": "Checkpoint Quality Steps", 
                "moonray_name": "checkpoint_quality_steps", 
                "order": 65, 
                "aliases": [
                    "checkpoint quality steps"
                ]
            }, 
            "shadow_terminator_fix": {
                "default_value": [
                    0
                ], 
                "houdini_name": "shadow_terminator_fix", 
                "help": "Attempt to soften hard shadow terminator boundaries due to shading/geometric normal deviations.  \"ON uses a custom terminator softening method. Cosine Compensation\" is Chiang's 2019 SIGGRAPH technique.  \"GGX\" is Estevez's raytracing gems technique.  \"Sine Compensation\" is a sine based modification of Chiang's method. Different scenes may work better with different techniques.  The recommendation is to start with the custom compensation ON, then sine compensation technique, then GGX, then cosine.", 
                "moonray_type": "Int", 
                "menu": [
                    "Off", 
                    "On", 
                    "On (Sine Compensation Alternative)", 
                    "On (GGX Compensation Alternative)", 
                    "On (Cosine Compensation Alternative"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4"
                ], 
                "houdini_label": "Shadow Terminator Fix", 
                "moonray_name": "shadow_terminator_fix", 
                "order": 90
            }, 
            "russian_roulette_threshold": {
                "default_value": [
                    0.0375
                ], 
                "houdini_name": "russian_roulette_threshold", 
                "moonray_type": "Float", 
                "houdini_label": "Russian Roulette Threshold", 
                "moonray_name": "russian_roulette_threshold", 
                "order": 34, 
                "aliases": [
                    "russian roulette threshold"
                ]
            }, 
            "threads": {
                "default_value": [
                    0
                ], 
                "houdini_name": "threads", 
                "moonray_type": "Int", 
                "houdini_label": "Threads", 
                "moonray_name": "threads", 
                "order": 91
            }, 
            "motion_steps": {
                "default_value": [
                    -1.0, 
                    0.0
                ], 
                "houdini_name": "motion_steps", 
                "help": "frame-relative time offsets for motion sampling", 
                "moonray_type": "FloatVector", 
                "houdini_label": "Motion Steps", 
                "moonray_name": "motion_steps", 
                "order": 13, 
                "aliases": [
                    "motion steps"
                ]
            }, 
            "checkpoint_snapshot_interval": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "checkpoint_snapshot_interval", 
                "help": "Interval of time in minutes, about snapshot refreshment regarding interruption by SIGINT. Unit is minute. If this value is ZERO or negative, checkpoint_max_snapshot_overhead parameter is used instead.", 
                "moonray_type": "Float", 
                "houdini_label": "Checkpoint Snapshot Interval", 
                "moonray_name": "checkpoint_snapshot_interval", 
                "order": 76, 
                "aliases": [
                    "checkpoint snapshot interval"
                ]
            }, 
            "enable_subsurface_scattering": {
                "default_value": [
                    true
                ], 
                "houdini_name": "enable_subsurface_scattering", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Subsurface Scattering", 
                "moonray_name": "enable_subsurface_scattering", 
                "order": 85, 
                "aliases": [
                    "enable subsurface scattering"
                ]
            }, 
            "checkpoint_max_bgcache": {
                "default_value": [
                    2
                ], 
                "houdini_name": "checkpoint_max_bgcache", 
                "help": "Specify the maximum number of queued checkpoint images that the checkpoint-writing background thread can handle. The value of checkpoint_max_bgcache must be greater than or equal to 1. Once this number is exceeded, the MCRT threads are suspended while background images are written to create room in the queue. A larger number can robustly support background writing even with short checkpoint intervals at the expense of memory. A value of 2 is best for most cases.", 
                "moonray_type": "Int", 
                "houdini_label": "Checkpoint Max Bgcache", 
                "moonray_name": "checkpoint_max_bgcache", 
                "order": 74, 
                "aliases": [
                    "checkpoint max bgcache"
                ]
            }, 
            "checkpoint_sample_cap": {
                "default_value": [
                    0
                ], 
                "houdini_name": "checkpoint_sample_cap", 
                "help": "When total pixel sample count exceeds this value at every pixel (If you set 1024, each pixel exceeds 1024, then try to finish), the render will finish after the next checkpoint write. Disabled sample cap feature when set to 0.", 
                "moonray_type": "Int", 
                "houdini_label": "Checkpoint Sample Cap", 
                "moonray_name": "checkpoint_sample_cap", 
                "order": 67, 
                "aliases": [
                    "checkpoint sample cap"
                ]
            }, 
            "enable_shadowing": {
                "default_value": [
                    true
                ], 
                "houdini_name": "enable_shadowing", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Shadowing", 
                "moonray_name": "enable_shadowing", 
                "order": 86, 
                "aliases": [
                    "enable shadowing"
                ]
            }, 
            "fast_geometry_update": {
                "default_value": [
                    false
                ], 
                "houdini_name": "fast_geometry_update", 
                "moonray_type": "Bool", 
                "houdini_label": "Fast Geometry Update", 
                "moonray_name": "fast_geometry_update", 
                "order": 62, 
                "aliases": [
                    "fast geometry update"
                ]
            }, 
            "resume_render": {
                "default_value": [
                    false
                ], 
                "houdini_name": "resume_render", 
                "help": "resuming render process", 
                "moonray_type": "Bool", 
                "houdini_label": "Resume Render", 
                "moonray_name": "resume_render", 
                "order": 78, 
                "aliases": [
                    "resume render"
                ]
            }, 
            "progressive_shading": {
                "default_value": [
                    false
                ], 
                "houdini_name": "progressive_shading", 
                "moonray_type": "Bool", 
                "houdini_label": "Progressive Shading", 
                "moonray_name": "progressive_shading", 
                "order": 96, 
                "aliases": [
                    "progressive shading"
                ]
            }, 
            "deep_layer_bias": {
                "default_value": [
                    0.1
                ], 
                "houdini_name": "deep_layer_bias", 
                "help": "Minimum distance between deep layers", 
                "moonray_type": "Float", 
                "houdini_label": "Deep Layer Bias", 
                "moonray_name": "deep_layer_bias", 
                "order": 59, 
                "aliases": [
                    "deep layer bias"
                ]
            }, 
            "image_width": {
                "default_value": [
                    1920
                ], 
                "houdini_name": "image_width", 
                "moonray_type": "Int", 
                "houdini_label": "Image Width", 
                "moonray_name": "image_width", 
                "order": 7, 
                "aliases": [
                    "image width"
                ]
            }, 
            "camera": {
                "default_value": [], 
                "houdini_name": "camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Camera", 
                "interface": "Camera", 
                "moonray_name": "camera", 
                "order": 3
            }, 
            "max_mirror_depth": {
                "default_value": [
                    3
                ], 
                "houdini_name": "max_mirror_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Mirror Depth", 
                "moonray_name": "max_mirror_depth", 
                "order": 28, 
                "aliases": [
                    "max mirror depth"
                ]
            }, 
            "max_depth": {
                "default_value": [
                    5
                ], 
                "houdini_name": "max_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Depth", 
                "moonray_name": "max_depth", 
                "order": 25, 
                "aliases": [
                    "max depth"
                ]
            }, 
            "volume_contribution_factor": {
                "default_value": [
                    0.65
                ], 
                "houdini_name": "volume_contribution_factor", 
                "help": "Controls how scattering contribution gets exponentially scaled down when rendering multiple scattering volumes. Dialing down the value generally results in a darker volume scattering look. This variable is only effective when \"max volume depth\" is greater than 1", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Contribution Factor", 
                "moonray_name": "volume_contribution_factor", 
                "order": 44, 
                "aliases": [
                    "volume contribution factor"
                ]
            }, 
            "region_window": {
                "default_value": [
                    -2147483648, 
                    -2147483648, 
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "region_window", 
                "help": "Window that is rendered. Overrides image width / height (and overrides aperture window override). Order: xmin ymin xmax ymax, with origin at left bottom.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Region Window", 
                "moonray_name": "region_window", 
                "order": 11, 
                "aliases": [
                    "region window"
                ]
            }, 
            "checkpoint_start_sample": {
                "default_value": [
                    1
                ], 
                "houdini_name": "checkpoint_start_sample", 
                "help": "Specify samples per pixel (SPP) number. Checkpoint file is created when all pixel's SPP are same or bigger than this number. Until then, checkpoint file is not created.", 
                "moonray_type": "Int", 
                "houdini_label": "Checkpoint Start Sample", 
                "moonray_name": "checkpoint_start_sample", 
                "order": 70, 
                "aliases": [
                    "checkpoint start sample"
                ]
            }, 
            "checkpoint_active": {
                "default_value": [
                    false
                ], 
                "houdini_name": "checkpoint_active", 
                "moonray_type": "Bool", 
                "houdini_label": "Checkpoint Active", 
                "moonray_name": "checkpoint_active", 
                "order": 63, 
                "aliases": [
                    "checkpoint active"
                ]
            }, 
            "info": {
                "default_value": [
                    false
                ], 
                "houdini_name": "info", 
                "moonray_type": "Bool", 
                "houdini_label": "Info", 
                "moonray_name": "info", 
                "order": 104
            }, 
            "enable_displacement": {
                "default_value": [
                    true
                ], 
                "houdini_name": "enable_displacement", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Displacement", 
                "moonray_name": "enable_displacement", 
                "order": 84, 
                "aliases": [
                    "enable displacement"
                ]
            }, 
            "max_geometry_resolution": {
                "default_value": [
                    2147483647
                ], 
                "houdini_name": "max_geometry_resolution", 
                "moonray_type": "Int", 
                "houdini_label": "Max Geometry Resolution", 
                "moonray_name": "max_geometry_resolution", 
                "order": 83, 
                "aliases": [
                    "max geometry resolution"
                ]
            }, 
            "target_adaptive_error": {
                "default_value": [
                    10.0
                ], 
                "houdini_name": "target_adaptive_error", 
                "help": "When adaptive sampling is turned on, this represents the desired quality of the output images. Lower values will give higher quality but take longer to render. Higher values will give lower quality but render quicker.", 
                "moonray_type": "Float", 
                "houdini_label": "Target Adaptive Error", 
                "moonray_name": "target_adaptive_error", 
                "order": 19, 
                "aliases": [
                    "target adaptive error"
                ]
            }, 
            "exr_header_attributes": {
                "default_value": [], 
                "houdini_name": "exr_header_attributes", 
                "help": "Metadata that is passed directly to the exr header. Format: {\"name\", \"type\", \"value\"}", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Exr Header Attributes", 
                "interface": "Metadata", 
                "moonray_name": "exr_header_attributes", 
                "order": 6, 
                "aliases": [
                    "exr header attributes"
                ]
            }, 
            "min_frame": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "min_frame", 
                "moonray_type": "Float", 
                "houdini_label": "Min Frame", 
                "moonray_name": "min_frame", 
                "order": 0, 
                "aliases": [
                    "min frame"
                ]
            }, 
            "lock_frame_noise": {
                "default_value": [
                    false
                ], 
                "houdini_name": "lock_frame_noise", 
                "moonray_type": "Bool", 
                "houdini_label": "Lock Frame Noise", 
                "moonray_name": "lock_frame_noise", 
                "order": 37, 
                "aliases": [
                    "lock frame noise"
                ]
            }, 
            "sampling_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "sampling_mode", 
                "help": "Controls which sampling scheme to use: uniform or adaptive.", 
                "moonray_type": "Int", 
                "menu": [
                    "uniform", 
                    "adaptive"
                ], 
                "menu_values": [
                    "0", 
                    "2"
                ], 
                "houdini_label": "Sampling Mode", 
                "moonray_name": "sampling_mode", 
                "order": 16, 
                "aliases": [
                    "sampling mode"
                ]
            }, 
            "checkpoint_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "checkpoint_mode", 
                "help": "Select whether checkpoint images are written depending on time elapsed or on quality reached.", 
                "moonray_type": "Int", 
                "menu": [
                    "time", 
                    "quality"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Checkpoint Mode", 
                "moonray_name": "checkpoint_mode", 
                "order": 69, 
                "aliases": [
                    "checkpoint mode"
                ]
            }, 
            "dicing_camera": {
                "default_value": [], 
                "houdini_name": "dicing_camera", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Dicing Camera", 
                "interface": "Camera", 
                "moonray_name": "dicing_camera", 
                "order": 4
            }, 
            "layer": {
                "default_value": [], 
                "houdini_name": "layer", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Layer", 
                "interface": "Layer", 
                "moonray_name": "layer", 
                "order": 5
            }, 
            "texture_blur": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "texture_blur", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Blur", 
                "moonray_name": "texture_blur", 
                "order": 50, 
                "aliases": [
                    "texture blur"
                ]
            }, 
            "warning": {
                "default_value": [
                    true
                ], 
                "houdini_name": "warning", 
                "moonray_type": "Bool", 
                "houdini_label": "Warning", 
                "moonray_name": "warning", 
                "order": 105
            }, 
            "enable_motion_blur": {
                "default_value": [
                    true
                ], 
                "houdini_name": "enable_motion_blur", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Motion Blur", 
                "moonray_name": "enable_motion_blur", 
                "order": 80, 
                "aliases": [
                    "enable motion blur"
                ]
            }, 
            "progressive_tile_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "progressive_tile_order", 
                "moonray_type": "Int", 
                "menu": [
                    "top", 
                    "bottom", 
                    "left", 
                    "right", 
                    "morton", 
                    "random", 
                    "spiral square", 
                    "spiral rect"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Progressive Tile Order", 
                "moonray_name": "progressive_tile_order", 
                "order": 98, 
                "aliases": [
                    "progressive tile order"
                ]
            }, 
            "scene_scale": {
                "default_value": [
                    0.01
                ], 
                "houdini_name": "scene_scale", 
                "help": "(in meters): one unit in world space = 'scene scale' meters", 
                "moonray_type": "Float", 
                "houdini_label": "Scene Scale", 
                "moonray_name": "scene_scale", 
                "order": 15, 
                "aliases": [
                    "scene scale"
                ]
            }, 
            "light_samples": {
                "default_value": [
                    2
                ], 
                "houdini_name": "light_samples", 
                "moonray_type": "Int", 
                "houdini_label": "Light Samples", 
                "moonray_name": "light_samples", 
                "order": 21, 
                "aliases": [
                    "light samples"
                ]
            }, 
            "aperture_window": {
                "default_value": [
                    -2147483648, 
                    -2147483648, 
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "aperture_window", 
                "help": "The window of the camera aperture. Overrides image_width and image_height. Ordered as xmin, ymin, xmax, and ymax, with origin at the bottom-left.", 
                "moonray_type": "IntVector", 
                "houdini_label": "Aperture Window", 
                "moonray_name": "aperture_window", 
                "order": 10, 
                "aliases": [
                    "aperture window"
                ]
            }, 
            "presence_threshold": {
                "default_value": [
                    0.999
                ], 
                "houdini_name": "presence_threshold", 
                "help": "Defines at which point the accumulated presence can be considered as opaque, skipping generation of presence continuation rays.", 
                "moonray_type": "Float", 
                "houdini_label": "Presence Threshold", 
                "moonray_name": "presence_threshold", 
                "order": 36, 
                "aliases": [
                    "presence threshold"
                ]
            }, 
            "bsdf_sampler_strategy": {
                "default_value": [
                    0
                ], 
                "houdini_name": "bsdf_sampler_strategy", 
                "help": "Indirect sampling and evaluation strategy: all lobes using one path segment per lobe (multi-sample), all lobes using one shared path segment (one-sample), or one lobe.", 
                "moonray_type": "Int", 
                "menu": [
                    "multi-sample", 
                    "one-sample", 
                    "one-lobe"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2"
                ], 
                "houdini_label": "Bsdf Sampler Strategy", 
                "moonray_name": "bsdf_sampler_strategy", 
                "order": 23
            }, 
            "fps": {
                "default_value": [
                    24.0
                ], 
                "houdini_name": "fps", 
                "moonray_type": "Float", 
                "houdini_label": "Fps", 
                "moonray_name": "fps", 
                "order": 14
            }, 
            "deep_vol_compression_res": {
                "default_value": [
                    10
                ], 
                "houdini_name": "deep_vol_compression_res", 
                "help": "Volume opacity compression resolution.  Lower values gives higher compression.", 
                "moonray_type": "Int", 
                "houdini_label": "Deep Vol Compression Res", 
                "moonray_name": "deep_vol_compression_res", 
                "order": 56, 
                "aliases": [
                    "deep vol compression res"
                ]
            }, 
            "volume_shadow_quality": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "volume_shadow_quality", 
                "help": "Controls the quality of volume shadow (transmittance). The higher number gives more accurate volume shadow.", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Shadow Quality", 
                "moonray_name": "volume_shadow_quality", 
                "order": 39, 
                "aliases": [
                    "volume shadow quality"
                ]
            }, 
            "max_frame": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "max_frame", 
                "moonray_type": "Float", 
                "houdini_label": "Max Frame", 
                "moonray_name": "max_frame", 
                "order": 1, 
                "aliases": [
                    "max frame"
                ]
            }, 
            "checkpoint_post_script": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "checkpoint_post_script", 
                "help": "This defines the file name of a Lua script executed after every checkpoint file has been written, which is run in parallel with the ongoing MCRT threads. See further documentation for MoonRay-provided Lua variables accessible within the script.", 
                "moonray_type": "String", 
                "houdini_label": "Checkpoint Post Script", 
                "moonray_name": "checkpoint_post_script", 
                "order": 72, 
                "aliases": [
                    "checkpoint post script"
                ]
            }, 
            "deep_id_attribute_names": {
                "default_value": [], 
                "houdini_name": "deep_id_attribute_names", 
                "help": "Names of primitive attributes containing deep IDs", 
                "moonray_type": "StringVector", 
                "houdini_label": "Deep Id Attribute Names", 
                "moonray_name": "deep_id_attribute_names", 
                "order": 57, 
                "aliases": [
                    "deep ID attribute names"
                ]
            }, 
            "volume_illumination_samples": {
                "default_value": [
                    4
                ], 
                "houdini_name": "volume_illumination_samples", 
                "help": "Sample number along the ray when computing volume scattering radiance towards the eye. Set to 0 to turn off volume lighting completely.", 
                "moonray_type": "Int", 
                "houdini_label": "Volume Illumination Samples", 
                "moonray_name": "volume_illumination_samples", 
                "order": 40, 
                "aliases": [
                    "volume illumination samples"
                ]
            }, 
            "volume_opacity_threshold": {
                "default_value": [
                    0.995
                ], 
                "houdini_name": "volume_opacity_threshold", 
                "help": "As a ray travels through volume regions, it will accumulate the amount of opacity. When the value exceeds volume opacity threshold the renderer will stop the further volume integration along this ray.", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Opacity Threshold", 
                "moonray_name": "volume_opacity_threshold", 
                "order": 41, 
                "aliases": [
                    "volume opacity threshold"
                ]
            }, 
            "checkpoint_overwrite": {
                "default_value": [
                    true
                ], 
                "houdini_name": "checkpoint_overwrite", 
                "help": "If true, the last checkpoint file is overwritten when writing out the checkpoint file. If false, the checkpoint filename is appended with the total number of samples, resulting in the retention of all checkpoint files.", 
                "moonray_type": "Bool", 
                "houdini_label": "Checkpoint Overwrite", 
                "moonray_name": "checkpoint_overwrite", 
                "order": 68, 
                "aliases": [
                    "checkpoint overwrite"
                ]
            }, 
            "checkpoint_tile_order": {
                "default_value": [
                    4
                ], 
                "houdini_name": "checkpoint_tile_order", 
                "moonray_type": "Int", 
                "menu": [
                    "top", 
                    "bottom", 
                    "left", 
                    "right", 
                    "morton", 
                    "random", 
                    "spiral square", 
                    "spiral rect"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5", 
                    "6", 
                    "7"
                ], 
                "houdini_label": "Checkpoint Tile Order", 
                "moonray_name": "checkpoint_tile_order", 
                "order": 99, 
                "aliases": [
                    "checkpoint tile order"
                ]
            }, 
            "propagate_visibility_bounce_type": {
                "default_value": [
                    false
                ], 
                "houdini_name": "propagate_visibility_bounce_type", 
                "help": "turns on/off propagation for ray visibility masks", 
                "moonray_type": "Bool", 
                "houdini_label": "Propagate Visibility Bounce Type", 
                "moonray_name": "propagate_visibility_bounce_type", 
                "order": 89, 
                "aliases": [
                    "propagate visibility bounce type"
                ]
            }, 
            "volume_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "volume_quality", 
                "help": "Controls the overall quality of volume rendering. The higher number gives better volume shape detail and more accurate scattering integration result.", 
                "moonray_type": "Float", 
                "houdini_label": "Volume Quality", 
                "moonray_name": "volume_quality", 
                "order": 38, 
                "aliases": [
                    "volume quality"
                ]
            }, 
            "bssrdf_samples": {
                "default_value": [
                    2
                ], 
                "houdini_name": "bssrdf_samples", 
                "moonray_type": "Int", 
                "houdini_label": "Bssrdf Samples", 
                "moonray_name": "bssrdf_samples", 
                "order": 24, 
                "aliases": [
                    "bssrdf samples"
                ]
            }, 
            "sub_viewport": {
                "default_value": [
                    -2147483648, 
                    -2147483648, 
                    -2147483648, 
                    -2147483648
                ], 
                "houdini_name": "sub_viewport", 
                "help": "Subviewport of region window. Coordinate (0,0) maps to left, bottom of region window", 
                "moonray_type": "IntVector", 
                "houdini_label": "Sub Viewport", 
                "moonray_name": "sub_viewport", 
                "order": 12, 
                "aliases": [
                    "sub viewport"
                ]
            }, 
            "max_volume_depth": {
                "default_value": [
                    1
                ], 
                "houdini_name": "max_volume_depth", 
                "moonray_type": "Int", 
                "houdini_label": "Max Volume Depth", 
                "moonray_name": "max_volume_depth", 
                "order": 29, 
                "aliases": [
                    "max volume depth"
                ]
            }, 
            "checkpoint_max_snapshot_overhead": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "checkpoint_max_snapshot_overhead", 
                "help": "Specify max fraction of snapshot overhead threshold for extra snapshot action regarding unexpected interruption by SIGINT. This value is fraction. If this value is ZERO or negative, no extra snapshot action is executed and no checkpoint file is generated when SIGINT is received.", 
                "moonray_type": "Float", 
                "houdini_label": "Checkpoint Max Snapshot Overhead", 
                "moonray_name": "checkpoint_max_snapshot_overhead", 
                "order": 75, 
                "aliases": [
                    "checkpoint max snapshot overhead"
                ]
            }, 
            "two_stage_output": {
                "default_value": [
                    true
                ], 
                "houdini_name": "two_stage_output", 
                "help": "Selection of image file write uses two stage output logic or not. Two stage output (=true: default) is that the image file is written out to temporary file location first and copy/rename next. This solution greatly reduces the risk of output data collapsing from unexpected render process termination for both of final output and checkpoint output. Temporary file directory is defined by tmp_dir scene_variable.", 
                "moonray_type": "Bool", 
                "houdini_label": "Two Stage Output", 
                "moonray_name": "two_stage_output", 
                "order": 102, 
                "aliases": [
                    "two stage output"
                ]
            }, 
            "enable_max_geometry_resolution": {
                "default_value": [
                    false
                ], 
                "houdini_name": "enable_max_geometry_resolution", 
                "moonray_type": "Bool", 
                "houdini_label": "Enable Max Geometry Resolution", 
                "moonray_name": "enable_max_geometry_resolution", 
                "order": 82, 
                "aliases": [
                    "enable max geometry resolution"
                ]
            }
        }, 
        "folders_with_parms": {
            "Image Size": [
                "image_width", 
                "image_height", 
                "res", 
                "aperture_window", 
                "region_window", 
                "sub_viewport"
            ], 
            "Filtering": [
                "texture_blur", 
                "pixel_filter_width", 
                "pixel_filter"
            ], 
            "Logging": [
                "debug", 
                "info", 
                "warning", 
                "error", 
                "fatal_color", 
                "stats_file", 
                "athena_debug"
            ], 
            "Resume Render": [
                "resumable_output", 
                "resume_render", 
                "on_resume_script"
            ], 
            "Fireflies Removal": [
                "sample_clamping_value", 
                "sample_clamping_depth", 
                "roughness_clamping_factor"
            ], 
            "Deep Images": [
                "deep_format", 
                "deep_curvature_tolerance", 
                "deep_z_tolerance", 
                "deep_vol_compression_res", 
                "deep_id_attribute_names", 
                "deep_max_layers", 
                "deep_layer_bias"
            ], 
            "Frame": [
                "min_frame", 
                "max_frame", 
                "frame"
            ], 
            "Path Guide": [
                "path_guide_enable"
            ], 
            "Driver": [
                "threads", 
                "machine_id", 
                "num_machines", 
                "task_distribution_type", 
                "interactive_mode", 
                "progressive_shading", 
                "output_file", 
                "tmp_dir"
            ], 
            "Sampling": [
                "pixel_samples", 
                "light_samples", 
                "bsdf_samples", 
                "bsdf_sampler_strategy", 
                "bssrdf_samples", 
                "max_depth", 
                "max_diffuse_depth", 
                "max_glossy_depth", 
                "max_mirror_depth", 
                "max_presence_depth", 
                "max_hair_depth", 
                "disable_optimized_hair_sampling", 
                "max_subsurface_per_path", 
                "russian_roulette_threshold", 
                "transparency_threshold", 
                "presence_threshold", 
                "lock_frame_noise"
            ], 
            "Checkpoint": [
                "checkpoint_active", 
                "checkpoint_interval", 
                "checkpoint_quality_steps", 
                "checkpoint_time_cap", 
                "checkpoint_sample_cap", 
                "checkpoint_overwrite", 
                "checkpoint_mode", 
                "checkpoint_start_sample", 
                "checkpoint_bg_write", 
                "checkpoint_post_script", 
                "checkpoint_total_files", 
                "checkpoint_max_bgcache", 
                "checkpoint_max_snapshot_overhead", 
                "checkpoint_snapshot_interval"
            ], 
            "Debug": [
                "debug_pixel", 
                "debug_rays_file", 
                "debug_rays_primary_range", 
                "debug_rays_depth_range", 
                "debug_console", 
                "validate_geometry"
            ], 
            "Motion and Scale": [
                "motion_steps", 
                "scene_scale"
            ], 
            "Volumes": [
                "max_volume_depth", 
                "volume_quality", 
                "volume_shadow_quality", 
                "volume_illumination_samples", 
                "volume_opacity_threshold", 
                "volume_overlap_mode", 
                "volume_attenuation_factor", 
                "volume_contribution_factor", 
                "volume_phase_attenuation_factor"
            ], 
            "Caching": [
                "texture_cache_size", 
                "texture_file_handles", 
                "fast_geometry_update"
            ], 
            "Global Toggles": [
                "enable_motion_blur", 
                "enable_dof", 
                "enable_max_geometry_resolution", 
                "max_geometry_resolution", 
                "enable_displacement", 
                "enable_subsurface_scattering", 
                "enable_shadowing", 
                "enable_presence_shadows", 
                "lights_visible_in_camera", 
                "propagate_visibility_bounce_type", 
                "shadow_terminator_fix", 
                "correct_reflections_in_medium"
            ], 
            "Camera and Layer": [
                "camera", 
                "dicing_camera", 
                "layer"
            ], 
            "Metadata": [
                "exr_header_attributes"
            ]
        }
    }, 
    "DwaVelvetMaterial_v2": {
        "moonray_type": "DwaBaseLayerable", 
        "moonray_name": "DwaVelvetMaterial_v2", 
        "folders_sorted": [
            "Fuzz", 
            "Glitter", 
            "Diffuse", 
            "Emission", 
            "Normal", 
            "Common"
        ], 
        "parms": {
            "casts_caustics": {
                "default_value": [
                    false
                ], 
                "houdini_name": "casts_caustics", 
                "help": "allows continuation of caustic light paths.", 
                "moonray_type": "Bool", 
                "houdini_label": "Casts Caustics", 
                "moonray_name": "casts_caustics", 
                "order": 48, 
                "aliases": [
                    "casts caustics"
                ]
            }, 
            "presence": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "presence", 
                "help": "controls the visibility of this object. Useful for fading an object in/out, or to specify a cut-out mask on thin single-sided geometry (eg. a complex leaf texture on a simple card).", 
                "moonray_type": "Float", 
                "houdini_label": "Presence", 
                "bindable": true, 
                "moonray_name": "presence", 
                "order": 46
            }, 
            "glitter_layering_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_layering_mode", 
                "help": "layering mode for glitter on top of the under material. physical: conserves energy and glitter attenuates under material, additive: breaks energy conservation but glitter is never darker than the under material (eg. use case: snow)", 
                "moonray_type": "Int", 
                "menu": [
                    "physical", 
                    "additive"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Layering Mode", 
                "moonray_name": "glitter_layering_mode", 
                "order": 16
            }, 
            "glitter_space": {
                "default_value": [
                    5
                ], 
                "houdini_name": "glitter_space", 
                "help": "The space to calculate the worley noise in, defaults to reference space", 
                "moonray_type": "Int", 
                "menu": [
                    "object", 
                    "reference"
                ], 
                "menu_values": [
                    "4", 
                    "5"
                ], 
                "houdini_label": "Space", 
                "moonray_name": "glitter_space", 
                "order": 13
            }, 
            "glitter_color_value_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_value_variation", 
                "help": "introduce value variation in flake color centered at the base flake color's value", 
                "moonray_type": "Float", 
                "houdini_label": "Color Value Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_value_variation", 
                "order": 30
            }, 
            "fuzz_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "fuzz_normal", 
                "help": "specifies an independent shading normal (normal map) for the fuzz lobe", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Normal", 
                "interface": "NormalMap", 
                "moonray_name": "fuzz_normal", 
                "order": 8, 
                "aliases": [
                    "fuzz normal"
                ]
            }, 
            "glitter_texture_B": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_B", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture B", 
                "moonray_name": "glitter_texture_B", 
                "order": 26
            }, 
            "glitter_texture_A": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "glitter_texture_A", 
                "help": "filename that points to a texture .exr or .tx file (must be mip-mapped and tiled with maketx).", 
                "is_filepath": true, 
                "moonray_type": "String", 
                "houdini_label": "Texture A", 
                "moonray_name": "glitter_texture_A", 
                "order": 21
            }, 
            "fuzz_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz_normal_dial", 
                "help": "controls the amount of infuence of the alternate fuzz normal", 
                "moonray_type": "Float", 
                "houdini_label": "Normal Dial", 
                "bindable": true, 
                "moonray_name": "fuzz_normal_dial", 
                "order": 9
            }, 
            "glitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter", 
                "help": "enables/disables glitter model (binary 0|1 for plausibility)", 
                "moonray_type": "Float", 
                "houdini_label": "Glitter", 
                "bindable": true, 
                "moonray_name": "glitter", 
                "order": 11
            }, 
            "albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "albedo", 
                "help": "the overall surface color as seen from a distance (ie. diffuse color)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "albedo", 
                "order": 37
            }, 
            "glitter_style_A_frequency": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_style_A_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style A Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_A_frequency", 
                "order": 17
            }, 
            "thin_geometry": {
                "default_value": [
                    false
                ], 
                "houdini_name": "thin_geometry", 
                "help": "enables proper shading of infinitely thin geometry such as paper or leaves.", 
                "moonray_type": "Bool", 
                "houdini_label": "Thin Geometry", 
                "moonray_name": "thin_geometry", 
                "order": 47, 
                "aliases": [
                    "thin geometry"
                ]
            }, 
            "glitter_seed": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_seed", 
                "help": "The seed for the glitter random number generator", 
                "moonray_type": "Int", 
                "houdini_label": "Seed", 
                "moonray_name": "glitter_seed", 
                "order": 12
            }, 
            "diffuse_transmission_blending_behavior": {
                "default_value": [
                    1
                ], 
                "houdini_name": "diffuse_transmission_blending_behavior", 
                "help": "Controls how diffuse transmission color attenuates diffuse reflection", 
                "moonray_type": "Int", 
                "menu": [
                    "RGB", 
                    "Monochromatic"
                ], 
                "menu_values": [
                    "0", 
                    "1"
                ], 
                "houdini_label": "Transmission Blending Behavior", 
                "moonray_name": "diffuse_transmission_blending_behavior", 
                "order": 41, 
                "aliases": [
                    "translucent_diffuse_blending_behavior"
                ]
            }, 
            "glitter_size_B": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_B", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size B", 
                "bindable": true, 
                "moonray_name": "glitter_size_B", 
                "order": 23
            }, 
            "glitter_size_A": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_size_A", 
                "help": "size of the flakes.  Apparent flake size may vary based on how much the flake spheres intersect the surface", 
                "moonray_type": "Float", 
                "houdini_label": "Size A", 
                "bindable": true, 
                "moonray_name": "glitter_size_A", 
                "order": 18
            }, 
            "glitter_debug_mode": {
                "default_value": [
                    0
                ], 
                "houdini_name": "glitter_debug_mode", 
                "help": "developer debug visualization modes", 
                "moonray_type": "Int", 
                "menu": [
                    "off", 
                    "blend", 
                    "color", 
                    "averageColor", 
                    "footprintArea", 
                    "radius"
                ], 
                "menu_values": [
                    "0", 
                    "1", 
                    "2", 
                    "3", 
                    "4", 
                    "5"
                ], 
                "houdini_label": "Debug Mode", 
                "moonray_name": "glitter_debug_mode", 
                "order": 35
            }, 
            "label": {
                "default_value": [
                    ""
                ], 
                "houdini_name": "label", 
                "help": "label used in material and light aovs", 
                "moonray_type": "String", 
                "houdini_label": "Label", 
                "moonray_name": "label", 
                "order": 1
            }, 
            "priority": {
                "default_value": [
                    0
                ], 
                "houdini_name": "priority", 
                "help": "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material.", 
                "moonray_type": "Int", 
                "houdini_label": "Priority", 
                "moonray_name": "priority", 
                "order": 2, 
                "aliases": [
                    "priority"
                ]
            }, 
            "fuzz_coverage": {
                "default_value": [
                    0.25
                ], 
                "houdini_name": "fuzz_coverage", 
                "help": "Lower values result in glancing angle highlights while higher values result in a broad, uniform coverage", 
                "moonray_type": "Float", 
                "houdini_label": "Coverage", 
                "bindable": true, 
                "moonray_name": "fuzz_coverage", 
                "order": 5
            }, 
            "glitter_approximate_for_secondary_rays": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_approximate_for_secondary_rays", 
                "help": "use an approximation to shade glitter for non-mirror secondary rays", 
                "moonray_type": "Bool", 
                "houdini_label": "Approximate For Secondary Rays", 
                "moonray_name": "glitter_approximate_for_secondary_rays", 
                "order": 33
            }, 
            "glitter_texture_orientation_randomness": {
                "default_value": [
                    0.15
                ], 
                "houdini_name": "glitter_texture_orientation_randomness", 
                "help": "randomly orient each texture", 
                "moonray_type": "Float", 
                "houdini_label": "Texture Orientation Randomness", 
                "moonray_name": "glitter_texture_orientation_randomness", 
                "order": 27
            }, 
            "extra_aovs": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "extra_aovs", 
                "help": "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Extra Aovs", 
                "interface": "Map", 
                "moonray_name": "extra_aovs", 
                "order": 0
            }, 
            "show_diffuse": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_diffuse", 
                "help": "enables/disables diffuse reflectance", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Diffuse", 
                "moonray_name": "show_diffuse", 
                "order": 36, 
                "aliases": [
                    "show diffuse"
                ]
            }, 
            "glitter_LOD_quality": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_LOD_quality", 
                "help": "controls quality of glitter at distances where individual flakes cannot be perceived; at lower values, approximation kicks in earlier", 
                "moonray_type": "Float", 
                "houdini_label": "LOD Quality", 
                "moonray_name": "glitter_LOD_quality", 
                "order": 34, 
                "aliases": [
                    "dense glitter LOD quality"
                ]
            }, 
            "glitter_jitter": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_jitter", 
                "help": "Controls how much the flakes are randomly offset from a regular grid", 
                "moonray_type": "Float", 
                "houdini_label": "Jitter", 
                "bindable": true, 
                "moonray_name": "glitter_jitter", 
                "order": 31
            }, 
            "fuzz_albedo": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "fuzz_albedo", 
                "help": "Color of the fuzz highlights.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Albedo", 
                "bindable": true, 
                "moonray_name": "fuzz_albedo", 
                "order": 6
            }, 
            "show_glitter": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_glitter", 
                "help": "Enables/disables glitter lobes", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Glitter", 
                "moonray_name": "show_glitter", 
                "order": 10
            }, 
            "glitter_color_saturation_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_saturation_variation", 
                "help": "introduce saturation variation in flake color centered at the base flake color's saturation", 
                "moonray_type": "Float", 
                "houdini_label": "Color Saturation Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_saturation_variation", 
                "order": 29, 
                "aliases": [
                    "flake color saturation variation"
                ]
            }, 
            "show_emission": {
                "default_value": [
                    false
                ], 
                "houdini_name": "show_emission", 
                "help": "enables/disable emission", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Emission", 
                "moonray_name": "show_emission", 
                "order": 42, 
                "aliases": [
                    "show emission"
                ]
            }, 
            "emission": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "emission", 
                "help": "the energy emitted from this material", 
                "moonray_type": "Rgb", 
                "houdini_label": "Emission", 
                "bindable": true, 
                "moonray_name": "emission", 
                "order": 43, 
                "aliases": [
                    "emission color", 
                    "emission_color"
                ]
            }, 
            "glitter_density": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "glitter_density", 
                "help": "controls the number of flakes per unit length; larger density packs more flakes into same space", 
                "moonray_type": "Float", 
                "houdini_label": "Density", 
                "bindable": true, 
                "moonray_name": "glitter_density", 
                "order": 14
            }, 
            "input_normal": {
                "default_value": [], 
                "fake_bind": true, 
                "houdini_name": "input_normal", 
                "help": "specifies an alternate shading normal in the tangent frame (normal map)", 
                "moonray_type": "SceneObject*", 
                "houdini_label": "Input Normal", 
                "interface": "NormalMap", 
                "moonray_name": "input_normal", 
                "order": 44, 
                "aliases": [
                    "input normal"
                ]
            }, 
            "glitter_color_A": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_A", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color A", 
                "bindable": true, 
                "moonray_name": "glitter_color_A", 
                "order": 20
            }, 
            "glitter_color_B": {
                "default_value": [
                    1.0, 
                    1.0, 
                    1.0
                ], 
                "houdini_name": "glitter_color_B", 
                "help": "base flake color (use physical metallic color values)", 
                "moonray_type": "Rgb", 
                "houdini_label": "Color B", 
                "bindable": true, 
                "moonray_name": "glitter_color_B", 
                "order": 25
            }, 
            "diffuse_roughness": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "diffuse_roughness", 
                "help": "Roughness of the diffuse shading.  If the value is zero a Lambertian model is used.  If it's above zero the Oren Nayar model is used.   Not compatible with subsurface scattering.", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness", 
                "bindable": true, 
                "moonray_name": "diffuse_roughness", 
                "order": 38
            }, 
            "glitter_compensate_reference_space_deformation": {
                "default_value": [
                    true
                ], 
                "houdini_name": "glitter_compensate_reference_space_deformation", 
                "help": "(In ReferenceSpace) Compensates for stretch/compression/shear in glitter shapes resulting from animation etc", 
                "moonray_type": "Bool", 
                "houdini_label": "Compensate Reference Space Deformation", 
                "moonray_name": "glitter_compensate_reference_space_deformation", 
                "order": 32
            }, 
            "show_fuzz": {
                "default_value": [
                    true
                ], 
                "houdini_name": "show_fuzz", 
                "help": "Enables/disables fuzz lobe", 
                "moonray_type": "Bool", 
                "houdini_label": "Show Fuzz", 
                "moonray_name": "show_fuzz", 
                "order": 3
            }, 
            "use_absorbing_fuzz_fibers": {
                "default_value": [
                    false
                ], 
                "houdini_name": "use_absorbing_fuzz_fibers", 
                "help": "Specify whether dark fuzz fibers absorb energy or transmit it to the layers below.", 
                "moonray_type": "Bool", 
                "houdini_label": "Use Absorbing Fuzz Fibers", 
                "moonray_name": "use_absorbing_fuzz_fibers", 
                "order": 7
            }, 
            "glitter_color_hue_variation": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_color_hue_variation", 
                "help": "introduce hue variation in flake color centered at the base flake color's hue on the hue wheel", 
                "moonray_type": "Float", 
                "houdini_label": "Color Hue Variation", 
                "bindable": true, 
                "moonray_name": "glitter_color_hue_variation", 
                "order": 28, 
                "aliases": [
                    "flake color hue variation"
                ]
            }, 
            "glitter_style_B_frequency": {
                "default_value": [
                    0.0
                ], 
                "houdini_name": "glitter_style_B_frequency", 
                "help": "0 implies none of this style, 1 implies all the flakes will get this style", 
                "moonray_type": "Float", 
                "houdini_label": "Style B Frequency", 
                "bindable": true, 
                "moonray_name": "glitter_style_B_frequency", 
                "order": 22
            }, 
            "diffuse_transmission_color": {
                "default_value": [
                    0.0, 
                    0.0, 
                    0.0
                ], 
                "houdini_name": "diffuse_transmission_color", 
                "help": "the color/amount of light that is transmitted through the surface.", 
                "moonray_type": "Rgb", 
                "houdini_label": "Transmission Color", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission_color", 
                "order": 40, 
                "aliases": [
                    "translucent_diffuse", 
                    "translucent diffuse"
                ]
            }, 
            "input_normal_dial": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "input_normal_dial", 
                "help": "controls the amount of influence of the alternate normal", 
                "moonray_type": "Float", 
                "houdini_label": "Input Normal Dial", 
                "bindable": true, 
                "moonray_name": "input_normal_dial", 
                "order": 45, 
                "aliases": [
                    "input normal dial"
                ]
            }, 
            "diffuse_transmission": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "diffuse_transmission", 
                "help": "multiplier on the amount of light that is transmitted through the surface.", 
                "moonray_type": "Float", 
                "houdini_label": "Transmission", 
                "bindable": true, 
                "moonray_name": "diffuse_transmission", 
                "order": 39
            }, 
            "fuzz": {
                "default_value": [
                    1.0
                ], 
                "houdini_name": "fuzz", 
                "help": "fuzz mask", 
                "moonray_type": "Float", 
                "houdini_label": "Fuzz", 
                "bindable": true, 
                "moonray_name": "fuzz", 
                "order": 4
            }, 
            "glitter_roughness_B": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_B", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness B", 
                "moonray_name": "glitter_roughness_B", 
                "order": 24
            }, 
            "glitter_roughness_A": {
                "default_value": [
                    0.14
                ], 
                "houdini_name": "glitter_roughness_A", 
                "help": "specular roughness of individual flakes (0 makes flakes mirror-like)", 
                "moonray_type": "Float", 
                "houdini_label": "Roughness A", 
                "moonray_name": "glitter_roughness_A", 
                "order": 19
            }, 
            "glitter_randomness": {
                "default_value": [
                    0.5
                ], 
                "houdini_name": "glitter_randomness", 
                "help": "randomness of flake orientation", 
                "moonray_type": "Float", 
                "houdini_label": "Randomness", 
                "moonray_name": "glitter_randomness", 
                "order": 15
            }
        }, 
        "folders_with_parms": {
            "Normal": [
                "input_normal", 
                "input_normal_dial"
            ], 
            "Emission": [
                "show_emission", 
                "emission"
            ], 
            "Fuzz": [
                "show_fuzz", 
                "fuzz", 
                "fuzz_coverage", 
                "fuzz_albedo", 
                "use_absorbing_fuzz_fibers", 
                "fuzz_normal", 
                "fuzz_normal_dial"
            ], 
            "Common": [
                "presence", 
                "thin_geometry", 
                "casts_caustics"
            ], 
            "Glitter": [
                "show_glitter", 
                "glitter", 
                "glitter_seed", 
                "glitter_space", 
                "glitter_density", 
                "glitter_randomness", 
                "glitter_layering_mode", 
                "glitter_style_A_frequency", 
                "glitter_size_A", 
                "glitter_roughness_A", 
                "glitter_color_A", 
                "glitter_texture_A", 
                "glitter_style_B_frequency", 
                "glitter_size_B", 
                "glitter_roughness_B", 
                "glitter_color_B", 
                "glitter_texture_B", 
                "glitter_texture_orientation_randomness", 
                "glitter_color_hue_variation", 
                "glitter_color_saturation_variation", 
                "glitter_color_value_variation", 
                "glitter_jitter", 
                "glitter_compensate_reference_space_deformation", 
                "glitter_approximate_for_secondary_rays", 
                "glitter_LOD_quality", 
                "glitter_debug_mode"
            ], 
            "Diffuse": [
                "show_diffuse", 
                "albedo", 
                "diffuse_roughness", 
                "diffuse_transmission", 
                "diffuse_transmission_color", 
                "diffuse_transmission_blending_behavior"
            ]
        }
    }
}