#include "$HFS/houdini/soho/parameters/CommonMacros.ds"
{
    name	parameters
    group {
        name    "folder"
        label   "Advanced"

        parm {
            name    "xn__inputsuse_per_channel_saturation_control_75b"
            label   "inputs:use_per_channel_saturation"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsuse_per_channel_saturation_6sb"
            label   "Use Per Channel Saturation"
            type    toggle
            default { "0" }
            help    "enables separate RGB controls for saturation"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsuse_per_channel_saturation_control_75b == block } { xn__inputsuse_per_channel_saturation_control_75b == none }"
            parmtag { "usdvaluetype" "bool" }
        }
        parm {
            name    "xn__inputssaturation_r_control_fjb"
            label   "inputs:saturation_r"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputssaturation_r_e5a"
            label   "Saturation R"
            type    float
            default { "1" }
            help    "desaturates the red channel input below 1.0 and adds saturation above 1.0"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputssaturation_r_control_fjb == block } { xn__inputssaturation_r_control_fjb == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputssaturation_g_control_fjb"
            label   "inputs:saturation_g"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputssaturation_g_e5a"
            label   "Saturation G"
            type    float
            default { "1" }
            help    "desaturates the green channel input below 1.0 and adds saturation above 1.0"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputssaturation_g_control_fjb == block } { xn__inputssaturation_g_control_fjb == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputssaturation_b_control_fjb"
            label   "inputs:saturation_b"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputssaturation_b_e5a"
            label   "Saturation B"
            type    float
            default { "1" }
            help    "desaturates the blue channel input below 1.0 and adds saturation above 1.0"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputssaturation_b_control_fjb == block } { xn__inputssaturation_b_control_fjb == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsuse_per_channel_contrast_control_y2b"
            label   "inputs:use_per_channel_contrast"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsuse_per_channel_contrast_xpb"
            label   "Use Per Channel Contrast"
            type    toggle
            default { "0" }
            help    "enables separate RGB controls for contrast"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsuse_per_channel_contrast_control_y2b == block } { xn__inputsuse_per_channel_contrast_control_y2b == none }"
            parmtag { "usdvaluetype" "bool" }
        }
        parm {
            name    "xn__inputscontrast_r_control_5fb"
            label   "inputs:contrast_r"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputscontrast_r_41a"
            label   "Contrast R"
            type    float
            default { "0" }
            help    "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the red channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputscontrast_r_control_5fb == block } { xn__inputscontrast_r_control_5fb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputscontrast_g_control_5fb"
            label   "inputs:contrast_g"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputscontrast_g_41a"
            label   "Contrast G"
            type    float
            default { "0" }
            help    "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the green channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputscontrast_g_control_5fb == block } { xn__inputscontrast_g_control_5fb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputscontrast_b_control_5fb"
            label   "inputs:contrast_b"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputscontrast_b_41a"
            label   "Contrast B"
            type    float
            default { "0" }
            help    "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance for the blue channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputscontrast_b_control_5fb == block } { xn__inputscontrast_b_control_5fb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsuse_per_channel_gamma_control_2xb"
            label   "inputs:use_per_channel_gamma"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsuse_per_channel_gamma_1kb"
            label   "Use Per Channel Gamma"
            type    toggle
            default { "0" }
            help    "enables separate RGB controls for gamma"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsuse_per_channel_gamma_control_2xb == block } { xn__inputsuse_per_channel_gamma_control_2xb == none }"
            parmtag { "usdvaluetype" "bool" }
        }
        parm {
            name    "xn__inputsgamma_r_control_99a"
            label   "inputs:gamma_r"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgamma_r_8wa"
            label   "Gamma R"
            type    float
            default { "1" }
            help    "raises the red channel to the specified exponents"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgamma_r_control_99a == block } { xn__inputsgamma_r_control_99a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsgamma_g_control_99a"
            label   "inputs:gamma_g"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgamma_g_8wa"
            label   "Gamma G"
            type    float
            default { "1" }
            help    "raises the green channel to the specified exponents"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgamma_g_control_99a == block } { xn__inputsgamma_g_control_99a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsgamma_b_control_99a"
            label   "inputs:gamma_b"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgamma_b_8wa"
            label   "Gamma B"
            type    float
            default { "1" }
            help    "raises the blue channel to the specified exponents"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgamma_b_control_99a == block } { xn__inputsgamma_b_control_99a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsuse_per_channel_gain_offset_control_u7b"
            label   "inputs:use_per_channel_gain_offset"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsuse_per_channel_gain_offset_tub"
            label   "Use Per Channel Gain Offset"
            type    toggle
            default { "0" }
            help    "enables separate RGB controls for gain and offset"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsuse_per_channel_gain_offset_control_u7b == block } { xn__inputsuse_per_channel_gain_offset_control_u7b == none }"
            parmtag { "usdvaluetype" "bool" }
        }
        parm {
            name    "xn__inputsgain_r_control_n8a"
            label   "inputs:gain_r"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgain_r_mva"
            label   "Gain R"
            type    float
            default { "1" }
            help    "multiplies the red channel by the specified values"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgain_r_control_n8a == block } { xn__inputsgain_r_control_n8a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsgain_g_control_n8a"
            label   "inputs:gain_g"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgain_g_mva"
            label   "Gain G"
            type    float
            default { "1" }
            help    "multiplies the green channel by the specified values"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgain_g_control_n8a == block } { xn__inputsgain_g_control_n8a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsgain_b_control_n8a"
            label   "inputs:gain_b"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsgain_b_mva"
            label   "Gain B"
            type    float
            default { "1" }
            help    "multiplies the blue channel by the specified values"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgain_b_control_n8a == block } { xn__inputsgain_b_control_n8a == none }"
            range   { 0 4 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsoffset_r_control_wcb"
            label   "inputs:offset_r"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsoffset_r_vya"
            label   "Offset R"
            type    float
            default { "1" }
            help    "adds the specified values to the red channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsoffset_r_control_wcb == block } { xn__inputsoffset_r_control_wcb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsoffset_g_control_wcb"
            label   "inputs:offset_g"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsoffset_g_vya"
            label   "Offset G"
            type    float
            default { "1" }
            help    "adds the specified values to the green channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsoffset_g_control_wcb == block } { xn__inputsoffset_g_control_wcb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
        parm {
            name    "xn__inputsoffset_b_control_wcb"
            label   "inputs:offset_b"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsoffset_b_vya"
            label   "Offset B"
            type    float
            default { "1" }
            help    "adds the specified values to the blue channel"
            disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsoffset_b_control_wcb == block } { xn__inputsoffset_b_control_wcb == none }"
            range   { -1 1 }
            parmtag { "usdvaluetype" "float" }
        }
    }

    parm {
        name    "xn__inputsinput_control_06a"
        label   "inputs:input"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsinput_zta"
        label   "Input"
        type    color
        size    3
        default { "1" "1" "1" }
        help    "bind the input here"
        disablewhen "{ xn__inputsinput_control_06a == block } { xn__inputsinput_control_06a == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "color3f" }
    }
    parm {
        name    "xn__inputson_control_41a"
        label   "inputs:on"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputson_3oa"
        label   "On"
        type    toggle
        default { "1" }
        help    "enables/disables all color correct operations"
        disablewhen "{ xn__inputson_control_41a == block } { xn__inputson_control_41a == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsmix_control_r3a"
        label   "inputs:mix"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsmix_qqa"
        label   "Mix"
        type    float
        default { "1" }
        help    "how much of the overall color correct to mix in"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsmix_control_r3a == block } { xn__inputsmix_control_r3a == none }"
        range   { 0 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsclamp_control_06a"
        label   "inputs:clamp"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsclamp_zta"
        label   "Clamp"
        type    toggle
        default { "1" }
        help    "enables/disables clamping of the output values."
        disablewhen "{ xn__inputsclamp_control_06a == block } { xn__inputsclamp_control_06a == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsclamp_min_control_jeb"
        label   "inputs:clamp_min"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsclamp_min_i0a"
        label   "Clamp Min"
        type    float
        default { "0" }
        help    "the minimum value output by this map when 'clamp' is enabled"
        disablewhen "{ xn__inputsclamp_min_control_jeb == block } { xn__inputsclamp_min_control_jeb == none }"
        range   { 0 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsclamp_max_control_jeb"
        label   "inputs:clamp_max"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsclamp_max_i0a"
        label   "Clamp Max"
        type    float
        default { "1" }
        help    "the maximum value output by this map when 'clamp' is enabled"
        disablewhen "{ xn__inputsclamp_max_control_jeb == block } { xn__inputsclamp_max_control_jeb == none }"
        range   { 0 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputshue_shift_enabled_control_krb"
        label   "inputs:hue_shift_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputshue_shift_enabled_jeb"
        label   "Hue Shift Enabled"
        type    toggle
        default { "1" }
        help    "enables the hue_shift parameter"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputshue_shift_enabled_control_krb == block } { xn__inputshue_shift_enabled_control_krb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputshue_shift_control_jeb"
        label   "inputs:hue_shift"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputshue_shift_i0a"
        label   "Hue Shift"
        type    float
        default { "0" }
        help    "shifts the hue of the input (spectrum range is 0-1)"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputshue_shift_control_jeb == block } { xn__inputshue_shift_control_jeb == none }"
        range   { 0 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputssaturation_enabled_control_6sb"
        label   "inputs:saturation_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputssaturation_enabled_5fb"
        label   "Saturation Enabled"
        type    toggle
        default { "1" }
        help    "enables the saturation parameter"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputssaturation_enabled_control_6sb == block } { xn__inputssaturation_enabled_control_6sb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputssaturation_control_5fb"
        label   "inputs:saturation"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputssaturation_41a"
        label   "Saturation"
        type    float
        default { "1" }
        help    "desaturates the input below 1.0 and adds saturation above 1.0"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputssaturation_control_5fb == block } { xn__inputssaturation_control_5fb == none }"
        range   { 0 4 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputscontrast_enabled_control_xpb"
        label   "inputs:contrast_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputscontrast_enabled_wcb"
        label   "Contrast Enabled"
        type    toggle
        default { "1" }
        help    "enables the contrast parameter"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputscontrast_enabled_control_xpb == block } { xn__inputscontrast_enabled_control_xpb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputscontrast_control_wcb"
        label   "inputs:contrast"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputscontrast_vya"
        label   "Contrast"
        type    float
        default { "0" }
        help    "negative values reduce the difference in luminance towards grey and positive values increase the difference in luminance"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputscontrast_control_wcb == block } { xn__inputscontrast_control_wcb == none }"
        range   { -1 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsgamma_enabled_control_1kb"
        label   "inputs:gamma_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsgamma_enabled_06a"
        label   "Gamma Enabled"
        type    toggle
        default { "1" }
        help    "enables the gamma parameter"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgamma_enabled_control_1kb == block } { xn__inputsgamma_enabled_control_1kb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsgamma_control_06a"
        label   "inputs:gamma"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsgamma_zta"
        label   "Gamma"
        type    float
        default { "1" }
        help    "raises the input to the specified exponents"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgamma_control_06a == block } { xn__inputsgamma_control_06a == none }"
        range   { 0 4 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsgain_offset_enabled_control_tub"
        label   "inputs:gain_offset_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsgain_offset_enabled_shb"
        label   "Gain Offset Enabled"
        type    toggle
        default { "1" }
        help    "enables the gain and offset parameters"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgain_offset_enabled_control_tub == block } { xn__inputsgain_offset_enabled_control_tub == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsgain_control_e5a"
        label   "inputs:gain"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsgain_dsa"
        label   "Gain"
        type    float
        default { "1" }
        help    "multiplies the input channels by the specified values"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsgain_control_e5a == block } { xn__inputsgain_control_e5a == none }"
        range   { 0 4 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsoffset_control_n8a"
        label   "inputs:offset"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsoffset_mva"
        label   "Offset"
        type    float
        default { "0" }
        help    "adds the specified values to the input"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsoffset_control_n8a == block } { xn__inputsoffset_control_n8a == none }"
        range   { -1 1 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsTMI_enabled_control_shb"
        label   "inputs:TMI_enabled"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsTMI_enabled_r3a"
        label   "TMI Enabled"
        type    toggle
        default { "1" }
        help    "enables the TMI parameters"
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsTMI_enabled_control_shb == block } { xn__inputsTMI_enabled_control_shb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsTMI_control_r3a"
        label   "inputs:TMI"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsTMI_qqa"
        label   "TMI"
        type    vector
        size    3
        default { "0" "0" "0" }
        help    "T = Temperature where positive values push towards blue and negative towards red.   M = Magenta where positive values push towards magenta and negative towards green.  I = Intensity where negative values remove and positive values add energy "
        disablewhen "{ xn__inputson_3oa != 1 } { xn__inputsTMI_control_r3a == block } { xn__inputsTMI_control_r3a == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "color3f" }
    }
}
