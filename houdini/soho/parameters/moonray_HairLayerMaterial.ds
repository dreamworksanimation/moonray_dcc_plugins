#include "$HFS/houdini/soho/parameters/CommonMacros.ds"
{
    name	parameters
    group {
        name    "folder"
        label   "Advanced"

        parm {
            name    "xn__inputsblend_color_space_control_krb"
            label   "inputs:blend_color_space"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsblend_color_space_jeb"
            label   "Blend Color Space"
            type    string
            default { "RGB" }
            help    "Color space used when blending the two material's color parameters"
            disablewhen "{ xn__inputsblend_color_space_control_krb == block } { xn__inputsblend_color_space_control_krb == none }"
            menu {
                "RGB"   "RGB"
                "HSV"   "HSV"
                "HSL"   "HSL"
            }
            parmtag { "usdvaluetype" "token" }
        }
        parm {
            name    "xn__inputsfallback_bssrdf_control_bob"
            label   "inputs:fallback_bssrdf"
            type    string
            default { "none" }
            menujoin {
                "set"           "Set Or Create"
                "setexisting"   "Set if Exists"
                "block"         "Block"
                "none"          "Do Nothing"
            }
        }
        parm {
            name    "xn__inputsfallback_bssrdf_99a"
            label   "Fallback Bssrdf"
            type    string
            default { "normalized diffusion" }
            help    "If child materials disagree on the type of bssrdf, this type will be used instead."
            disablewhen "{ xn__inputsfallback_bssrdf_control_bob == block } { xn__inputsfallback_bssrdf_control_bob == none }"
            menu {
                "normalized diffusion"  "Normalized Diffusion"
                "dipole"                "Dipole"
            }
            parmtag { "usdvaluetype" "token" }
        }
    }

    parm {
        name    "xn__inputsextra_aovs_control_5fb"
        label   "inputs:extra_aovs"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsextra_aovs_41a"
        label   "Extra Aovs"
        type    oppath
        invisible
        default { "" }
        help    "Bind this attribute to a 'ListMap' that contains references to ExtraAovMaps that specify additional outputs that can be assigned to a RenderOutput \"light aov\" result"
        disablewhen "{ xn__inputsextra_aovs_control_5fb == block } { xn__inputsextra_aovs_control_5fb == none }"
        parmtag { "oprelative" "." }
        parmtag { "usdvaluetype" "token" }
    }
    parm {
        name    "xn__inputslabel_control_06a"
        label   "inputs:label"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputslabel_zta"
        label   "Label"
        type    string
        default { "" }
        help    "label used in material and light aovs"
        disablewhen "{ xn__inputslabel_control_06a == block } { xn__inputslabel_control_06a == none }"
        parmtag { "usdvaluetype" "string" }
    }
    parm {
        name    "xn__inputspriority_control_wcb"
        label   "inputs:priority"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputspriority_vya"
        label   "Priority"
        type    integer
        default { "0" }
        help    "The material's place in an order of precedence for overlapping dielectrics. A value of 0 means the priority should be ignored. Materials with lower numbers (higher priority) \"override\" materials with higher numbers (lower priority).  To enable automatic removal of self-overlapping geometry, a non-zero priority must be set on the geometry's material."
        disablewhen "{ xn__inputspriority_control_wcb == block } { xn__inputspriority_control_wcb == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "int" }
    }
    parm {
        name    "xn__inputshair_material_A_control_bob"
        label   "inputs:hair_material_A"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputshair_material_A_99a"
        label   "Hair Material A"
        type    oppath
        invisible
        default { "" }
        help    "foreground hair material"
        disablewhen "{ xn__inputshair_material_A_control_bob == block } { xn__inputshair_material_A_control_bob == none }"
        parmtag { "oprelative" "." }
        parmtag { "usdvaluetype" "token" }
    }
    parm {
        name    "xn__inputshair_material_B_control_bob"
        label   "inputs:hair_material_B"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputshair_material_B_99a"
        label   "Hair Material B"
        type    oppath
        invisible
        default { "" }
        help    "background hair material"
        disablewhen "{ xn__inputshair_material_B_control_bob == block } { xn__inputshair_material_B_control_bob == none }"
        parmtag { "oprelative" "." }
        parmtag { "usdvaluetype" "token" }
    }
    parm {
        name    "xn__inputsmask_control_e5a"
        label   "inputs:mask"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsmask_dsa"
        label   "Mask"
        type    float
        default { "1" }
        help    "foreground hair material weight"
        disablewhen "{ xn__inputsmask_control_e5a == block } { xn__inputsmask_control_e5a == none }"
        range   { 0 1 }
        parmtag { "usdvaluetype" "float" }
    }
}
