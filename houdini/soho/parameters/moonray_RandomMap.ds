#include "$HFS/houdini/soho/parameters/CommonMacros.ds"
{
    name	parameters
    parm {
        name    "xn__inputsinput_control_06a"
        label   "inputs:input"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsinput_zta"
        label   "Input"
        type    color
        size    3
        default { "1" "1" "1" }
        help    "the input color used as a base seed to generate the random value"
        disablewhen "{ xn__inputsinput_control_06a == block } { xn__inputsinput_control_06a == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "color3f" }
    }
    parm {
        name    "xn__inputsseed_control_e5a"
        label   "inputs:seed"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsseed_dsa"
        label   "Seed"
        type    integer
        default { "0" }
        help    "additional seed added to input for random number generator"
        disablewhen "{ xn__inputsseed_control_e5a == block } { xn__inputsseed_control_e5a == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "int" }
    }
    parm {
        name    "xn__inputsmonochrome_control_5fb"
        label   "inputs:monochrome"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsmonochrome_41a"
        label   "Monochrome"
        type    toggle
        default { "1" }
        help    "outputs the same color for all three channels"
        disablewhen "{ xn__inputsmonochrome_control_5fb == block } { xn__inputsmonochrome_control_5fb == none }"
        parmtag { "usdvaluetype" "bool" }
    }
    parm {
        name    "xn__inputsoutput_min_control_5fb"
        label   "inputs:output_min"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsoutput_min_41a"
        label   "Output Min"
        type    float
        default { "0" }
        help    "the minimum output random value"
        disablewhen "{ xn__inputsoutput_min_control_5fb == block } { xn__inputsoutput_min_control_5fb == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "float" }
    }
    parm {
        name    "xn__inputsoutput_max_control_5fb"
        label   "inputs:output_max"
        type    string
        default { "none" }
        menujoin {
            "set"           "Set Or Create"
            "setexisting"   "Set if Exists"
            "block"         "Block"
            "none"          "Do Nothing"
        }
    }
    parm {
        name    "xn__inputsoutput_max_41a"
        label   "Output Max"
        type    float
        default { "1" }
        help    "the maximum output random value"
        disablewhen "{ xn__inputsoutput_max_control_5fb == block } { xn__inputsoutput_max_control_5fb == none }"
        range   { 0 10 }
        parmtag { "usdvaluetype" "float" }
    }
}
